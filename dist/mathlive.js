(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):(global=global||self,global.MathLive=factory())})(this,function(){"use strict";const CR=0,LF=1,Control=2,Extend=3,Regional_Indicator=4,SpacingMark=5,L=6,V=7,T=8,LV=9,LVT=10,Other=11,Skin_Tone=12;function codePointAt(str,idx){idx=idx||0;const code=str.charCodeAt(idx);if(55296<=code&&code<=56319&&idx<str.length-1){const hi=code;const low=str.charCodeAt(idx+1);if(56320<=low&&low<=57343){return(hi-55296)*1024+(low-56320)+65536}return hi}if(56320<=code&&code<=57343&&idx>=1){const hi=str.charCodeAt(idx-1);const low=code;if(55296<=hi&&hi<=56319){return(hi-55296)*1024+(low-56320)+65536}return low}return code}function shouldBreak(previous,current){if(previous===Other&&current===Skin_Tone){return false}else if(previous===Extend&&current===Other){return false}else if(previous===Other&&current===Extend){return false}else if(previous===CR&&current===LF){return false}else if(previous===Control||previous===CR||previous===LF){return true}else if(current===Control||current===CR||current===LF){return true}else if(previous===L&&(current===L||current===V||current===LV||current===LVT)){return false}else if((previous===LV||previous===V)&&(current===V||current===T)){return false}else if((previous===LVT||previous===T)&&current===T){return false}else if(previous===Regional_Indicator&&current===Regional_Indicator){return false}else if(current===Extend){return false}else if(current===SpacingMark){return false}return true}function nextBreak(string,index){index=index||0;if(index<0){return 0}if(index>=string.length-1){return string.length}let prev=getGraphemeBreakProperty(codePointAt(string,index));for(let i=index+1;i<string.length;i++){if(55296<=string.charCodeAt(i-1)&&string.charCodeAt(i-1)<=56319&&56320<=string.charCodeAt(i)&&string.charCodeAt(i)<=57343){continue}const next=getGraphemeBreakProperty(codePointAt(string,i));if(shouldBreak(prev,next)){return i}prev=next}return string.length}function splitGraphemes(str){if(/^[\x20-\xFF]*$/.test(str))return str;const res=[];let index=0;let brk;while((brk=nextBreak(str,index))<str.length){res.push(str.slice(index,brk));index=brk}if(index<str.length){res.push(str.slice(index))}return res}function countGraphemes(str){let count=0;let index=0;let brk;while((brk=nextBreak(str,index))<str.length){index=brk;count++}if(index<str.length){count++}return count}function getGraphemeBreakProperty(code){if(13===code){return CR}if(10===code){return LF}if(0<=code&&code<=9||11<=code&&code<=12||14<=code&&code<=31||127<=code&&code<=159||173===code||1536<=code&&code<=1541||1564===code||1757===code||1807===code||6158===code||8203===code||8206<=code&&code<=8207||8232===code||8233===code||8234<=code&&code<=8238||8288<=code&&code<=8292||8293===code||8294<=code&&code<=8303||55296<=code&&code<=57343||65279===code||65520<=code&&code<=65528||65529<=code&&code<=65531||69821===code||113824<=code&&code<=113827||119155<=code&&code<=119162||917504===code||917505===code||917506<=code&&code<=917535||917536<=code&&code<=917631||917632<=code&&code<=917759||918e3<=code&&code<=921599){return Control}if(768<=code&&code<=879||1155<=code&&code<=1159||1160<=code&&code<=1161||1425<=code&&code<=1469||1471===code||1473<=code&&code<=1474||1476<=code&&code<=1477||1479===code||1552<=code&&code<=1562||1611<=code&&code<=1631||1648===code||1750<=code&&code<=1756||1759<=code&&code<=1764||1767<=code&&code<=1768||1770<=code&&code<=1773||1809===code||1840<=code&&code<=1866||1958<=code&&code<=1968||2027<=code&&code<=2035||2070<=code&&code<=2073||2075<=code&&code<=2083||2085<=code&&code<=2087||2089<=code&&code<=2093||2137<=code&&code<=2139||2275<=code&&code<=2306||2362===code||2364===code||2369<=code&&code<=2376||2381===code||2385<=code&&code<=2391||2402<=code&&code<=2403||2433===code||2492===code||2494===code||2497<=code&&code<=2500||2509===code||2519===code||2530<=code&&code<=2531||2561<=code&&code<=2562||2620===code||2625<=code&&code<=2626||2631<=code&&code<=2632||2635<=code&&code<=2637||2641===code||2672<=code&&code<=2673||2677===code||2689<=code&&code<=2690||2748===code||2753<=code&&code<=2757||2759<=code&&code<=2760||2765===code||2786<=code&&code<=2787||2817===code||2876===code||2878===code||2879===code||2881<=code&&code<=2884||2893===code||2902===code||2903===code||2914<=code&&code<=2915||2946===code||3006===code||3008===code||3021===code||3031===code||3072===code||3134<=code&&code<=3136||3142<=code&&code<=3144||3146<=code&&code<=3149||3157<=code&&code<=3158||3170<=code&&code<=3171||3201===code||3260===code||3263===code||3266===code||3270===code||3276<=code&&code<=3277||3285<=code&&code<=3286||3298<=code&&code<=3299||3329===code||3390===code||3393<=code&&code<=3396||3405===code||3415===code||3426<=code&&code<=3427||3530===code||3535===code||3538<=code&&code<=3540||3542===code||3551===code||3633===code||3636<=code&&code<=3642||3655<=code&&code<=3662||3761===code||3764<=code&&code<=3769||3771<=code&&code<=3772||3784<=code&&code<=3789||3864<=code&&code<=3865||3893===code||3895===code||3897===code||3953<=code&&code<=3966||3968<=code&&code<=3972||3974<=code&&code<=3975||3981<=code&&code<=3991||3993<=code&&code<=4028||4038===code||4141<=code&&code<=4144||4146<=code&&code<=4151||4153<=code&&code<=4154||4157<=code&&code<=4158||4184<=code&&code<=4185||4190<=code&&code<=4192||4209<=code&&code<=4212||4226===code||4229<=code&&code<=4230||4237===code||4253===code||4957<=code&&code<=4959||5906<=code&&code<=5908||5938<=code&&code<=5940||5970<=code&&code<=5971||6002<=code&&code<=6003||6068<=code&&code<=6069||6071<=code&&code<=6077||6086===code||6089<=code&&code<=6099||6109===code||6155<=code&&code<=6157||6313===code||6432<=code&&code<=6434||6439<=code&&code<=6440||6450===code||6457<=code&&code<=6459||6679<=code&&code<=6680||6683===code||6742===code||6744<=code&&code<=6750||6752===code||6754===code||6757<=code&&code<=6764||6771<=code&&code<=6780||6783===code||6832<=code&&code<=6845||6846===code||6912<=code&&code<=6915||6964===code||6966<=code&&code<=6970||6972===code||6978===code||7019<=code&&code<=7027||7040<=code&&code<=7041||7074<=code&&code<=7077||7080<=code&&code<=7081||7083<=code&&code<=7085||7142===code||7144<=code&&code<=7145||7149===code||7151<=code&&code<=7153||7212<=code&&code<=7219||7222<=code&&code<=7223||7376<=code&&code<=7378||7380<=code&&code<=7392||7394<=code&&code<=7400||7405===code||7412===code||7416<=code&&code<=7417||7616<=code&&code<=7669||7676<=code&&code<=7679||8204<=code&&code<=8205||8400<=code&&code<=8412||8413<=code&&code<=8416||8417===code||8418<=code&&code<=8420||8421<=code&&code<=8432||11503<=code&&code<=11505||11647===code||11744<=code&&code<=11775||12330<=code&&code<=12333||12334<=code&&code<=12335||12441<=code&&code<=12442||42607===code||42608<=code&&code<=42610||42612<=code&&code<=42621||42654<=code&&code<=42655||42736<=code&&code<=42737||43010===code||43014===code||43019===code||43045<=code&&code<=43046||43204===code||43232<=code&&code<=43249||43302<=code&&code<=43309||43335<=code&&code<=43345||43392<=code&&code<=43394||43443===code||43446<=code&&code<=43449||43452===code||43493===code||43561<=code&&code<=43566||43569<=code&&code<=43570||43573<=code&&code<=43574||43587===code||43596===code||43644===code||43696===code||43698<=code&&code<=43700||43703<=code&&code<=43704||43710<=code&&code<=43711||43713===code||43756<=code&&code<=43757||43766===code||44005===code||44008===code||44013===code||64286===code||65024<=code&&code<=65039||65056<=code&&code<=65071||65438<=code&&code<=65439||66045===code||66272===code||66422<=code&&code<=66426||68097<=code&&code<=68099||68101<=code&&code<=68102||68108<=code&&code<=68111||68152<=code&&code<=68154||68159===code||68325<=code&&code<=68326||69633===code||69688<=code&&code<=69702||69759<=code&&code<=69761||69811<=code&&code<=69814||69817<=code&&code<=69818||69888<=code&&code<=69890||69927<=code&&code<=69931||69933<=code&&code<=69940||70003===code||70016<=code&&code<=70017||70070<=code&&code<=70078||70090<=code&&code<=70092||70191<=code&&code<=70193||70196===code||70198<=code&&code<=70199||70367===code||70371<=code&&code<=70378||70400<=code&&code<=70401||70460===code||70462===code||70464===code||70487===code||70502<=code&&code<=70508||70512<=code&&code<=70516||70832===code||70835<=code&&code<=70840||70842===code||70845===code||70847<=code&&code<=70848||70850<=code&&code<=70851||71087===code||71090<=code&&code<=71093||71100<=code&&code<=71101||71103<=code&&code<=71104||71132<=code&&code<=71133||71219<=code&&code<=71226||71229===code||71231<=code&&code<=71232||71339===code||71341===code||71344<=code&&code<=71349||71351===code||71453<=code&&code<=71455||71458<=code&&code<=71461||71463<=code&&code<=71467||92912<=code&&code<=92916||92976<=code&&code<=92982||94095<=code&&code<=94098||113821<=code&&code<=113822||119141===code||119143<=code&&code<=119145||119150<=code&&code<=119154||119163<=code&&code<=119170||119173<=code&&code<=119179||119210<=code&&code<=119213||119362<=code&&code<=119364||121344<=code&&code<=121398||121403<=code&&code<=121452||121461===code||121476===code||121499<=code&&code<=121503||121505<=code&&code<=121519||125136<=code&&code<=125142||917760<=code&&code<=917999){return Extend}if(127462<=code&&code<=127487){return Regional_Indicator}if(127995<=code&&code<=127999){return Skin_Tone}if(2307===code||2363===code||2366<=code&&code<=2368||2377<=code&&code<=2380||2382<=code&&code<=2383||2434<=code&&code<=2435||2495<=code&&code<=2496||2503<=code&&code<=2504||2507<=code&&code<=2508||2563===code||2622<=code&&code<=2624||2691===code||2750<=code&&code<=2752||2761===code||2763<=code&&code<=2764||2818<=code&&code<=2819||2880===code||2887<=code&&code<=2888||2891<=code&&code<=2892||3007===code||3009<=code&&code<=3010||3014<=code&&code<=3016||3018<=code&&code<=3020||3073<=code&&code<=3075||3137<=code&&code<=3140||3202<=code&&code<=3203||3262===code||3264<=code&&code<=3265||3267<=code&&code<=3268||3271<=code&&code<=3272||3274<=code&&code<=3275||3330<=code&&code<=3331||3391<=code&&code<=3392||3398<=code&&code<=3400||3402<=code&&code<=3404||3458<=code&&code<=3459||3536<=code&&code<=3537||3544<=code&&code<=3550||3570<=code&&code<=3571||3635===code||3763===code||3902<=code&&code<=3903||3967===code||4145===code||4155<=code&&code<=4156||4182<=code&&code<=4183||4228===code||6070===code||6078<=code&&code<=6085||6087<=code&&code<=6088||6435<=code&&code<=6438||6441<=code&&code<=6443||6448<=code&&code<=6449||6451<=code&&code<=6456||6681<=code&&code<=6682||6741===code||6743===code||6765<=code&&code<=6770||6916===code||6965===code||6971===code||6973<=code&&code<=6977||6979<=code&&code<=6980||7042===code||7073===code||7078<=code&&code<=7079||7082===code||7143===code||7146<=code&&code<=7148||7150===code||7154<=code&&code<=7155||7204<=code&&code<=7211||7220<=code&&code<=7221||7393===code||7410<=code&&code<=7411||43043<=code&&code<=43044||43047===code||43136<=code&&code<=43137||43188<=code&&code<=43203||43346<=code&&code<=43347||43395===code||43444<=code&&code<=43445||43450<=code&&code<=43451||43453<=code&&code<=43456||43567<=code&&code<=43568||43571<=code&&code<=43572||43597===code||43755===code||43758<=code&&code<=43759||43765===code||44003<=code&&code<=44004||44006<=code&&code<=44007||44009<=code&&code<=44010||44012===code||69632===code||69634===code||69762===code||69808<=code&&code<=69810||69815<=code&&code<=69816||69932===code||70018===code||70067<=code&&code<=70069||70079<=code&&code<=70080||70188<=code&&code<=70190||70194<=code&&code<=70195||70197===code||70368<=code&&code<=70370||70402<=code&&code<=70403||70463===code||70465<=code&&code<=70468||70471<=code&&code<=70472||70475<=code&&code<=70477||70498<=code&&code<=70499||70833<=code&&code<=70834||70841===code||70843<=code&&code<=70844||70846===code||70849===code||71088<=code&&code<=71089||71096<=code&&code<=71099||71102===code||71216<=code&&code<=71218||71227<=code&&code<=71228||71230===code||71340===code||71342<=code&&code<=71343||71350===code||71456<=code&&code<=71457||71462===code||94033<=code&&code<=94078||119142===code||119149===code){return SpacingMark}if(4352<=code&&code<=4447||43360<=code&&code<=43388){return L}if(4448<=code&&code<=4519||55216<=code&&code<=55238){return V}if(4520<=code&&code<=4607||55243<=code&&code<=55291){return T}if(44032===code||44060===code||44088===code||44116===code||44144===code||44172===code||44200===code||44228===code||44256===code||44284===code||44312===code||44340===code||44368===code||44396===code||44424===code||44452===code||44480===code||44508===code||44536===code||44564===code||44592===code||44620===code||44648===code||44676===code||44704===code||44732===code||44760===code||44788===code||44816===code||44844===code||44872===code||44900===code||44928===code||44956===code||44984===code||45012===code||45040===code||45068===code||45096===code||45124===code||45152===code||45180===code||45208===code||45236===code||45264===code||45292===code||45320===code||45348===code||45376===code||45404===code||45432===code||45460===code||45488===code||45516===code||45544===code||45572===code||45600===code||45628===code||45656===code||45684===code||45712===code||45740===code||45768===code||45796===code||45824===code||45852===code||45880===code||45908===code||45936===code||45964===code||45992===code||46020===code||46048===code||46076===code||46104===code||46132===code||46160===code||46188===code||46216===code||46244===code||46272===code||46300===code||46328===code||46356===code||46384===code||46412===code||46440===code||46468===code||46496===code||46524===code||46552===code||46580===code||46608===code||46636===code||46664===code||46692===code||46720===code||46748===code||46776===code||46804===code||46832===code||46860===code||46888===code||46916===code||46944===code||46972===code||47e3===code||47028===code||47056===code||47084===code||47112===code||47140===code||47168===code||47196===code||47224===code||47252===code||47280===code||47308===code||47336===code||47364===code||47392===code||47420===code||47448===code||47476===code||47504===code||47532===code||47560===code||47588===code||47616===code||47644===code||47672===code||47700===code||47728===code||47756===code||47784===code||47812===code||47840===code||47868===code||47896===code||47924===code||47952===code||47980===code||48008===code||48036===code||48064===code||48092===code||48120===code||48148===code||48176===code||48204===code||48232===code||48260===code||48288===code||48316===code||48344===code||48372===code||48400===code||48428===code||48456===code||48484===code||48512===code||48540===code||48568===code||48596===code||48624===code||48652===code||48680===code||48708===code||48736===code||48764===code||48792===code||48820===code||48848===code||48876===code||48904===code||48932===code||48960===code||48988===code||49016===code||49044===code||49072===code||49100===code||49128===code||49156===code||49184===code||49212===code||49240===code||49268===code||49296===code||49324===code||49352===code||49380===code||49408===code||49436===code||49464===code||49492===code||49520===code||49548===code||49576===code||49604===code||49632===code||49660===code||49688===code||49716===code||49744===code||49772===code||49800===code||49828===code||49856===code||49884===code||49912===code||49940===code||49968===code||49996===code||50024===code||50052===code||50080===code||50108===code||50136===code||50164===code||50192===code||50220===code||50248===code||50276===code||50304===code||50332===code||50360===code||50388===code||50416===code||50444===code||50472===code||50500===code||50528===code||50556===code||50584===code||50612===code||50640===code||50668===code||50696===code||50724===code||50752===code||50780===code||50808===code||50836===code||50864===code||50892===code||50920===code||50948===code||50976===code||51004===code||51032===code||51060===code||51088===code||51116===code||51144===code||51172===code||51200===code||51228===code||51256===code||51284===code||51312===code||51340===code||51368===code||51396===code||51424===code||51452===code||51480===code||51508===code||51536===code||51564===code||51592===code||51620===code||51648===code||51676===code||51704===code||51732===code||51760===code||51788===code||51816===code||51844===code||51872===code||51900===code||51928===code||51956===code||51984===code||52012===code||52040===code||52068===code||52096===code||52124===code||52152===code||52180===code||52208===code||52236===code||52264===code||52292===code||52320===code||52348===code||52376===code||52404===code||52432===code||52460===code||52488===code||52516===code||52544===code||52572===code||52600===code||52628===code||52656===code||52684===code||52712===code||52740===code||52768===code||52796===code||52824===code||52852===code||52880===code||52908===code||52936===code||52964===code||52992===code||53020===code||53048===code||53076===code||53104===code||53132===code||53160===code||53188===code||53216===code||53244===code||53272===code||53300===code||53328===code||53356===code||53384===code||53412===code||53440===code||53468===code||53496===code||53524===code||53552===code||53580===code||53608===code||53636===code||53664===code||53692===code||53720===code||53748===code||53776===code||53804===code||53832===code||53860===code||53888===code||53916===code||53944===code||53972===code||54e3===code||54028===code||54056===code||54084===code||54112===code||54140===code||54168===code||54196===code||54224===code||54252===code||54280===code||54308===code||54336===code||54364===code||54392===code||54420===code||54448===code||54476===code||54504===code||54532===code||54560===code||54588===code||54616===code||54644===code||54672===code||54700===code||54728===code||54756===code||54784===code||54812===code||54840===code||54868===code||54896===code||54924===code||54952===code||54980===code||55008===code||55036===code||55064===code||55092===code||55120===code||55148===code||55176===code){return LV}if(44033<=code&&code<=44059||44061<=code&&code<=44087||44089<=code&&code<=44115||44117<=code&&code<=44143||44145<=code&&code<=44171||44173<=code&&code<=44199||44201<=code&&code<=44227||44229<=code&&code<=44255||44257<=code&&code<=44283||44285<=code&&code<=44311||44313<=code&&code<=44339||44341<=code&&code<=44367||44369<=code&&code<=44395||44397<=code&&code<=44423||44425<=code&&code<=44451||44453<=code&&code<=44479||44481<=code&&code<=44507||44509<=code&&code<=44535||44537<=code&&code<=44563||44565<=code&&code<=44591||44593<=code&&code<=44619||44621<=code&&code<=44647||44649<=code&&code<=44675||44677<=code&&code<=44703||44705<=code&&code<=44731||44733<=code&&code<=44759||44761<=code&&code<=44787||44789<=code&&code<=44815||44817<=code&&code<=44843||44845<=code&&code<=44871||44873<=code&&code<=44899||44901<=code&&code<=44927||44929<=code&&code<=44955||44957<=code&&code<=44983||44985<=code&&code<=45011||45013<=code&&code<=45039||45041<=code&&code<=45067||45069<=code&&code<=45095||45097<=code&&code<=45123||45125<=code&&code<=45151||45153<=code&&code<=45179||45181<=code&&code<=45207||45209<=code&&code<=45235||45237<=code&&code<=45263||45265<=code&&code<=45291||45293<=code&&code<=45319||45321<=code&&code<=45347||45349<=code&&code<=45375||45377<=code&&code<=45403||45405<=code&&code<=45431||45433<=code&&code<=45459||45461<=code&&code<=45487||45489<=code&&code<=45515||45517<=code&&code<=45543||45545<=code&&code<=45571||45573<=code&&code<=45599||45601<=code&&code<=45627||45629<=code&&code<=45655||45657<=code&&code<=45683||45685<=code&&code<=45711||45713<=code&&code<=45739||45741<=code&&code<=45767||45769<=code&&code<=45795||45797<=code&&code<=45823||45825<=code&&code<=45851||45853<=code&&code<=45879||45881<=code&&code<=45907||45909<=code&&code<=45935||45937<=code&&code<=45963||45965<=code&&code<=45991||45993<=code&&code<=46019||46021<=code&&code<=46047||46049<=code&&code<=46075||46077<=code&&code<=46103||46105<=code&&code<=46131||46133<=code&&code<=46159||46161<=code&&code<=46187||46189<=code&&code<=46215||46217<=code&&code<=46243||46245<=code&&code<=46271||46273<=code&&code<=46299||46301<=code&&code<=46327||46329<=code&&code<=46355||46357<=code&&code<=46383||46385<=code&&code<=46411||46413<=code&&code<=46439||46441<=code&&code<=46467||46469<=code&&code<=46495||46497<=code&&code<=46523||46525<=code&&code<=46551||46553<=code&&code<=46579||46581<=code&&code<=46607||46609<=code&&code<=46635||46637<=code&&code<=46663||46665<=code&&code<=46691||46693<=code&&code<=46719||46721<=code&&code<=46747||46749<=code&&code<=46775||46777<=code&&code<=46803||46805<=code&&code<=46831||46833<=code&&code<=46859||46861<=code&&code<=46887||46889<=code&&code<=46915||46917<=code&&code<=46943||46945<=code&&code<=46971||46973<=code&&code<=46999||47001<=code&&code<=47027||47029<=code&&code<=47055||47057<=code&&code<=47083||47085<=code&&code<=47111||47113<=code&&code<=47139||47141<=code&&code<=47167||47169<=code&&code<=47195||47197<=code&&code<=47223||47225<=code&&code<=47251||47253<=code&&code<=47279||47281<=code&&code<=47307||47309<=code&&code<=47335||47337<=code&&code<=47363||47365<=code&&code<=47391||47393<=code&&code<=47419||47421<=code&&code<=47447||47449<=code&&code<=47475||47477<=code&&code<=47503||47505<=code&&code<=47531||47533<=code&&code<=47559||47561<=code&&code<=47587||47589<=code&&code<=47615||47617<=code&&code<=47643||47645<=code&&code<=47671||47673<=code&&code<=47699||47701<=code&&code<=47727||47729<=code&&code<=47755||47757<=code&&code<=47783||47785<=code&&code<=47811||47813<=code&&code<=47839||47841<=code&&code<=47867||47869<=code&&code<=47895||47897<=code&&code<=47923||47925<=code&&code<=47951||47953<=code&&code<=47979||47981<=code&&code<=48007||48009<=code&&code<=48035||48037<=code&&code<=48063||48065<=code&&code<=48091||48093<=code&&code<=48119||48121<=code&&code<=48147||48149<=code&&code<=48175||48177<=code&&code<=48203||48205<=code&&code<=48231||48233<=code&&code<=48259||48261<=code&&code<=48287||48289<=code&&code<=48315||48317<=code&&code<=48343||48345<=code&&code<=48371||48373<=code&&code<=48399||48401<=code&&code<=48427||48429<=code&&code<=48455||48457<=code&&code<=48483||48485<=code&&code<=48511||48513<=code&&code<=48539||48541<=code&&code<=48567||48569<=code&&code<=48595||48597<=code&&code<=48623||48625<=code&&code<=48651||48653<=code&&code<=48679||48681<=code&&code<=48707||48709<=code&&code<=48735||48737<=code&&code<=48763||48765<=code&&code<=48791||48793<=code&&code<=48819||48821<=code&&code<=48847||48849<=code&&code<=48875||48877<=code&&code<=48903||48905<=code&&code<=48931||48933<=code&&code<=48959||48961<=code&&code<=48987||48989<=code&&code<=49015||49017<=code&&code<=49043||49045<=code&&code<=49071||49073<=code&&code<=49099||49101<=code&&code<=49127||49129<=code&&code<=49155||49157<=code&&code<=49183||49185<=code&&code<=49211||49213<=code&&code<=49239||49241<=code&&code<=49267||49269<=code&&code<=49295||49297<=code&&code<=49323||49325<=code&&code<=49351||49353<=code&&code<=49379||49381<=code&&code<=49407||49409<=code&&code<=49435||49437<=code&&code<=49463||49465<=code&&code<=49491||49493<=code&&code<=49519||49521<=code&&code<=49547||49549<=code&&code<=49575||49577<=code&&code<=49603||49605<=code&&code<=49631||49633<=code&&code<=49659||49661<=code&&code<=49687||49689<=code&&code<=49715||49717<=code&&code<=49743||49745<=code&&code<=49771||49773<=code&&code<=49799||49801<=code&&code<=49827||49829<=code&&code<=49855||49857<=code&&code<=49883||49885<=code&&code<=49911||49913<=code&&code<=49939||49941<=code&&code<=49967||49969<=code&&code<=49995||49997<=code&&code<=50023||50025<=code&&code<=50051||50053<=code&&code<=50079||50081<=code&&code<=50107||50109<=code&&code<=50135||50137<=code&&code<=50163||50165<=code&&code<=50191||50193<=code&&code<=50219||50221<=code&&code<=50247||50249<=code&&code<=50275||50277<=code&&code<=50303||50305<=code&&code<=50331||50333<=code&&code<=50359||50361<=code&&code<=50387||50389<=code&&code<=50415||50417<=code&&code<=50443||50445<=code&&code<=50471||50473<=code&&code<=50499||50501<=code&&code<=50527||50529<=code&&code<=50555||50557<=code&&code<=50583||50585<=code&&code<=50611||50613<=code&&code<=50639||50641<=code&&code<=50667||50669<=code&&code<=50695||50697<=code&&code<=50723||50725<=code&&code<=50751||50753<=code&&code<=50779||50781<=code&&code<=50807||50809<=code&&code<=50835||50837<=code&&code<=50863||50865<=code&&code<=50891||50893<=code&&code<=50919||50921<=code&&code<=50947||50949<=code&&code<=50975||50977<=code&&code<=51003||51005<=code&&code<=51031||51033<=code&&code<=51059||51061<=code&&code<=51087||51089<=code&&code<=51115||51117<=code&&code<=51143||51145<=code&&code<=51171||51173<=code&&code<=51199||51201<=code&&code<=51227||51229<=code&&code<=51255||51257<=code&&code<=51283||51285<=code&&code<=51311||51313<=code&&code<=51339||51341<=code&&code<=51367||51369<=code&&code<=51395||51397<=code&&code<=51423||51425<=code&&code<=51451||51453<=code&&code<=51479||51481<=code&&code<=51507||51509<=code&&code<=51535||51537<=code&&code<=51563||51565<=code&&code<=51591||51593<=code&&code<=51619||51621<=code&&code<=51647||51649<=code&&code<=51675||51677<=code&&code<=51703||51705<=code&&code<=51731||51733<=code&&code<=51759||51761<=code&&code<=51787||51789<=code&&code<=51815||51817<=code&&code<=51843||51845<=code&&code<=51871||51873<=code&&code<=51899||51901<=code&&code<=51927||51929<=code&&code<=51955||51957<=code&&code<=51983||51985<=code&&code<=52011||52013<=code&&code<=52039||52041<=code&&code<=52067||52069<=code&&code<=52095||52097<=code&&code<=52123||52125<=code&&code<=52151||52153<=code&&code<=52179||52181<=code&&code<=52207||52209<=code&&code<=52235||52237<=code&&code<=52263||52265<=code&&code<=52291||52293<=code&&code<=52319||52321<=code&&code<=52347||52349<=code&&code<=52375||52377<=code&&code<=52403||52405<=code&&code<=52431||52433<=code&&code<=52459||52461<=code&&code<=52487||52489<=code&&code<=52515||52517<=code&&code<=52543||52545<=code&&code<=52571||52573<=code&&code<=52599||52601<=code&&code<=52627||52629<=code&&code<=52655||52657<=code&&code<=52683||52685<=code&&code<=52711||52713<=code&&code<=52739||52741<=code&&code<=52767||52769<=code&&code<=52795||52797<=code&&code<=52823||52825<=code&&code<=52851||52853<=code&&code<=52879||52881<=code&&code<=52907||52909<=code&&code<=52935||52937<=code&&code<=52963||52965<=code&&code<=52991||52993<=code&&code<=53019||53021<=code&&code<=53047||53049<=code&&code<=53075||53077<=code&&code<=53103||53105<=code&&code<=53131||53133<=code&&code<=53159||53161<=code&&code<=53187||53189<=code&&code<=53215||53217<=code&&code<=53243||53245<=code&&code<=53271||53273<=code&&code<=53299||53301<=code&&code<=53327||53329<=code&&code<=53355||53357<=code&&code<=53383||53385<=code&&code<=53411||53413<=code&&code<=53439||53441<=code&&code<=53467||53469<=code&&code<=53495||53497<=code&&code<=53523||53525<=code&&code<=53551||53553<=code&&code<=53579||53581<=code&&code<=53607||53609<=code&&code<=53635||53637<=code&&code<=53663||53665<=code&&code<=53691||53693<=code&&code<=53719||53721<=code&&code<=53747||53749<=code&&code<=53775||53777<=code&&code<=53803||53805<=code&&code<=53831||53833<=code&&code<=53859||53861<=code&&code<=53887||53889<=code&&code<=53915||53917<=code&&code<=53943||53945<=code&&code<=53971||53973<=code&&code<=53999||54001<=code&&code<=54027||54029<=code&&code<=54055||54057<=code&&code<=54083||54085<=code&&code<=54111||54113<=code&&code<=54139||54141<=code&&code<=54167||54169<=code&&code<=54195||54197<=code&&code<=54223||54225<=code&&code<=54251||54253<=code&&code<=54279||54281<=code&&code<=54307||54309<=code&&code<=54335||54337<=code&&code<=54363||54365<=code&&code<=54391||54393<=code&&code<=54419||54421<=code&&code<=54447||54449<=code&&code<=54475||54477<=code&&code<=54503||54505<=code&&code<=54531||54533<=code&&code<=54559||54561<=code&&code<=54587||54589<=code&&code<=54615||54617<=code&&code<=54643||54645<=code&&code<=54671||54673<=code&&code<=54699||54701<=code&&code<=54727||54729<=code&&code<=54755||54757<=code&&code<=54783||54785<=code&&code<=54811||54813<=code&&code<=54839||54841<=code&&code<=54867||54869<=code&&code<=54895||54897<=code&&code<=54923||54925<=code&&code<=54951||54953<=code&&code<=54979||54981<=code&&code<=55007||55009<=code&&code<=55035||55037<=code&&code<=55063||55065<=code&&code<=55091||55093<=code&&code<=55119||55121<=code&&code<=55147||55149<=code&&code<=55175||55177<=code&&code<=55203){return LVT}return Other}var GraphemeSplitter={splitGraphemes:splitGraphemes,countGraphemes:countGraphemes,nextBreak:nextBreak};class Token{constructor(type,value){this.type=type;this.value=value;console.assert(!(type==="literal"&&value==="}"))}}class Lexer{constructor(s){this.s=GraphemeSplitter.splitGraphemes(s);this.pos=0}end(){return this.pos>=this.s.length}get(){return this.pos<this.s.length?this.s[this.pos++]:null}peek(){return this.s[this.pos]}scan(regEx){let result;if(typeof this.s==="string"){result=regEx.exec(this.s.slice(this.pos))}else{result=regEx.exec(this.s.slice(this.pos).join(""))}if(result){this.pos+=result[0].length;return result[0]}return null}isWhiteSpace(){return/[ \f\n\r\t\v\xA0\u2028\u2029]/.test(this.s[this.pos])}makeToken(){if(this.end())return null;if(this.isWhiteSpace()){this.get();return new Token("space")}let result=null;if(this.peek()==="\\"){this.get();if(!this.end()){let command=this.scan(/^[a-zA-Z*]+/);if(command==="bgroup"){result=new Token("{")}else if(command==="egroup"){result=new Token("}")}else{if(!command){command=this.get()}result=new Token("command",command)}}}else if(this.peek()==="{"||this.peek()==="}"){result=new Token(this.get())}else if(this.peek()==="#"){this.get();if(!this.end()){let isParam=false;let next=this.peek();if(/[0-9?]/.test(next)){isParam=true;if(this.pos+1<this.s.length){const after=this.s[this.pos+1];isParam=/[^0-9A-Za-z]/.test(after)}}if(isParam){result=new Token("#");next=this.get();if(next>="0"&&next<="9"){result.value=parseInt(next)}else{result.value="?"}}else{result=new Token("literal","#")}}}else if(this.peek()==="~"){this.get();result=new Token("command","space")}else if(this.peek()==="$"){this.get();if(this.peek()==="$"){this.get();result=new Token("$$")}else{result=new Token("$")}}else{result=new Token("literal",this.get())}return result}}function tokenize(s){const result=[];const lines=s.toString().split(/\r?\n/);let stream="";let sep="";for(const line of lines){stream+=sep;sep=" ";const m=line.match(/((?:\\%)|[^%])*/);if(m)stream+=m[0]}const lex=new Lexer(stream);while(!lex.end()){const token=lex.makeToken();if(token)result.push(token)}return result}var Lexer$1={tokenize:tokenize};var metricMap={"AMS-Regular":{65:[0,.68889,0,0],66:[0,.68889,0,0],67:[0,.68889,0,0],68:[0,.68889,0,0],69:[0,.68889,0,0],70:[0,.68889,0,0],71:[0,.68889,0,0],72:[0,.68889,0,0],73:[0,.68889,0,0],74:[.16667,.68889,0,0],75:[0,.68889,0,0],76:[0,.68889,0,0],77:[0,.68889,0,0],78:[0,.68889,0,0],79:[.16667,.68889,0,0],80:[0,.68889,0,0],81:[.16667,.68889,0,0],82:[0,.68889,0,0],83:[0,.68889,0,0],84:[0,.68889,0,0],85:[0,.68889,0,0],86:[0,.68889,0,0],87:[0,.68889,0,0],88:[0,.68889,0,0],89:[0,.68889,0,0],90:[0,.68889,0,0],107:[0,.68889,0,0],165:[0,.675,.025,0],174:[.15559,.69224,0,0],240:[0,.68889,0,0],295:[0,.68889,0,0],710:[0,.825,0,0],732:[0,.9,0,0],770:[0,.825,0,0],771:[0,.9,0,0],989:[.08167,.58167,0,0],1008:[0,.43056,.04028,0],8245:[0,.54986,0,0],8463:[0,.68889,0,0],8487:[0,.68889,0,0],8498:[0,.68889,0,0],8502:[0,.68889,0,0],8503:[0,.68889,0,0],8504:[0,.68889,0,0],8513:[0,.68889,0,0],8592:[-.03598,.46402,0,0],8594:[-.03598,.46402,0,0],8602:[-.13313,.36687,0,0],8603:[-.13313,.36687,0,0],8606:[.01354,.52239,0,0],8608:[.01354,.52239,0,0],8610:[.01354,.52239,0,0],8611:[.01354,.52239,0,0],8619:[0,.54986,0,0],8620:[0,.54986,0,0],8621:[-.13313,.37788,0,0],8622:[-.13313,.36687,0,0],8624:[0,.69224,0,0],8625:[0,.69224,0,0],8630:[0,.43056,0,0],8631:[0,.43056,0,0],8634:[.08198,.58198,0,0],8635:[.08198,.58198,0,0],8638:[.19444,.69224,0,0],8639:[.19444,.69224,0,0],8642:[.19444,.69224,0,0],8643:[.19444,.69224,0,0],8644:[.1808,.675,0,0],8646:[.1808,.675,0,0],8647:[.1808,.675,0,0],8648:[.19444,.69224,0,0],8649:[.1808,.675,0,0],8650:[.19444,.69224,0,0],8651:[.01354,.52239,0,0],8652:[.01354,.52239,0,0],8653:[-.13313,.36687,0,0],8654:[-.13313,.36687,0,0],8655:[-.13313,.36687,0,0],8666:[.13667,.63667,0,0],8667:[.13667,.63667,0,0],8669:[-.13313,.37788,0,0],8672:[-.064,.437,0,0],8674:[-.064,.437,0,0],8705:[0,.825,0,0],8708:[0,.68889,0,0],8709:[.08167,.58167,0,0],8717:[0,.43056,0,0],8722:[-.03598,.46402,0,0],8724:[.08198,.69224,0,0],8726:[.08167,.58167,0,0],8733:[0,.69224,0,0],8736:[0,.69224,0,0],8737:[0,.69224,0,0],8738:[.03517,.52239,0,0],8739:[.08167,.58167,0,0],8740:[.25142,.74111,0,0],8741:[.08167,.58167,0,0],8742:[.25142,.74111,0,0],8756:[0,.69224,0,0],8757:[0,.69224,0,0],8764:[-.13313,.36687,0,0],8765:[-.13313,.37788,0,0],8769:[-.13313,.36687,0,0],8770:[-.03625,.46375,0,0],8774:[.30274,.79383,0,0],8776:[-.01688,.48312,0,0],8778:[.08167,.58167,0,0],8782:[.06062,.54986,0,0],8783:[.06062,.54986,0,0],8785:[.08198,.58198,0,0],8786:[.08198,.58198,0,0],8787:[.08198,.58198,0,0],8790:[0,.69224,0,0],8791:[.22958,.72958,0,0],8796:[.08198,.91667,0,0],8806:[.25583,.75583,0,0],8807:[.25583,.75583,0,0],8808:[.25142,.75726,0,0],8809:[.25142,.75726,0,0],8812:[.25583,.75583,0,0],8814:[.20576,.70576,0,0],8815:[.20576,.70576,0,0],8816:[.30274,.79383,0,0],8817:[.30274,.79383,0,0],8818:[.22958,.72958,0,0],8819:[.22958,.72958,0,0],8822:[.1808,.675,0,0],8823:[.1808,.675,0,0],8828:[.13667,.63667,0,0],8829:[.13667,.63667,0,0],8830:[.22958,.72958,0,0],8831:[.22958,.72958,0,0],8832:[.20576,.70576,0,0],8833:[.20576,.70576,0,0],8840:[.30274,.79383,0,0],8841:[.30274,.79383,0,0],8842:[.13597,.63597,0,0],8843:[.13597,.63597,0,0],8847:[.03517,.54986,0,0],8848:[.03517,.54986,0,0],8858:[.08198,.58198,0,0],8859:[.08198,.58198,0,0],8861:[.08198,.58198,0,0],8862:[0,.675,0,0],8863:[0,.675,0,0],8864:[0,.675,0,0],8865:[0,.675,0,0],8872:[0,.69224,0,0],8873:[0,.69224,0,0],8874:[0,.69224,0,0],8876:[0,.68889,0,0],8877:[0,.68889,0,0],8878:[0,.68889,0,0],8879:[0,.68889,0,0],8882:[.03517,.54986,0,0],8883:[.03517,.54986,0,0],8884:[.13667,.63667,0,0],8885:[.13667,.63667,0,0],8888:[0,.54986,0,0],8890:[.19444,.43056,0,0],8891:[.19444,.69224,0,0],8892:[.19444,.69224,0,0],8901:[0,.54986,0,0],8903:[.08167,.58167,0,0],8905:[.08167,.58167,0,0],8906:[.08167,.58167,0,0],8907:[0,.69224,0,0],8908:[0,.69224,0,0],8909:[-.03598,.46402,0,0],8910:[0,.54986,0,0],8911:[0,.54986,0,0],8912:[.03517,.54986,0,0],8913:[.03517,.54986,0,0],8914:[0,.54986,0,0],8915:[0,.54986,0,0],8916:[0,.69224,0,0],8918:[.0391,.5391,0,0],8919:[.0391,.5391,0,0],8920:[.03517,.54986,0,0],8921:[.03517,.54986,0,0],8922:[.38569,.88569,0,0],8923:[.38569,.88569,0,0],8926:[.13667,.63667,0,0],8927:[.13667,.63667,0,0],8928:[.30274,.79383,0,0],8929:[.30274,.79383,0,0],8934:[.23222,.74111,0,0],8935:[.23222,.74111,0,0],8936:[.23222,.74111,0,0],8937:[.23222,.74111,0,0],8938:[.20576,.70576,0,0],8939:[.20576,.70576,0,0],8940:[.30274,.79383,0,0],8941:[.30274,.79383,0,0],8994:[.19444,.69224,0,0],8995:[.19444,.69224,0,0],9416:[.15559,.69224,0,0],9484:[0,.69224,0,0],9488:[0,.69224,0,0],9492:[0,.37788,0,0],9496:[0,.37788,0,0],9585:[.19444,.68889,0,0],9586:[.19444,.74111,0,0],9632:[0,.675,0,0],9633:[0,.675,0,0],9650:[0,.54986,0,0],9651:[0,.54986,0,0],9654:[.03517,.54986,0,0],9660:[0,.54986,0,0],9661:[0,.54986,0,0],9664:[.03517,.54986,0,0],9674:[.11111,.69224,0,0],9733:[.19444,.69224,0,0],10003:[0,.69224,0,0],10016:[0,.69224,0,0],10731:[.11111,.69224,0,0],10846:[.19444,.75583,0,0],10877:[.13667,.63667,0,0],10878:[.13667,.63667,0,0],10885:[.25583,.75583,0,0],10886:[.25583,.75583,0,0],10887:[.13597,.63597,0,0],10888:[.13597,.63597,0,0],10889:[.26167,.75726,0,0],10890:[.26167,.75726,0,0],10891:[.48256,.98256,0,0],10892:[.48256,.98256,0,0],10901:[.13667,.63667,0,0],10902:[.13667,.63667,0,0],10933:[.25142,.75726,0,0],10934:[.25142,.75726,0,0],10935:[.26167,.75726,0,0],10936:[.26167,.75726,0,0],10937:[.26167,.75726,0,0],10938:[.26167,.75726,0,0],10949:[.25583,.75583,0,0],10950:[.25583,.75583,0,0],10955:[.28481,.79383,0,0],10956:[.28481,.79383,0,0],57350:[.08167,.58167,0,0],57351:[.08167,.58167,0,0],57352:[.08167,.58167,0,0],57353:[0,.43056,.04028,0],57356:[.25142,.75726,0,0],57357:[.25142,.75726,0,0],57358:[.41951,.91951,0,0],57359:[.30274,.79383,0,0],57360:[.30274,.79383,0,0],57361:[.41951,.91951,0,0],57366:[.25142,.75726,0,0],57367:[.25142,.75726,0,0],57368:[.25142,.75726,0,0],57369:[.25142,.75726,0,0],57370:[.13597,.63597,0,0],57371:[.13597,.63597,0,0]},"Caligraphic-Regular":{48:[0,.43056,0,0],49:[0,.43056,0,0],50:[0,.43056,0,0],51:[.19444,.43056,0,0],52:[.19444,.43056,0,0],53:[.19444,.43056,0,0],54:[0,.64444,0,0],55:[.19444,.43056,0,0],56:[0,.64444,0,0],57:[.19444,.43056,0,0],65:[0,.68333,0,.19445],66:[0,.68333,.03041,.13889],67:[0,.68333,.05834,.13889],68:[0,.68333,.02778,.08334],69:[0,.68333,.08944,.11111],70:[0,.68333,.09931,.11111],71:[.09722,.68333,.0593,.11111],72:[0,.68333,.00965,.11111],73:[0,.68333,.07382,0],74:[.09722,.68333,.18472,.16667],75:[0,.68333,.01445,.05556],76:[0,.68333,0,.13889],77:[0,.68333,0,.13889],78:[0,.68333,.14736,.08334],79:[0,.68333,.02778,.11111],80:[0,.68333,.08222,.08334],81:[.09722,.68333,0,.11111],82:[0,.68333,0,.08334],83:[0,.68333,.075,.13889],84:[0,.68333,.25417,0],85:[0,.68333,.09931,.08334],86:[0,.68333,.08222,0],87:[0,.68333,.08222,.08334],88:[0,.68333,.14643,.13889],89:[.09722,.68333,.08222,.08334],90:[0,.68333,.07944,.13889]},"Fraktur-Regular":{33:[0,.69141,0,0],34:[0,.69141,0,0],38:[0,.69141,0,0],39:[0,.69141,0,0],40:[.24982,.74947,0,0],41:[.24982,.74947,0,0],42:[0,.62119,0,0],43:[.08319,.58283,0,0],44:[0,.10803,0,0],45:[.08319,.58283,0,0],46:[0,.10803,0,0],47:[.24982,.74947,0,0],48:[0,.47534,0,0],49:[0,.47534,0,0],50:[0,.47534,0,0],51:[.18906,.47534,0,0],52:[.18906,.47534,0,0],53:[.18906,.47534,0,0],54:[0,.69141,0,0],55:[.18906,.47534,0,0],56:[0,.69141,0,0],57:[.18906,.47534,0,0],58:[0,.47534,0,0],59:[.12604,.47534,0,0],61:[-.13099,.36866,0,0],63:[0,.69141,0,0],65:[0,.69141,0,0],66:[0,.69141,0,0],67:[0,.69141,0,0],68:[0,.69141,0,0],69:[0,.69141,0,0],70:[.12604,.69141,0,0],71:[0,.69141,0,0],72:[.06302,.69141,0,0],73:[0,.69141,0,0],74:[.12604,.69141,0,0],75:[0,.69141,0,0],76:[0,.69141,0,0],77:[0,.69141,0,0],78:[0,.69141,0,0],79:[0,.69141,0,0],80:[.18906,.69141,0,0],81:[.03781,.69141,0,0],82:[0,.69141,0,0],83:[0,.69141,0,0],84:[0,.69141,0,0],85:[0,.69141,0,0],86:[0,.69141,0,0],87:[0,.69141,0,0],88:[0,.69141,0,0],89:[.18906,.69141,0,0],90:[.12604,.69141,0,0],91:[.24982,.74947,0,0],93:[.24982,.74947,0,0],94:[0,.69141,0,0],97:[0,.47534,0,0],98:[0,.69141,0,0],99:[0,.47534,0,0],100:[0,.62119,0,0],101:[0,.47534,0,0],102:[.18906,.69141,0,0],103:[.18906,.47534,0,0],104:[.18906,.69141,0,0],105:[0,.69141,0,0],106:[0,.69141,0,0],107:[0,.69141,0,0],108:[0,.69141,0,0],109:[0,.47534,0,0],110:[0,.47534,0,0],111:[0,.47534,0,0],112:[.18906,.52396,0,0],113:[.18906,.47534,0,0],114:[0,.47534,0,0],115:[0,.47534,0,0],116:[0,.62119,0,0],117:[0,.47534,0,0],118:[0,.52396,0,0],119:[0,.52396,0,0],120:[.18906,.47534,0,0],121:[.18906,.47534,0,0],122:[.18906,.47534,0,0],8216:[0,.69141,0,0],8217:[0,.69141,0,0],58112:[0,.62119,0,0],58113:[0,.62119,0,0],58114:[.18906,.69141,0,0],58115:[.18906,.69141,0,0],58116:[.18906,.47534,0,0],58117:[0,.69141,0,0],58118:[0,.62119,0,0],58119:[0,.47534,0,0]},"Main-Bold":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.13333,.63333,0,0],44:[.19444,.15556,0,0],45:[0,.44444,0,0],46:[0,.15556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.44444,0,0],59:[.19444,.44444,0,0],60:[.08556,.58556,0,0],61:[-.10889,.39111,0,0],62:[.08556,.58556,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,0,0],67:[0,.68611,0,0],68:[0,.68611,0,0],69:[0,.68611,0,0],70:[0,.68611,0,0],71:[0,.68611,0,0],72:[0,.68611,0,0],73:[0,.68611,0,0],74:[0,.68611,0,0],75:[0,.68611,0,0],76:[0,.68611,0,0],77:[0,.68611,0,0],78:[0,.68611,0,0],79:[0,.68611,0,0],80:[0,.68611,0,0],81:[.19444,.68611,0,0],82:[0,.68611,0,0],83:[0,.68611,0,0],84:[0,.68611,0,0],85:[0,.68611,0,0],86:[0,.68611,.01597,0],87:[0,.68611,.01597,0],88:[0,.68611,0,0],89:[0,.68611,.02875,0],90:[0,.68611,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.13444,.03194,0],96:[0,.69444,0,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.10903,0],103:[.19444,.44444,.01597,0],104:[0,.69444,0,0],105:[0,.69444,0,0],106:[.19444,.69444,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,0,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.01597,0],119:[0,.44444,.01597,0],120:[0,.44444,0,0],121:[.19444,.44444,.01597,0],122:[0,.44444,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.34444,0,0],168:[0,.69444,0,0],172:[0,.44444,0,0],175:[0,.59611,0,0],176:[0,.69444,0,0],177:[.13333,.63333,0,0],180:[0,.69444,0,0],215:[.13333,.63333,0,0],247:[.13333,.63333,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],710:[0,.69444,0,0],711:[0,.63194,0,0],713:[0,.59611,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.69444,0,0],730:[0,.69444,0,0],732:[0,.69444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.69444,0,0],772:[0,.59611,0,0],774:[0,.69444,0,0],775:[0,.69444,0,0],776:[0,.69444,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],824:[.19444,.69444,0,0],915:[0,.68611,0,0],916:[0,.68611,0,0],920:[0,.68611,0,0],923:[0,.68611,0,0],926:[0,.68611,0,0],928:[0,.68611,0,0],931:[0,.68611,0,0],933:[0,.68611,0,0],934:[0,.68611,0,0],936:[0,.68611,0,0],937:[0,.68611,0,0],8211:[0,.44444,.03194,0],8212:[0,.44444,.03194,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8242:[0,.55556,0,0],8407:[0,.72444,.15486,0],8463:[0,.69444,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,0],8472:[.19444,.44444,0,0],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.10889,.39111,0,0],8593:[.19444,.69444,0,0],8594:[-.10889,.39111,0,0],8595:[.19444,.69444,0,0],8596:[-.10889,.39111,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8636:[-.10889,.39111,0,0],8637:[-.10889,.39111,0,0],8640:[-.10889,.39111,0,0],8641:[-.10889,.39111,0,0],8656:[-.10889,.39111,0,0],8657:[.19444,.69444,0,0],8658:[-.10889,.39111,0,0],8659:[.19444,.69444,0,0],8660:[-.10889,.39111,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.06389,0],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68611,0,0],8712:[.08556,.58556,0,0],8715:[.08556,.58556,0,0],8722:[.13333,.63333,0,0],8723:[.13333,.63333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.02778,.47222,0,0],8728:[-.02639,.47361,0,0],8729:[-.02639,.47361,0,0],8730:[.18,.82,0,0],8733:[0,.44444,0,0],8734:[0,.44444,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.12778,0],8764:[-.10889,.39111,0,0],8768:[.19444,.69444,0,0],8771:[.00222,.50222,0,0],8776:[.02444,.52444,0,0],8781:[.00222,.50222,0,0],8801:[.00222,.50222,0,0],8804:[.19667,.69667,0,0],8805:[.19667,.69667,0,0],8810:[.08556,.58556,0,0],8811:[.08556,.58556,0,0],8826:[.08556,.58556,0,0],8827:[.08556,.58556,0,0],8834:[.08556,.58556,0,0],8835:[.08556,.58556,0,0],8838:[.19667,.69667,0,0],8839:[.19667,.69667,0,0],8846:[0,.55556,0,0],8849:[.19667,.69667,0,0],8850:[.19667,.69667,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.13333,.63333,0,0],8854:[.13333,.63333,0,0],8855:[.13333,.63333,0,0],8856:[.13333,.63333,0,0],8857:[.13333,.63333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8900:[-.02639,.47361,0,0],8901:[-.02639,.47361,0,0],8902:[-.02778,.47222,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.13889,.36111,0,0],8995:[-.13889,.36111,0,0],9651:[.19444,.69444,0,0],9657:[-.02778,.47222,0,0],9661:[.19444,.69444,0,0],9667:[-.02778,.47222,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10815:[0,.68611,0,0],10927:[.19667,.69667,0,0],10928:[.19667,.69667,0,0]},"Main-Italic":{33:[0,.69444,.12417,0],34:[0,.69444,.06961,0],35:[.19444,.69444,.06616,0],37:[.05556,.75,.13639,0],38:[0,.69444,.09694,0],39:[0,.69444,.12417,0],40:[.25,.75,.16194,0],41:[.25,.75,.03694,0],42:[0,.75,.14917,0],43:[.05667,.56167,.03694,0],44:[.19444,.10556,0,0],45:[0,.43056,.02826,0],46:[0,.10556,0,0],47:[.25,.75,.16194,0],48:[0,.64444,.13556,0],49:[0,.64444,.13556,0],50:[0,.64444,.13556,0],51:[0,.64444,.13556,0],52:[.19444,.64444,.13556,0],53:[0,.64444,.13556,0],54:[0,.64444,.13556,0],55:[.19444,.64444,.13556,0],56:[0,.64444,.13556,0],57:[0,.64444,.13556,0],58:[0,.43056,.0582,0],59:[.19444,.43056,.0582,0],61:[-.13313,.36687,.06616,0],63:[0,.69444,.1225,0],64:[0,.69444,.09597,0],65:[0,.68333,0,0],66:[0,.68333,.10257,0],67:[0,.68333,.14528,0],68:[0,.68333,.09403,0],69:[0,.68333,.12028,0],70:[0,.68333,.13305,0],71:[0,.68333,.08722,0],72:[0,.68333,.16389,0],73:[0,.68333,.15806,0],74:[0,.68333,.14028,0],75:[0,.68333,.14528,0],76:[0,.68333,0,0],77:[0,.68333,.16389,0],78:[0,.68333,.16389,0],79:[0,.68333,.09403,0],80:[0,.68333,.10257,0],81:[.19444,.68333,.09403,0],82:[0,.68333,.03868,0],83:[0,.68333,.11972,0],84:[0,.68333,.13305,0],85:[0,.68333,.16389,0],86:[0,.68333,.18361,0],87:[0,.68333,.18361,0],88:[0,.68333,.15806,0],89:[0,.68333,.19383,0],90:[0,.68333,.14528,0],91:[.25,.75,.1875,0],93:[.25,.75,.10528,0],94:[0,.69444,.06646,0],95:[.31,.12056,.09208,0],97:[0,.43056,.07671,0],98:[0,.69444,.06312,0],99:[0,.43056,.05653,0],100:[0,.69444,.10333,0],101:[0,.43056,.07514,0],102:[.19444,.69444,.21194,0],103:[.19444,.43056,.08847,0],104:[0,.69444,.07671,0],105:[0,.65536,.1019,0],106:[.19444,.65536,.14467,0],107:[0,.69444,.10764,0],108:[0,.69444,.10333,0],109:[0,.43056,.07671,0],110:[0,.43056,.07671,0],111:[0,.43056,.06312,0],112:[.19444,.43056,.06312,0],113:[.19444,.43056,.08847,0],114:[0,.43056,.10764,0],115:[0,.43056,.08208,0],116:[0,.61508,.09486,0],117:[0,.43056,.07671,0],118:[0,.43056,.10764,0],119:[0,.43056,.10764,0],120:[0,.43056,.12042,0],121:[.19444,.43056,.08847,0],122:[0,.43056,.12292,0],126:[.35,.31786,.11585,0],163:[0,.69444,0,0],305:[0,.43056,0,.02778],567:[.19444,.43056,0,.08334],768:[0,.69444,0,0],769:[0,.69444,.09694,0],770:[0,.69444,.06646,0],771:[0,.66786,.11585,0],772:[0,.56167,.10333,0],774:[0,.69444,.10806,0],775:[0,.66786,.11752,0],776:[0,.66786,.10474,0],778:[0,.69444,0,0],779:[0,.69444,.1225,0],780:[0,.62847,.08295,0],915:[0,.68333,.13305,0],916:[0,.68333,0,0],920:[0,.68333,.09403,0],923:[0,.68333,0,0],926:[0,.68333,.15294,0],928:[0,.68333,.16389,0],931:[0,.68333,.12028,0],933:[0,.68333,.11111,0],934:[0,.68333,.05986,0],936:[0,.68333,.11111,0],937:[0,.68333,.10257,0],8211:[0,.43056,.09208,0],8212:[0,.43056,.09208,0],8216:[0,.69444,.12417,0],8217:[0,.69444,.12417,0],8220:[0,.69444,.1685,0],8221:[0,.69444,.06961,0],8463:[0,.68889,0,0]},"Main-Regular":{32:[0,0,0,0],33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.19444,.10556,0,0],45:[0,.43056,0,0],46:[0,.10556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.43056,0,0],59:[.19444,.43056,0,0],60:[.0391,.5391,0,0],61:[-.13313,.36687,0,0],62:[.0391,.5391,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68333,0,0],66:[0,.68333,0,0],67:[0,.68333,0,0],68:[0,.68333,0,0],69:[0,.68333,0,0],70:[0,.68333,0,0],71:[0,.68333,0,0],72:[0,.68333,0,0],73:[0,.68333,0,0],74:[0,.68333,0,0],75:[0,.68333,0,0],76:[0,.68333,0,0],77:[0,.68333,0,0],78:[0,.68333,0,0],79:[0,.68333,0,0],80:[0,.68333,0,0],81:[.19444,.68333,0,0],82:[0,.68333,0,0],83:[0,.68333,0,0],84:[0,.68333,0,0],85:[0,.68333,0,0],86:[0,.68333,.01389,0],87:[0,.68333,.01389,0],88:[0,.68333,0,0],89:[0,.68333,.025,0],90:[0,.68333,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.12056,.02778,0],96:[0,.69444,0,0],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,0],100:[0,.69444,0,0],101:[0,.43056,0,0],102:[0,.69444,.07778,0],103:[.19444,.43056,.01389,0],104:[0,.69444,0,0],105:[0,.66786,0,0],106:[.19444,.66786,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.19444,.43056,0,0],113:[.19444,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.61508,0,0],117:[0,.43056,0,0],118:[0,.43056,.01389,0],119:[0,.43056,.01389,0],120:[0,.43056,0,0],121:[.19444,.43056,.01389,0],122:[0,.43056,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.31786,0,0],160:[0,0,0,0],168:[0,.66786,0,0],172:[0,.43056,0,0],175:[0,.56778,0,0],176:[0,.69444,0,0],177:[.08333,.58333,0,0],180:[0,.69444,0,0],215:[.08333,.58333,0,0],247:[.08333,.58333,0,0],305:[0,.43056,0,0],567:[.19444,.43056,0,0],710:[0,.69444,0,0],711:[0,.62847,0,0],713:[0,.56778,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.66786,0,0],730:[0,.69444,0,0],732:[0,.66786,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.66786,0,0],772:[0,.56778,0,0],774:[0,.69444,0,0],775:[0,.66786,0,0],776:[0,.66786,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.62847,0,0],824:[.19444,.69444,0,0],915:[0,.68333,0,0],916:[0,.68333,0,0],920:[0,.68333,0,0],923:[0,.68333,0,0],926:[0,.68333,0,0],928:[0,.68333,0,0],931:[0,.68333,0,0],933:[0,.68333,0,0],934:[0,.68333,0,0],936:[0,.68333,0,0],937:[0,.68333,0,0],8211:[0,.43056,.02778,0],8212:[0,.43056,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8230:[0,.12,0,0],8242:[0,.55556,0,0],8407:[0,.71444,.15382,0],8463:[0,.68889,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,.11111],8472:[.19444,.43056,0,.11111],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.13313,.36687,0,0],8593:[.19444,.69444,0,0],8594:[-.13313,.36687,0,0],8595:[.19444,.69444,0,0],8596:[-.13313,.36687,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8614:[.011,.511,0,0],8617:[.011,.511,0,0],8618:[.011,.511,0,0],8636:[-.13313,.36687,0,0],8637:[-.13313,.36687,0,0],8640:[-.13313,.36687,0,0],8641:[-.13313,.36687,0,0],8652:[.011,.671,0,0],8656:[-.13313,.36687,0,0],8657:[.19444,.69444,0,0],8658:[-.13313,.36687,0,0],8659:[.19444,.69444,0,0],8660:[-.13313,.36687,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.05556,.08334],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68333,0,0],8712:[.0391,.5391,0,0],8715:[.0391,.5391,0,0],8722:[.08333,.58333,0,0],8723:[.08333,.58333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.03472,.46528,0,0],8728:[-.05555,.44445,0,0],8729:[-.05555,.44445,0,0],8730:[.2,.8,0,0],8733:[0,.43056,0,0],8734:[0,.43056,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.11111,0],8764:[-.13313,.36687,0,0],8768:[.19444,.69444,0,0],8771:[-.03625,.46375,0,0],8773:[-.022,.589,0,0],8776:[-.01688,.48312,0,0],8781:[-.03625,.46375,0,0],8784:[-.133,.67,0,0],8800:[.215,.716,0,0],8801:[-.03625,.46375,0,0],8804:[.13597,.63597,0,0],8805:[.13597,.63597,0,0],8810:[.0391,.5391,0,0],8811:[.0391,.5391,0,0],8826:[.0391,.5391,0,0],8827:[.0391,.5391,0,0],8834:[.0391,.5391,0,0],8835:[.0391,.5391,0,0],8838:[.13597,.63597,0,0],8839:[.13597,.63597,0,0],8846:[0,.55556,0,0],8849:[.13597,.63597,0,0],8850:[.13597,.63597,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.08333,.58333,0,0],8854:[.08333,.58333,0,0],8855:[.08333,.58333,0,0],8856:[.08333,.58333,0,0],8857:[.08333,.58333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8872:[.249,.75,0,0],8900:[-.05555,.44445,0,0],8901:[-.05555,.44445,0,0],8902:[-.03472,.46528,0,0],8904:[.005,.505,0,0],8942:[.03,.9,0,0],8943:[-.19,.31,0,0],8945:[-.1,.82,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.14236,.35764,0,0],8995:[-.14236,.35764,0,0],9136:[.244,.744,0,0],9137:[.244,.744,0,0],9651:[.19444,.69444,0,0],9657:[-.03472,.46528,0,0],9661:[.19444,.69444,0,0],9667:[-.03472,.46528,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10222:[.244,.744,0,0],10223:[.244,.744,0,0],10229:[.011,.511,0,0],10230:[.011,.511,0,0],10231:[.011,.511,0,0],10232:[.024,.525,0,0],10233:[.024,.525,0,0],10234:[.024,.525,0,0],10236:[.011,.511,0,0],10815:[0,.68333,0,0],10927:[.13597,.63597,0,0],10928:[.13597,.63597,0,0]},"Math-BoldItalic":{47:[.19444,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,.04835,0],67:[0,.68611,.06979,0],68:[0,.68611,.03194,0],69:[0,.68611,.05451,0],70:[0,.68611,.15972,0],71:[0,.68611,0,0],72:[0,.68611,.08229,0],73:[0,.68611,.07778,0],74:[0,.68611,.10069,0],75:[0,.68611,.06979,0],76:[0,.68611,0,0],77:[0,.68611,.11424,0],78:[0,.68611,.11424,0],79:[0,.68611,.03194,0],80:[0,.68611,.15972,0],81:[.19444,.68611,0,0],82:[0,.68611,.00421,0],83:[0,.68611,.05382,0],84:[0,.68611,.15972,0],85:[0,.68611,.11424,0],86:[0,.68611,.25555,0],87:[0,.68611,.15972,0],88:[0,.68611,.07778,0],89:[0,.68611,.25555,0],90:[0,.68611,.06979,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[.19444,.69444,.11042,0],103:[.19444,.44444,.03704,0],104:[0,.69444,0,0],105:[0,.69326,0,0],106:[.19444,.69326,.0622,0],107:[0,.69444,.01852,0],108:[0,.69444,.0088,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,.03704,0],114:[0,.44444,.03194,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.03704,0],119:[0,.44444,.02778,0],120:[0,.44444,0,0],121:[.19444,.44444,.03704,0],122:[0,.44444,.04213,0],915:[0,.68611,.15972,0],916:[0,.68611,0,0],920:[0,.68611,.03194,0],923:[0,.68611,0,0],926:[0,.68611,.07458,0],928:[0,.68611,.08229,0],931:[0,.68611,.05451,0],933:[0,.68611,.15972,0],934:[0,.68611,0,0],936:[0,.68611,.11653,0],937:[0,.68611,.04835,0],945:[0,.44444,0,0],946:[.19444,.69444,.03403,0],947:[.19444,.44444,.06389,0],948:[0,.69444,.03819,0],949:[0,.44444,0,0],950:[.19444,.69444,.06215,0],951:[.19444,.44444,.03704,0],952:[0,.69444,.03194,0],953:[0,.44444,0,0],954:[0,.44444,0,0],955:[0,.69444,0,0],956:[.19444,.44444,0,0],957:[0,.44444,.06898,0],958:[.19444,.69444,.03021,0],959:[0,.44444,0,0],960:[0,.44444,.03704,0],961:[.19444,.44444,0,0],962:[.09722,.44444,.07917,0],963:[0,.44444,.03704,0],964:[0,.44444,.13472,0],965:[0,.44444,.03704,0],966:[.19444,.44444,0,0],967:[.19444,.44444,0,0],968:[.19444,.69444,.03704,0],969:[0,.44444,.03704,0],977:[0,.69444,0,0],981:[.19444,.69444,0,0],982:[0,.44444,.03194,0],1009:[.19444,.44444,0,0],1013:[0,.44444,0,0]},"Math-Italic":{47:[.19444,.69444,0,0],65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"Math-Regular":{65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"SansSerif-Regular":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.125,.08333,0,0],45:[0,.44444,0,0],46:[0,.08333,0,0],47:[.25,.75,0,0],48:[0,.65556,0,0],49:[0,.65556,0,0],50:[0,.65556,0,0],51:[0,.65556,0,0],52:[0,.65556,0,0],53:[0,.65556,0,0],54:[0,.65556,0,0],55:[0,.65556,0,0],56:[0,.65556,0,0],57:[0,.65556,0,0],58:[0,.44444,0,0],59:[.125,.44444,0,0],61:[-.13,.37,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.69444,0,0],66:[0,.69444,0,0],67:[0,.69444,0,0],68:[0,.69444,0,0],69:[0,.69444,0,0],70:[0,.69444,0,0],71:[0,.69444,0,0],72:[0,.69444,0,0],73:[0,.69444,0,0],74:[0,.69444,0,0],75:[0,.69444,0,0],76:[0,.69444,0,0],77:[0,.69444,0,0],78:[0,.69444,0,0],79:[0,.69444,0,0],80:[0,.69444,0,0],81:[.125,.69444,0,0],82:[0,.69444,0,0],83:[0,.69444,0,0],84:[0,.69444,0,0],85:[0,.69444,0,0],86:[0,.69444,.01389,0],87:[0,.69444,.01389,0],88:[0,.69444,0,0],89:[0,.69444,.025,0],90:[0,.69444,0,0],91:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.35,.09444,.02778,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.06944,0],103:[.19444,.44444,.01389,0],104:[0,.69444,0,0],105:[0,.67937,0,0],106:[.19444,.67937,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,.01389,0],115:[0,.44444,0,0],116:[0,.57143,0,0],117:[0,.44444,0,0],118:[0,.44444,.01389,0],119:[0,.44444,.01389,0],120:[0,.44444,0,0],121:[.19444,.44444,.01389,0],122:[0,.44444,0,0],126:[.35,.32659,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.67659,0,0],772:[0,.60889,0,0],774:[0,.69444,0,0],775:[0,.67937,0,0],776:[0,.67937,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],915:[0,.69444,0,0],916:[0,.69444,0,0],920:[0,.69444,0,0],923:[0,.69444,0,0],926:[0,.69444,0,0],928:[0,.69444,0,0],931:[0,.69444,0,0],933:[0,.69444,0,0],934:[0,.69444,0,0],936:[0,.69444,0,0],937:[0,.69444,0,0],8211:[0,.44444,.02778,0],8212:[0,.44444,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0]},"Script-Regular":{65:[0,.7,.22925,0],66:[0,.7,.04087,0],67:[0,.7,.1689,0],68:[0,.7,.09371,0],69:[0,.7,.18583,0],70:[0,.7,.13634,0],71:[0,.7,.17322,0],72:[0,.7,.29694,0],73:[0,.7,.19189,0],74:[.27778,.7,.19189,0],75:[0,.7,.31259,0],76:[0,.7,.19189,0],77:[0,.7,.15981,0],78:[0,.7,.3525,0],79:[0,.7,.08078,0],80:[0,.7,.08078,0],81:[0,.7,.03305,0],82:[0,.7,.06259,0],83:[0,.7,.19189,0],84:[0,.7,.29087,0],85:[0,.7,.25815,0],86:[0,.7,.27523,0],87:[0,.7,.27523,0],88:[0,.7,.26006,0],89:[0,.7,.2939,0],90:[0,.7,.24037,0]},"Size1-Regular":{40:[.35001,.85,0,0],41:[.35001,.85,0,0],47:[.35001,.85,0,0],91:[.35001,.85,0,0],92:[.35001,.85,0,0],93:[.35001,.85,0,0],123:[.35001,.85,0,0],125:[.35001,.85,0,0],710:[0,.72222,0,0],732:[0,.72222,0,0],770:[0,.72222,0,0],771:[0,.72222,0,0],8214:[-99e-5,.601,0,0],8593:[1e-5,.6,0,0],8595:[1e-5,.6,0,0],8657:[1e-5,.6,0,0],8659:[1e-5,.6,0,0],8719:[.25001,.75,0,0],8720:[.25001,.75,0,0],8721:[.25001,.75,0,0],8730:[.35001,.85,0,0],8739:[-.00599,.606,0,0],8741:[-.00599,.606,0,0],8747:[.30612,.805,.19445,0],8748:[.306,.805,.19445,0],8749:[.306,.805,.19445,0],8750:[.30612,.805,.19445,0],8896:[.25001,.75,0,0],8897:[.25001,.75,0,0],8898:[.25001,.75,0,0],8899:[.25001,.75,0,0],8968:[.35001,.85,0,0],8969:[.35001,.85,0,0],8970:[.35001,.85,0,0],8971:[.35001,.85,0,0],9168:[-99e-5,.601,0,0],10216:[.35001,.85,0,0],10217:[.35001,.85,0,0],10752:[.25001,.75,0,0],10753:[.25001,.75,0,0],10754:[.25001,.75,0,0],10756:[.25001,.75,0,0],10758:[.25001,.75,0,0]},"Size2-Regular":{40:[.65002,1.15,0,0],41:[.65002,1.15,0,0],47:[.65002,1.15,0,0],91:[.65002,1.15,0,0],92:[.65002,1.15,0,0],93:[.65002,1.15,0,0],123:[.65002,1.15,0,0],125:[.65002,1.15,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8719:[.55001,1.05,0,0],8720:[.55001,1.05,0,0],8721:[.55001,1.05,0,0],8730:[.65002,1.15,0,0],8747:[.86225,1.36,.44445,0],8748:[.862,1.36,.44445,0],8749:[.862,1.36,.44445,0],8750:[.86225,1.36,.44445,0],8896:[.55001,1.05,0,0],8897:[.55001,1.05,0,0],8898:[.55001,1.05,0,0],8899:[.55001,1.05,0,0],8968:[.65002,1.15,0,0],8969:[.65002,1.15,0,0],8970:[.65002,1.15,0,0],8971:[.65002,1.15,0,0],10216:[.65002,1.15,0,0],10217:[.65002,1.15,0,0],10752:[.55001,1.05,0,0],10753:[.55001,1.05,0,0],10754:[.55001,1.05,0,0],10756:[.55001,1.05,0,0],10758:[.55001,1.05,0,0]},"Size3-Regular":{40:[.95003,1.45,0,0],41:[.95003,1.45,0,0],47:[.95003,1.45,0,0],91:[.95003,1.45,0,0],92:[.95003,1.45,0,0],93:[.95003,1.45,0,0],123:[.95003,1.45,0,0],125:[.95003,1.45,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8730:[.95003,1.45,0,0],8968:[.95003,1.45,0,0],8969:[.95003,1.45,0,0],8970:[.95003,1.45,0,0],8971:[.95003,1.45,0,0],10216:[.95003,1.45,0,0],10217:[.95003,1.45,0,0]},"Size4-Regular":{40:[1.25003,1.75,0,0],41:[1.25003,1.75,0,0],47:[1.25003,1.75,0,0],91:[1.25003,1.75,0,0],92:[1.25003,1.75,0,0],93:[1.25003,1.75,0,0],123:[1.25003,1.75,0,0],125:[1.25003,1.75,0,0],710:[0,.825,0,0],732:[0,.825,0,0],770:[0,.825,0,0],771:[0,.825,0,0],8730:[1.25003,1.75,0,0],8968:[1.25003,1.75,0,0],8969:[1.25003,1.75,0,0],8970:[1.25003,1.75,0,0],8971:[1.25003,1.75,0,0],9115:[.64502,1.155,0,0],9116:[1e-5,.6,0,0],9117:[.64502,1.155,0,0],9118:[.64502,1.155,0,0],9119:[1e-5,.6,0,0],9120:[.64502,1.155,0,0],9121:[.64502,1.155,0,0],9122:[-99e-5,.601,0,0],9123:[.64502,1.155,0,0],9124:[.64502,1.155,0,0],9125:[-99e-5,.601,0,0],9126:[.64502,1.155,0,0],9127:[1e-5,.9,0,0],9128:[.65002,1.15,0,0],9129:[.90001,0,0,0],9130:[0,.3,0,0],9131:[1e-5,.9,0,0],9132:[.65002,1.15,0,0],9133:[.90001,0,0,0],9143:[.88502,.915,0,0],10216:[1.25003,1.75,0,0],10217:[1.25003,1.75,0,0],57344:[-.00499,.605,0,0],57345:[-.00499,.605,0,0],57680:[0,.12,0,0],57681:[0,.12,0,0],57682:[0,.12,0,0],57683:[0,.12,0,0]},"Typewriter-Regular":{33:[0,.61111,0,0],34:[0,.61111,0,0],35:[0,.61111,0,0],36:[.08333,.69444,0,0],37:[.08333,.69444,0,0],38:[0,.61111,0,0],39:[0,.61111,0,0],40:[.08333,.69444,0,0],41:[.08333,.69444,0,0],42:[0,.52083,0,0],43:[-.08056,.53055,0,0],44:[.13889,.125,0,0],45:[-.08056,.53055,0,0],46:[0,.125,0,0],47:[.08333,.69444,0,0],48:[0,.61111,0,0],49:[0,.61111,0,0],50:[0,.61111,0,0],51:[0,.61111,0,0],52:[0,.61111,0,0],53:[0,.61111,0,0],54:[0,.61111,0,0],55:[0,.61111,0,0],56:[0,.61111,0,0],57:[0,.61111,0,0],58:[0,.43056,0,0],59:[.13889,.43056,0,0],60:[-.05556,.55556,0,0],61:[-.19549,.41562,0,0],62:[-.05556,.55556,0,0],63:[0,.61111,0,0],64:[0,.61111,0,0],65:[0,.61111,0,0],66:[0,.61111,0,0],67:[0,.61111,0,0],68:[0,.61111,0,0],69:[0,.61111,0,0],70:[0,.61111,0,0],71:[0,.61111,0,0],72:[0,.61111,0,0],73:[0,.61111,0,0],74:[0,.61111,0,0],75:[0,.61111,0,0],76:[0,.61111,0,0],77:[0,.61111,0,0],78:[0,.61111,0,0],79:[0,.61111,0,0],80:[0,.61111,0,0],81:[.13889,.61111,0,0],82:[0,.61111,0,0],83:[0,.61111,0,0],84:[0,.61111,0,0],85:[0,.61111,0,0],86:[0,.61111,0,0],87:[0,.61111,0,0],88:[0,.61111,0,0],89:[0,.61111,0,0],90:[0,.61111,0,0],91:[.08333,.69444,0,0],92:[.08333,.69444,0,0],93:[.08333,.69444,0,0],94:[0,.61111,0,0],95:[.09514,0,0,0],96:[0,.61111,0,0],97:[0,.43056,0,0],98:[0,.61111,0,0],99:[0,.43056,0,0],100:[0,.61111,0,0],101:[0,.43056,0,0],102:[0,.61111,0,0],103:[.22222,.43056,0,0],104:[0,.61111,0,0],105:[0,.61111,0,0],106:[.22222,.61111,0,0],107:[0,.61111,0,0],108:[0,.61111,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.22222,.43056,0,0],113:[.22222,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.55358,0,0],117:[0,.43056,0,0],118:[0,.43056,0,0],119:[0,.43056,0,0],120:[0,.43056,0,0],121:[.22222,.43056,0,0],122:[0,.43056,0,0],123:[.08333,.69444,0,0],124:[.08333,.69444,0,0],125:[.08333,.69444,0,0],126:[0,.61111,0,0],127:[0,.61111,0,0],305:[0,.43056,0,0],567:[.22222,.43056,0,0],768:[0,.61111,0,0],769:[0,.61111,0,0],770:[0,.61111,0,0],771:[0,.61111,0,0],772:[0,.56555,0,0],774:[0,.61111,0,0],776:[0,.61111,0,0],778:[0,.61111,0,0],780:[0,.56597,0,0],915:[0,.61111,0,0],916:[0,.61111,0,0],920:[0,.61111,0,0],923:[0,.61111,0,0],926:[0,.61111,0,0],928:[0,.61111,0,0],931:[0,.61111,0,0],933:[0,.61111,0,0],934:[0,.61111,0,0],936:[0,.61111,0,0],937:[0,.61111,0,0],2018:[0,.61111,0,0],2019:[0,.61111,0,0],8242:[0,.61111,0,0]}};const cjkRegex=/[\u3040-\u309F]|[\u30A0-\u30FF]|[\u4E00-\u9FAF]|[\uAC00-\uD7AF]/;const SIGMAS={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25]};const xi8=.04;const xi9=.111;const xi10=.166;const xi11=.2;const xi12=.6;const xi13=.1;const ptPerEm=10;const METRICS={defaultRuleThickness:xi8,bigOpSpacing1:xi9,bigOpSpacing2:xi10,bigOpSpacing3:xi11,bigOpSpacing4:xi12,bigOpSpacing5:xi13,ptPerEm:ptPerEm,pxPerEm:ptPerEm*4/3,doubleRuleSep:2/ptPerEm,arraycolsep:5/ptPerEm,baselineskip:12/ptPerEm,arrayrulewidth:.4/ptPerEm,fboxsep:3/ptPerEm,fboxrule:.4/ptPerEm};const extraCharacterMap={" ":" ","​":" ","Å":"A","Ç":"C","Ð":"D","Þ":"o","å":"a","ç":"c","ð":"d","þ":"o","А":"A","Б":"B","В":"B","Г":"F","Д":"A","Е":"E","Ж":"K","З":"3","И":"N","Й":"N","К":"K","Л":"N","М":"M","Н":"H","О":"O","П":"N","Р":"P","С":"C","Т":"T","У":"y","Ф":"O","Х":"X","Ц":"U","Ч":"h","Ш":"W","Щ":"W","Ъ":"B","Ы":"X","Ь":"B","Э":"3","Ю":"X","Я":"R","а":"a","б":"b","в":"a","г":"r","д":"y","е":"e","ж":"m","з":"e","и":"n","й":"n","к":"n","л":"n","м":"m","н":"n","о":"o","п":"n","р":"p","с":"c","т":"o","у":"y","ф":"b","х":"x","ц":"n","ч":"n","ш":"w","щ":"w","ъ":"a","ы":"m","ь":"a","э":"e","ю":"m","я":"r"};const getCharacterMetrics=function(character,fontCode){const fontName={cal:"Caligraphic-Regular",ams:"AMS-Regular",frak:"Fraktur-Regular",bb:"AMS-Regular",scr:"Script-Regular",cmr:"Main-Regular",cmtt:"Typewriter-Regular",cmss:"SansSerif-Regular"}[fontCode]||fontCode;let ch=character.charCodeAt(0);if(character[0]in extraCharacterMap){ch=extraCharacterMap[character[0]].charCodeAt(0)}else if(cjkRegex.test(character[0])){ch=77}const metrics=metricMap[fontName][ch];if(!metrics){return{defaultMetrics:true,depth:.2,height:.7,italic:0,skew:0}}if(metrics){return{depth:metrics[0],height:metrics[1],italic:metrics[2],skew:metrics[3]}}return null};function convertDimenToEm(value,unit,precision){if(typeof value==="string"){const m=value.match(/([-+]?[0-9.]*)\s*([a-zA-Z]+)/);if(!m){value=parseFloat(value)}else{value=parseFloat(m[1]);unit=m[2].toLowerCase()}}const f={pt:1,mm:7227/2540,cm:7227/254,ex:35271/8192,px:3/4,em:METRICS.ptPerEm,bp:803/800,dd:1238/1157,pc:12,in:72.27,mu:10/18}[unit]||1;if(isFinite(precision)){const factor=Math.pow(10,precision);return Math.round(value/METRICS.ptPerEm*f*factor)/factor}return value/METRICS.ptPerEm*f}function convertDimenToPx(value,unit){return convertDimenToEm(value,unit)*(4/3)*METRICS.ptPerEm}var FontMetrics={toEm:convertDimenToEm,toPx:convertDimenToPx,METRICS:METRICS,SIGMAS:SIGMAS,getCharacterMetrics:getCharacterMetrics};const metrics=[{},{},{}];let i;for(const key in SIGMAS){if(Object.prototype.hasOwnProperty.call(SIGMAS,key)){for(i=0;i<3;i++){metrics[i][key]=SIGMAS[key][i]}}}for(i=0;i<3;i++){metrics[i].emPerEx=SIGMAS.xHeight[i]/SIGMAS.quad[i]}class Mathstyle{constructor(id,size,multiplier,cramped){this.id=id;this.size=size;this.cramped=cramped;this.sizeMultiplier=multiplier;this.metrics=metrics[size>0?size-1:0]}sup(){return styles[sup[this.id]]}sub(){return styles[sub[this.id]]}fracNum(){return styles[fracNum[this.id]]}fracDen(){return styles[fracDen[this.id]]}cramp(){return styles[cramp[this.id]]}cls(){return sizeNames[this.size]}adjustTo(newStyle){let result=ADJUST_NAMES[this.size][newStyle.size];if(result.length>0)result=" "+result;return result}isTight(){return this.size>=2}}const D=0;const Dc=1;const T$1=2;const Tc=3;const S=4;const Sc=5;const SS=6;const SSc=7;const styles=[new Mathstyle(D,0,1,false),new Mathstyle(Dc,0,1,true),new Mathstyle(T$1,1,1,false),new Mathstyle(Tc,1,1,true),new Mathstyle(S,2,.7,false),new Mathstyle(Sc,2,.7,true),new Mathstyle(SS,3,.5,false),new Mathstyle(SSc,3,.5,true)];function toMathstyle(s){if(!s)return s;if(typeof s==="object")return s;const STYLE_NAMES={displaystyle:styles[D],textstyle:styles[T$1],scriptstyle:styles[S],scriptscriptstyle:styles[SS]};console.assert(STYLE_NAMES[s],'unknown style: "',s,'"');return STYLE_NAMES[s]}const sizeNames=["displaystyle textstyle","textstyle","scriptstyle","scriptscriptstyle"];const ADJUST_NAMES=[["","","reset-textstyle scriptstyle","reset-textstyle scriptscriptstyle"],["reset-textstyle displaystyle textstyle","","reset-textstyle scriptstyle","reset-textstyle scriptscriptstyle"],["reset-scriptstyle textstyle displaystyle","reset-scriptstyle textstyle","","reset-scriptstyle scriptscriptstyle"],["reset-scriptscriptstyle textstyle displaystyle","reset-scriptscriptstyle textstyle","reset-scriptscriptstyle scriptstyle",""]];const sup=[S,Sc,S,Sc,SS,SSc,SS,SSc];const sub=[Sc,Sc,Sc,Sc,SSc,SSc,SSc,SSc];const fracNum=[T$1,Tc,S,Sc,SS,SSc,SS,SSc];const fracDen=[Tc,Tc,Sc,Sc,SSc,SSc,SSc,SSc];const cramp=[Dc,Dc,Tc,Tc,Sc,Sc,SSc,SSc];var Mathstyle$1={DISPLAY:styles[D],TEXT:styles[T$1],SCRIPT:styles[S],SCRIPTSCRIPT:styles[SS],toMathstyle:toMathstyle};class Context{constructor(from){this.macros=from.macros||{};this.generateID=from.generateID?from.generateID:false;this.mathstyle=Mathstyle$1.toMathstyle(from.mathstyle||"displaystyle");this.size=from.size||"size5";this.parentMathstyle=from.parentMathstyle||this.mathstyle;this.parentSize=from.parentSize||this.size;this.opacity=from.opacity}clone(override){const result=new Context(this);result.parentMathstyle=this.mathstyle;result.parentSize=this.size;result.macros=this.macros;if(override){if(override.mathstyle==="auto"||!override.mathstyle){delete override.mathstyle}Object.assign(result,override);if(typeof override.mathstyle==="string"){result.mathstyle=Mathstyle$1.toMathstyle(override.mathstyle)}}return result}setMathstyle(value){if(value&&value!=="auto"){this.mathstyle=Mathstyle$1.toMathstyle(value)}}cramp(){return this.clone({mathstyle:this.mathstyle.cramp()})}sup(){return this.clone({mathstyle:this.mathstyle.sup()})}sub(){return this.clone({mathstyle:this.mathstyle.sup()})}}var Context$1={Context:Context};function toString(arg){let result="";if(typeof arg==="number"){result+=Math.floor(100*arg)/100}else if(typeof arg==="string"){result+=arg}else if(Array.isArray(arg)){for(const elem of arg){result+=toString(elem)}}else if(arg){result+=arg.toString()}return result}class Span{constructor(content,classes){this.classes=classes||"";if(Array.isArray(content)){this.children=[].concat.apply([],content)}else if(typeof content==="string"){this.body=content}else if(content&&typeof content==="object"){this.children=[content]}this.style=null;this.updateDimensions()}updateDimensions(){let height=0;let depth=0;let maxFontSize=1;if(this.children){this.children.forEach(x=>{if(x.height>height)height=x.height;if(x.depth>depth)depth=x.depth;if(x.maxFontSize>maxFontSize)maxFontSize=x.maxFontSize})}this.height=height;this.depth=depth;this.maxFontSize=maxFontSize}selected(isSelected){if(isSelected&&!/ML__selected/.test(this.classes)){if(this.classes.length>0)this.classes+=" ";this.classes+="ML__selected"}if(!isSelected&&/ML__selected/.test(this.classes)){this.classes=this.classes.replace("ML__selected","")}if(this.children){this.children.forEach(x=>x.selected(isSelected))}}applyStyle(style){if(!style)return;if(style.color){if(style.color!=="none"){this.setStyle("color",style.color)}else{this.setStyle("color","")}}if(style.backgroundColor){if(style.backgroundColor!=="none"){this.setStyle("background-color",style.backgroundColor)}else{this.setStyle("background-color","")}}if(style.cssClass){this.classes+=" "+style.cssClass}if(!this.body)return;let fontFamily=style.fontFamily;if(fontFamily==="math"&&style.fontShape==="n"){fontFamily="cmr"}let fontName="Main-Regular";if(fontFamily){fontName=getFontName(this.body,fontFamily)}if(style.fontShape){this.classes+=" "+({it:"ML__it",sl:"ML__shape_sl",sc:"ML__shape_sc",ol:"ML__shape_ol"}[style.fontShape]||"")}if(style.fontSeries){const m=style.fontSeries.match(/(.?[lbm])?(.?[cx])?/);if(m){this.classes+=" "+({ul:"ML__series_ul",el:"ML__series_el",l:"ML__series_l",sl:"ML__series_sl",m:"",sb:"ML__series_sb",b:"ML__bold",eb:"ML__series_eb",ub:"ML__series_ub"}[m[1]||""]||"");this.classes+=" "+({uc:"ML__series_uc",ec:"ML__series_ec",c:"ML__series_c",sc:"ML__series_sc",n:"",sx:"ML__series_sx",x:"ML__series_x",ex:"ML__series_ex",ux:"ML__series_ux"}[m[2]||""]||"")}}if(FONT_CLASS[fontFamily]){this.classes+=" "+FONT_CLASS[fontFamily]}else if(fontFamily){this.setStyle("font-family",fontFamily)}if(this.body&&this.body.length>0&&fontName){this.height=0;this.depth=0;this.maxFontSize={size1:.5,size2:.7,size3:.8,size4:.9,size5:1,size6:1.2,size7:1.44,size8:1.73,size9:2.07,size10:2.49}[style.fontSize]||1;this.skew=0;this.italic=0;for(let i=0;i<this.body.length;i++){const metrics=FontMetrics.getCharacterMetrics(this.body.charAt(i),fontName);if(metrics){this.height=Math.max(this.height,metrics.height);this.depth=Math.max(this.depth,metrics.depth);this.skew=metrics.skew;this.italic=metrics.italic}}}}setStyle(prop,...value){const v=toString(value);if(v.length>0){if(!this.style)this.style={};this.style[prop]=v}}setTop(top){if(top&&top!==0){if(!this.style)this.style={};this.style["top"]=toString(top)+"em";this.height-=top;this.depth+=top}}setLeft(left){if(left&&left!==0){if(!this.style)this.style={};this.style["margin-left"]=toString(left)+"em"}}setRight(right){if(right&&right!==0){if(!this.style)this.style={};this.style["margin-right"]=toString(right)+"em"}}setWidth(width){if(width&&width!==0){if(!this.style)this.style={};this.style["width"]=toString(width)+"em"}}addMarginRight(margin){if(margin&&margin!==0){if(!this.style&&!/qquad|quad|enspace|thickspace|mediumspace|thinspace|negativethinspace/.test(this.classes)){const cls={2:"qquad",1:"quad",".5":"enspace",.277778:"thickspace",.222222:"mediumspace",.166667:"thinspace","-0.166667":"negativethinspace"}[margin.toString()];if(cls){this.classes+=" rspace "+cls;return}}if(!this.style)this.style={};const currentMargin=parseFloat(this.style["margin-right"]||"0");this.style["margin-right"]=toString(currentMargin+margin)+"em"}}toMarkup(hskip,hscale){hskip=hskip||0;hscale=hscale||1;let result="";let body=this.body||"";if(this.children){let previousType="none";let previousBody=undefined;for(const child of this.children){let spacing=0;if(previousType){let type=child.type;if(type){if(type==="textord")type="mord";if(type==="first")type="none";if(child.isTight){spacing=INTER_ATOM_TIGHT_SPACING[previousType+"+"+type]||0}else if(previousType!=="mpunct"||previousBody!==","||type!=="mord"){spacing=INTER_ATOM_SPACING[previousType+"+"+type]||0}spacing=Math.floor(hscale*spacing)}}if(child.toMarkup){body+=child.toMarkup(spacing,hscale)}previousType=lastSpanType(child);previousBody=child.body}}if((body==="​"||!body)&&(!this.classes||this.classes==="ML__selected")){result=""}else{result="<span";if(this.cssId){result+=' id="'+this.cssId+'" '}if(this.svgOverlay){this.setStyle("position","relative");this.setStyle("height",this.height+this.depth,"em");this.setStyle("vertical-align",-this.depth,"em")}if(this.attributes){for(const attribute in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,attribute)){result+=" "+attribute+'="'+this.attributes[attribute]+'"'}}}const classes=this.classes.split(" ");if(this.type){if(/command|placeholder|error/.test(this.type)){classes.push({command:"ML__command",placeholder:"ML__placeholder",error:"ML__error"}[this.type])}if(this.caret&&this.type==="command"){classes.push("ML__command-caret")}}let classList="";if(classes.length>1){classList=classes.filter(function(x,e,a){return x.length>0&&a.indexOf(x)===e}).join(" ")}else{classList=classes[0]}if(classList.length>0){result+=' class="'+classList+'"'}if(hskip){if(this.style&&this.style["margin-left"]){this.style["margin-left"]=toString(parseFloat(this.style["margin-left"])+hskip/18)+"em"}else{if(!this.style)this.style={};this.style["margin-left"]=toString(hskip/18)+"em"}}if(this.style){let styleString="";const isSelected=/ML__selected/.test(this.classes);for(const style in this.style){if(Object.prototype.hasOwnProperty.call(this.style,style)){if(style!=="background-color"||!isSelected){styleString+=style+":"+this.style[style]+";"}}}if(styleString.length>0){result+=' style="'+styleString+'"'}}result+=">";if(this.svgOverlay){result+='<span style="';result+="display: inline-block;";result+="height:"+(this.height+this.depth)+"em;";result+="vertical-align:"+this.depth+"em;";result+='">';result+=body;result+="</span>";result+="<svg ";result+='style="position:absolute;';result+="overflow:overlay;";result+="height:"+(this.height+this.depth)+"em;";result+="transform:translateY(-"+Math.round(FontMetrics.toPx(this.depth,"em")+FontMetrics.toPx(this.style.padding))+"px);";if(this.style&&this.style.padding){result+="top:"+this.style.padding+";";result+="left:"+this.style.padding+";";result+="width:calc(100% - 2 * "+this.style.padding+" );"}else{result+="top:0;";result+="left:0;";result+="width:100%;"}result+="z-index:2;";result+='"';if(this.svgStyle){result+=' style="'+this.svgStyle+'"'}result+=">";result+=this.svgOverlay;result+="</svg>"}else{result+=body}result=result+"</span>"}if(this.caret&&this.type!=="command"){if(this.caret==="text"){result=result+'<span class="ML__text-caret"></span>'}else{result=result+'<span class="ML__caret"></span>'}}return result}tryCoalesceWith(span){if(this.tag!==span.tag)return false;if(this.type!==span.type)return false;if(this.type==="error"||this.type==="placeholder"||this.type==="command")return false;const hasChildren=this.children&&this.children.length>0;const spanHasChildren=span.children&&span.children.length>0;if(hasChildren||spanHasChildren)return false;const thisStyleCount=this.style?this.style.length:0;const spanStyleCount=span.style?span.style.length:0;if(thisStyleCount!==spanStyleCount)return false;const classes=this.classes.trim().replace(/\s+/g," ").split(" ");const spanClasses=span.classes.trim().replace(/\s+/g," ").split(" ");if(classes.length!==spanClasses.length)return false;classes.sort();spanClasses.sort();for(let i=0;i<classes.length;i++){if(classes[i]==="vertical-separator")return false;if(classes[i]!==spanClasses[i])return false}if(this.style&&span.style){for(const style in this.style){if(Object.prototype.hasOwnProperty.call(this.style,style)&&Object.prototype.hasOwnProperty.call(span.style,style)){if(this.style[style]!==span.style[style])return false}}}this.body+=span.body;this.height=Math.max(this.height,span.height);this.depth=Math.max(this.depth,span.depth);this.maxFontSize=Math.max(this.maxFontSize,span.maxFontSize);this.italic=span.italic;return true}}const INTER_ATOM_SPACING={"mord+mop":3,"mord+mbin":4,"mord+mrel":5,"mord+minner":3,"mop+mord":3,"mop+mop":3,"mop+mbin":5,"mop+minner":3,"mbin+mord":4,"mbin+mop":4,"mbin+mopen":4,"mbin+minner":4,"mrel+mord":5,"mrel+mop":5,"mrel+mopen":5,"mrel+minner":5,"mclose+mop":3,"mclose+mbin":4,"mclose+mrel":5,"mclose+minner":3,"mpunct+mord":3,"mpunct+mop":3,"mpunct+mbin":4,"mpunct+mrel":5,"mpunct+mopen":3,"mpunct+mpunct":3,"mpunct+minner":3};const INTER_ATOM_TIGHT_SPACING={"mord+mop":3,"mop+mord":3,"mop+mop":3,"mclose+mop":3,"minner+mop":3};function lastSpanType(span){const result=span.type;if(result==="first")return"none";if(result==="textord")return"mord";return result}function coalesce(spans){if(!spans||spans.length===0)return[];spans[0].children=coalesce(spans[0].children);const result=[spans[0]];for(let i=1;i<spans.length;i++){if(!result[result.length-1].tryCoalesceWith(spans[i])){spans[i].children=coalesce(spans[i].children);result.push(spans[i])}}return result}function height(spans){if(!spans)return 0;if(Array.isArray(spans)){return spans.reduce((acc,x)=>Math.max(acc,x.height),0)}return spans.height}function depth(spans){if(!spans)return 0;if(Array.isArray(spans)){return spans.reduce((acc,x)=>Math.max(acc,x.depth),0)}return spans.depth}function skew(spans){if(!spans)return 0;if(Array.isArray(spans)){let result=0;for(const span of spans){result+=span.skew||0}return result}return spans.skew}function italic(spans){if(!spans)return 0;if(Array.isArray(spans)){return spans[spans.length-1].italic}return spans.italic}function makeSpan(content,classes){if(Array.isArray(content)){const c=[];for(const s of content){if(s)c.push(s)}if(c.length===1){return makeSpan(c[0],classes)}}return new Span(content,classes)}function makeSymbol(fontFamily,symbol,classes){const result=new Span(symbol,classes);const metrics=FontMetrics.getCharacterMetrics(symbol,fontFamily);result.height=metrics.height;result.depth=metrics.depth;result.skew=metrics.skew;result.italic=metrics.italic;result.setRight(result.italic);return result}function makeFontSizer(context,fontSize){const fontSizeAdjustment=fontSize?fontSize/context.mathstyle.sizeMultiplier:0;const fontSizeInner=new Span("​");if(fontSizeAdjustment!==1){fontSizeInner.setStyle("font-size",fontSizeAdjustment,fontSizeAdjustment>0?"em":"");fontSizeInner.attributes={"aria-hidden":true}}if(context.size!=="size5"){return new Span(fontSizeInner,"fontsize-ensurer reset-"+context.size+" size5")}return fontSizeAdjustment!==0?fontSizeInner:null}function makeSpanOfType(type,content,classes){const result=makeSpan(content,classes);result.type=type;return result}function makeOp(content,classes){return makeSpanOfType("mop",content,classes)}function makeOrd(content,classes){return makeSpanOfType("mord",content,classes)}function makeRel(content,classes){return makeSpanOfType("mrel",content,classes)}function makeClose(content,classes){return makeSpanOfType("mclose",content,classes)}function makeOpen(content,classes){return makeSpanOfType("mopen",content,classes)}function makeInner(content,classes){return makeSpanOfType("minner",content,classes)}function makePunct(content,classes){return makeSpanOfType("mpunct",content,classes)}function makeStyleWrap(type,children,fromStyle,toStyle,classes){classes=classes||"";classes+=" style-wrap ";const result=makeHlist(children,classes+fromStyle.adjustTo(toStyle));result.type=type;const multiplier=toStyle.sizeMultiplier/fromStyle.sizeMultiplier;result.height*=multiplier;result.depth*=multiplier;result.maxFontSize=toStyle.sizeMultiplier;return result}function makeSVG(body,svgMarkup,svgStyle){body.svgOverlay=svgMarkup;body.svgStyle=svgStyle;return body}function makeHlist(spans,classes){if(!classes||classes.length===0){if(spans instanceof Span){return spans}else if(Array.isArray(spans)&&spans.length===1){return spans[0]}}const result=new Span(spans,classes);let multiplier=1;if(spans instanceof Span){multiplier=spans.maxFontSize}else{multiplier=spans.reduce((acc,x)=>Math.max(acc,x.maxFontSize),0)}result.height*=multiplier;result.depth*=multiplier;return result}function makeVlist(context,elements,pos,posData){let listDepth=0;let currPos=0;pos=pos||"shift";posData=posData||0;for(let i=0;i<elements.length;i++){if(Array.isArray(elements[i])){if(elements[i].length===1){elements[i]=elements[i][0]}else{elements[i]=makeSpan(elements[i])}}}if(pos==="shift"){listDepth=-elements[0].depth-posData}else if(pos==="bottom"){listDepth=-posData}else if(pos==="top"){let bottom=posData;for(const element of elements){if(element instanceof Span){bottom-=element.height+element.depth}else{bottom-=element}}listDepth=bottom}else if(pos==="individualShift"){const originalElements=elements;elements=[originalElements[0]];listDepth=-originalElements[1]-originalElements[0].depth;currPos=listDepth;for(let i=2;i<originalElements.length;i+=2){const diff=-originalElements[i+1]-currPos-originalElements[i].depth;currPos=currPos+diff;const kern=diff-(originalElements[i-2].height+originalElements[i-2].depth);elements.push(kern);elements.push(originalElements[i])}}else{console.assert(false,'makeVList with unknown method: "'+pos+'"')}let maxFontSize=1;for(const element of elements){if(element instanceof Span){maxFontSize=Math.max(maxFontSize,element.maxFontSize)}}const fontSizer=makeFontSizer(context,maxFontSize);const newElements=[];currPos=listDepth;for(const element of elements){if(typeof element==="number"){currPos+=element}else{const wrap=makeSpan([fontSizer,element]);wrap.setTop(-element.depth-currPos);newElements.push(wrap);currPos+=element.height+element.depth}}const result=makeSpan(newElements,"vlist");result.depth=Math.max(listDepth,depth(result)||0);result.height=Math.max(-currPos,height(result)||0);return result}const FONT_NAME={ams:"AMS-Regular",bb:"AMS-Regular",cal:"Caligraphic-Regular",frak:"Fraktur-Regular",scr:"Script-Regular",cmr:"Main-Regular",cmss:"SansSerif-Regular",cmtt:"Typewriter-Regular",math:"Math-Regular",mainit:"Main-Italic",mathbf:"Main-Bold"};const FONT_CLASS={ams:"ML__ams",bb:"ML__bb",cal:"ML__cal",frak:"ML__frak",scr:"ML__script",cmr:"ML__mathrm",cmss:"ML__sans",cmtt:"ML__tt",math:"ML__mathit",mainit:"ML__mainit",mathbf:"ML__mathbf"};function getFontName(symbol,fontFamily){if(typeof symbol!=="string"||symbol.length>1||symbol==="​"){return FONT_NAME[fontFamily]}if(fontFamily==="bb"||fontFamily==="scr"){if(!/^[A-Z ]$/.test(symbol))return null}else if(fontFamily==="cal"){if(!/^[0-9A-Z ]$/.test(symbol))return null}else if(fontFamily==="frak"){if(!/^[0-9A-Za-z ]$|^[!"#$%&'()*+,\-./:;=?[]^’‘]$/.test(symbol)){return null}}else if(fontFamily==="cmtt"||fontFamily==="cmss"){if(!/^[0-9A-Za-z ]$|^[!"&'()*+,\-./:;=?@[]^_~\u0131\u0237\u0393\u0394\u0398\u039b\u039e\u03A0\u03A3\u03A5\u03A8\u03a9’‘]$/.test(symbol)){return null}}return FONT_NAME[fontFamily]}var Span$1={coalesce:coalesce,makeSpan:makeSpan,makeOp:makeOp,makeOrd:makeOrd,makeRel:makeRel,makeClose:makeClose,makeOpen:makeOpen,makeInner:makeInner,makePunct:makePunct,makeSpanOfType:makeSpanOfType,makeSymbol:makeSymbol,makeVlist:makeVlist,makeHlist:makeHlist,makeStyleWrap:makeStyleWrap,makeSVG:makeSVG,height:height,depth:depth,skew:skew,italic:italic};let category="";const MATH_SYMBOLS={};const FUNCTIONS={};const ENVIRONMENTS={};const MACROS={iff:"\\;⟺\\;",nicefrac:"^{#1}\\!\\!/\\!_{#2}",bra:"\\mathinner{\\langle{#1}|}",ket:"\\mathinner{|{#1}\\rangle}",braket:"\\mathinner{\\langle{#1}\\rangle}",set:"\\mathinner{\\lbrace #1 \\rbrace}",Bra:"\\left\\langle #1\\right|",Ket:"\\left|#1\\right\\rangle",Braket:"\\left\\langle{#1}\\right\\rangle",Set:"\\left\\lbrace #1 \\right\\rbrace"};const RIGHT_DELIM={"(":")","{":"}","[":"]","|":"|","\\lbrace":"\\rbrace","\\{":"\\}","\\langle":"\\rangle","\\lfloor":"\\rfloor","\\lceil":"\\rceil","\\vert":"\\vert","\\lvert":"\\rvert","\\Vert":"\\Vert","\\lVert":"\\rVert","\\lbrack":"\\rbrack","\\ulcorner":"\\urcorner","\\llcorner":"\\lrcorner","\\lgroup":"\\rgroup","\\lmoustache":"\\rmoustache"};const CRYPTIC="CRYPTIC";const ARCANE="ARCANE";const RARE="RARE";const UNCOMMON="UNCOMMON";const COMMON="COMMON";const SUPERCOMMON="SUPERCOMMON";const FREQUENCY_VALUE={CRYPTIC:0,ARCANE:200,VERY_RARE:600,RARE:1200,UNCOMMON:2e3,COMMON:3e3,SUPERCOMMON:4e3};function frequency(value,...symbols){const v=typeof value==="string"?FREQUENCY_VALUE[value]:value;for(const symbol of symbols){if(MATH_SYMBOLS[symbol]){MATH_SYMBOLS[symbol].frequency=v}if(FUNCTIONS[symbol]){FUNCTIONS[symbol]=Object.assign({},FUNCTIONS[symbol]);FUNCTIONS[symbol].frequency=v}}}function defineSymbol(latexName,fontFamily,type,value,frequency){if(fontFamily&&!/^(ams|cmr|bb|cal|frak|scr)$/.test(fontFamily)){console.log(fontFamily,latexName)}if(typeof frequency==="string")frequency=FREQUENCY_VALUE[frequency];MATH_SYMBOLS[latexName]={type:type===ORD?MATHORD:type,baseFontFamily:fontFamily,value:value,category:category,frequency:frequency}}function defineSymbols(string){for(let i=0;i<string.length;i++){const ch=string.charAt(i);defineSymbol(ch,"",MATHORD,ch)}}function defineSymbolRange(from,to){for(let i=from;i<=to;i++){const ch=String.fromCodePoint(i);defineSymbol(ch,"","mord",ch)}}const CODEPOINT_SHORTCUTS={8739:"|",183:"\\cdot",188:"\\frac{1}{4}",189:"\\frac{1}{2}",190:"\\frac{3}{4}",8304:"^{0}",8305:"^{i}",185:"^{1}",178:"^{2}",179:"^{3}",8308:"^{4}",8309:"^{5}",8310:"^{6}",8311:"^{7}",8312:"^{8}",8313:"^{9}",8314:"^{+}",8315:"^{-}",8316:"^{=}",8319:"^{n}",8320:"_{0}",8321:"_{1}",8322:"_{2}",8323:"_{3}",8324:"_{4}",8325:"_{5}",8326:"_{6}",8327:"_{7}",8328:"_{8}",8329:"_{9}",8330:"_{+}",8331:"_{-}",8332:"_{=}",8336:"_{a}",8337:"_{e}",8338:"_{o}",8339:"_{x}",8242:"\\prime",8243:"\\doubleprime",8736:"\\angle",8450:"\\C",8469:"\\N",8473:"\\P",8474:"\\Q",8477:"\\R",8484:"\\Z"};function matchCodepoint(parseMode,cp){const s=String.fromCodePoint(cp);if(parseMode==="math"&&CODEPOINT_SHORTCUTS[s])return CODEPOINT_SHORTCUTS[s];if(cp>32&&cp<127)return s;let result="";if(parseMode==="math"){for(const p in MATH_SYMBOLS){if(Object.prototype.hasOwnProperty.call(MATH_SYMBOLS,p)){if(MATH_SYMBOLS[p].value===s){result=p;break}}}}else{for(const p in TEXT_SYMBOLS){if(Object.prototype.hasOwnProperty.call(TEXT_SYMBOLS,p)){if(TEXT_SYMBOLS[p]===s){result=p;break}}}}return result||s}const MATH_LETTER_EXCEPTIONS={119893:8462,119965:8492,119968:8496,119969:8497,119971:8459,119972:8464,119975:8466,119976:8499,119981:8475,119994:8495,119996:8458,120004:8500,120070:8493,120075:8460,120076:8465,120085:8476,120093:8488,120122:8450,120127:8461,120133:8469,120135:8473,120136:8474,120137:8477,120145:8484};const MATH_UNICODE_BLOCKS=[{start:119808,len:26,offset:65,style:"bold"},{start:119834,len:26,offset:97,style:"bold"},{start:119860,len:26,offset:65,style:"italic"},{start:119886,len:26,offset:97,style:"italic"},{start:119912,len:26,offset:65,style:"bolditalic"},{start:119938,len:26,offset:97,style:"bolditalic"},{start:119964,len:26,offset:65,variant:"script"},{start:119990,len:26,offset:97,variant:"script"},{start:120016,len:26,offset:65,variant:"script",style:"bold"},{start:120042,len:26,offset:97,variant:"script",style:"bold"},{start:120068,len:26,offset:65,variant:"fraktur"},{start:120094,len:26,offset:97,variant:"fraktur"},{start:120172,len:26,offset:65,variant:"fraktur",style:"bold"},{start:120198,len:26,offset:97,variant:"fraktur",style:"bold"},{start:120120,len:26,offset:65,variant:"double-struck"},{start:120146,len:26,offset:97,variant:"double-struck"},{start:120224,len:26,offset:65,variant:"sans-serif"},{start:120250,len:26,offset:97,variant:"sans-serif"},{start:120276,len:26,offset:65,variant:"sans-serif",style:"bold"},{start:120302,len:26,offset:97,variant:"sans-serif",style:"bold"},{start:120328,len:26,offset:65,variant:"sans-serif",style:"italic"},{start:120354,len:26,offset:97,variant:"sans-serif",style:"italic"},{start:120380,len:26,offset:65,variant:"sans-serif",style:"bolditalic"},{start:120406,len:26,offset:97,variant:"sans-serif",style:"bolditalic"},{start:120432,len:26,offset:65,variant:"monospace"},{start:120458,len:26,offset:97,variant:"monospace"},{start:120488,len:25,offset:913,style:"bold"},{start:120514,len:25,offset:945,style:"bold"},{start:120546,len:25,offset:913,style:"italic"},{start:120572,len:25,offset:945,style:"italic"},{start:120604,len:25,offset:913,style:"bolditalic"},{start:120630,len:25,offset:945,style:"bolditalic"},{start:120662,len:25,offset:913,variant:"sans-serif",style:"bold"},{start:120688,len:25,offset:945,variant:"sans-serif",style:"bold"},{start:120720,len:25,offset:913,variant:"sans-serif",style:"bolditalic"},{start:120746,len:25,offset:945,variant:"sans-serif",style:"bolditalic"},{start:120782,len:10,offset:48,variant:"",style:"bold"},{start:120792,len:10,offset:48,variant:"double-struck"},{start:120803,len:10,offset:48,variant:"sans-serif"},{start:120812,len:10,offset:48,variant:"sans-serif",style:"bold"},{start:120822,len:10,offset:48,variant:"monospace"}];function unicodeToMathVariant(char){let codepoint=char;if(typeof char==="string")codepoint=char.codePointAt(0);if((codepoint<119808||codepoint>120831)&&(codepoint<8448||codepoint>8527)){return{char:char}}for(const c in MATH_LETTER_EXCEPTIONS){if(Object.prototype.hasOwnProperty.call(MATH_LETTER_EXCEPTIONS,c)){if(MATH_LETTER_EXCEPTIONS[c]===codepoint){codepoint=c;break}}}for(let i=0;i<MATH_UNICODE_BLOCKS.length;i++){if(codepoint>=MATH_UNICODE_BLOCKS[i].start&&codepoint<MATH_UNICODE_BLOCKS[i].start+MATH_UNICODE_BLOCKS[i].len){return{char:String.fromCodePoint(codepoint-MATH_UNICODE_BLOCKS[i].start+MATH_UNICODE_BLOCKS[i].offset),variant:MATH_UNICODE_BLOCKS[i].variant,style:MATH_UNICODE_BLOCKS[i].style}}}return{char:char}}function mathVariantToUnicode(char,variant,style){if(!/[A-Za-z0-9]/.test(char))return char;if(!variant&&!style)return char;const codepoint=char.codePointAt(0);for(let i=0;i<MATH_UNICODE_BLOCKS.length;i++){if(!variant||MATH_UNICODE_BLOCKS[i].variant===variant){if(!style||MATH_UNICODE_BLOCKS[i].style===style){if(codepoint>=MATH_UNICODE_BLOCKS[i].offset&&codepoint<MATH_UNICODE_BLOCKS[i].offset+MATH_UNICODE_BLOCKS[i].len){const result=MATH_UNICODE_BLOCKS[i].start+codepoint-MATH_UNICODE_BLOCKS[i].offset;return String.fromCodePoint(MATH_LETTER_EXCEPTIONS[result]||result)}}}}return char}function codepointToLatex(parseMode,cp){if(parseMode==="text")return String.fromCodePoint(cp);let result;if(CODEPOINT_SHORTCUTS[cp])return CODEPOINT_SHORTCUTS[cp];const v=unicodeToMathVariant(cp);if(!v.style&&!v.variant)return matchCodepoint(parseMode,cp);result=v.char;if(v.variant){result="\\"+v.variant+"{"+result+"}"}if(v.style==="bold"){result="\\mathbf{"+result+"}"}else if(v.style==="italic"){result="\\mathit{"+result+"}"}else if(v.style==="bolditalic"){result="\\mathbf{\\mathit{"+result+"}}"}return"\\mathord{"+result+"}"}function unicodeStringToLatex(parseMode,s){let result="";for(const cp of s){result+=codepointToLatex(parseMode,cp.codePointAt(0))}return result}function commandAllowed(mode,command){if(FUNCTIONS[command]&&(mode!=="text"||FUNCTIONS[command].allowedInText)){return true}if({text:TEXT_SYMBOLS,math:MATH_SYMBOLS}[mode][command]){return true}return false}function getValue(mode,symbol){if(mode==="math"){return MATH_SYMBOLS[symbol]&&MATH_SYMBOLS[symbol].value?MATH_SYMBOLS[symbol].value:symbol}return TEXT_SYMBOLS[symbol]?TEXT_SYMBOLS[symbol]:symbol}function getEnvironmentInfo(name){let result=ENVIRONMENTS[name];if(!result){result={params:"",parser:null,mathstyle:"displaystyle",tabular:true,colFormat:[],lFence:".",rFence:"."}}return result}function getInfo(symbol,parseMode,macros){if(symbol.length===0)return null;let info=null;if(symbol.charAt(0)==="\\"){info=FUNCTIONS[symbol];if(info){if(parseMode==="math"||info.allowedInText)return info;return null}if(!info){if(parseMode==="math"){info=MATH_SYMBOLS[symbol]}else if(TEXT_SYMBOLS[symbol]){info={value:TEXT_SYMBOLS[symbol]}}}if(!info){const command=symbol.slice(1);if(macros&&macros[command]){let def=macros[command];if(typeof def==="object"){def=def.def}let argCount=0;if(/(^|[^\\])#1/.test(def))argCount=1;if(/(^|[^\\])#2/.test(def))argCount=2;if(/(^|[^\\])#3/.test(def))argCount=3;if(/(^|[^\\])#4/.test(def))argCount=4;if(/(^|[^\\])#5/.test(def))argCount=5;if(/(^|[^\\])#6/.test(def))argCount=6;if(/(^|[^\\])#7/.test(def))argCount=7;if(/(^|[^\\])#8/.test(def))argCount=8;if(/(^|[^\\])#9/.test(def))argCount=9;info={type:"group",allowedInText:false,params:[],infix:false};while(argCount>=1){info.params.push({optional:false,type:"math",defaultValue:null,placeholder:null});argCount-=1}}}}else{if(parseMode==="math"){info=MATH_SYMBOLS[symbol]}else if(TEXT_SYMBOLS[symbol]){info={value:TEXT_SYMBOLS[symbol]}}}if(info&&info.type==="mord"&&(info.value==="f"||info.value==="g"||info.value==="h")){info.isFunction=true}return info}function suggest(s){if(s.length<=1)return[];const result=[];for(const p in FUNCTIONS){if(Object.prototype.hasOwnProperty.call(FUNCTIONS,p)){if(p.startsWith(s)&&!FUNCTIONS[p].infix){result.push({match:p,frequency:FUNCTIONS[p].frequency})}}}for(const p in MATH_SYMBOLS){if(Object.prototype.hasOwnProperty.call(MATH_SYMBOLS,p)){if(p.startsWith(s)){result.push({match:p,frequency:MATH_SYMBOLS[p].frequency})}}}result.sort((a,b)=>{if(a.frequency===b.frequency){return a.match.length-b.match.length}return(b.frequency||0)-(a.frequency||0)});return result}const MAIN="";const AMS="ams";const ORD="mord";const MATHORD="mord";const BIN="mbin";const REL="mrel";const OPEN="mopen";const CLOSE="mclose";const PUNCT="mpunct";const INNER="minner";const SPACING="spacing";function parseParamTemplateArgument(argTemplate,isOptional){let r=argTemplate.match(/=(.+)/);let defaultValue="{}";let type="auto";let placeholder=null;if(r){console.assert(isOptional,"Can't provide a default value for required parameters");defaultValue=r[1]}r=argTemplate.match(/:([^=]+)/);if(r)type=r[1].trim();r=argTemplate.match(/^([^:=]+)/);if(r)placeholder=r[1].trim();return{optional:isOptional,type:type,defaultValue:defaultValue,placeholder:placeholder}}function parseParamTemplate(paramTemplate){if(!paramTemplate||paramTemplate.length===0)return[];let result=[];let params=paramTemplate.split("]");if(params[0].charAt(0)==="["){result.push(parseParamTemplateArgument(params[0].slice(1),true));for(let i=1;i<=params.length;i++){result=result.concat(parseParamTemplate(params[i]))}}else{params=paramTemplate.split("}");if(params[0].charAt(0)==="{"){result.push(parseParamTemplateArgument(params[0].slice(1),false));for(let i=1;i<=params.length;i++){result=result.concat(parseParamTemplate(params[i]))}}}return result}function parseArgAsString(arg){return arg.map(x=>x.body).join("")}function defineEnvironment(names,params,options,parser){if(typeof names==="string")names=[names];if(!options)options={};const parsedParams=parseParamTemplate(params);const data={category:category,params:parsedParams,parser:parser,mathstyle:"displaystyle",tabular:options.tabular||true,colFormat:options.colFormat||[]};for(const name of names){ENVIRONMENTS[name]=data}}function defineFunction(names,params,options,parseFunction){if(typeof names==="string"){names=[names]}if(!options)options={};const data={category:category,baseFontFamily:options.fontFamily,params:parseParamTemplate(params),allowedInText:!!options.allowedInText,infix:!!options.infix,parse:parseFunction};for(const name of names){FUNCTIONS[name]=data}}category="Environments";defineEnvironment("math","",{frequency:0},function(){return{mathstyle:"textstyle"}});defineEnvironment("displaymath","",{frequency:8},function(){return{mathstyle:"displaystyle"}});defineEnvironment("array","{columns:colspec}",{frequency:COMMON},function(name,args){return{colFormat:args[0],mathstyle:"textstyle"}});defineEnvironment("eqnarray","",{},function(){return{}});defineEnvironment("equation","",{},function(){return{colFormat:[{align:"c"}]}});defineEnvironment("subequations","",{},function(){return{colFormat:[{align:"c"}]}});defineEnvironment("multline","",{},function(){return{firstRowFormat:[{align:"l"}],colFormat:[{align:"c"}],lastRowFormat:[{align:"r"}]}});defineEnvironment(["align","aligned"],"",{},function(name,args,array){let colCount=0;for(const row of array){colCount=Math.max(colCount,row.length)}const colFormat=[{gap:0},{align:"r"},{gap:0},{align:"l"}];let i=2;while(i<colCount){colFormat.push({gap:1});colFormat.push({align:"r"});colFormat.push({gap:0});colFormat.push({align:"l"});i+=2}colFormat.push({gap:0});return{colFormat:colFormat,jot:.3}});defineEnvironment("split","",{},function(){return{}});defineEnvironment(["gather","gathered"],"",{},function(){return{colFormat:[{gap:.25},{align:"c"},{gap:0}],jot:.3}});defineEnvironment(["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","smallmatrix","matrix*","pmatrix*","bmatrix*","Bmatrix*","vmatrix*","Vmatrix*","smallmatrix*"],"[columns:colspec]",{},function(name,args){const result={};result.mathstyle="textstyle";switch(name){case"pmatrix":case"pmatrix*":result.lFence="(";result.rFence=")";break;case"bmatrix":case"bmatrix*":result.lFence="[";result.rFence="]";break;case"Bmatrix":case"Bmatrix*":result.lFence="\\lbrace";result.rFence="\\rbrace";break;case"vmatrix":case"vmatrix*":result.lFence="\\vert";result.rFence="\\vert";break;case"Vmatrix":case"Vmatrix*":result.lFence="\\Vert";result.rFence="\\Vert";break;case"smallmatrix":case"smallmatrix*":result.mathstyle="scriptstyle";break;case"matrix":case"matrix*":result.lFence=".";result.rFence=".";break;default:}result.colFormat=args[0]||[{align:"c"},{align:"c"},{align:"c"},{align:"c"},{align:"c"},{align:"c"},{align:"c"},{align:"c"},{align:"c"},{align:"c"}];return result});defineEnvironment("cases","",{},function(){return{arraystretch:1.2,lFence:"\\lbrace",rFence:".",colFormat:[{align:"l"},{gap:1},{align:"l"}]}});defineEnvironment("theorem","",{},function(){return{}});defineEnvironment("center","",{},function(){return{colFormat:[{align:"c"}]}});category="";defineSymbols("0123456789/@.");defineSymbolRange(65,90);defineSymbolRange(97,122);category="Trigonometry";defineFunction(["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\sec","\\sin","\\sinh","\\sh","\\tan","\\tanh","\\tg","\\th"],"",null,function(name){return{type:"mop",limits:"nolimits",symbol:false,isFunction:true,body:name.slice(1),baseFontFamily:"cmr"}});frequency(SUPERCOMMON,"\\cos","\\sin","\\tan");frequency(UNCOMMON,"\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arcsec","\\arccsc");frequency(UNCOMMON,"\\arsinh","\\arccosh","\\arctanh","\\arcsech","\\arccsch");frequency(UNCOMMON,"\\arg","\\ch","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\lg","\\lb","\\sec","\\sinh","\\sh","\\tanh","\\tg","\\th");category="Functions";defineFunction(["\\deg","\\dim","\\exp","\\hom","\\ker","\\lb","\\lg","\\ln","\\log"],"",null,function(name){return{type:"mop",limits:"nolimits",symbol:false,isFunction:true,body:name.slice(1),baseFontFamily:"cmr"}});frequency(SUPERCOMMON,"\\ln","\\log","\\exp");frequency(292,"\\hom");frequency(COMMON,"\\dim");frequency(COMMON,"\\ker","\\deg");defineFunction(["\\lim","\\mod"],"",null,function(name){return{type:"mop",limits:"limits",symbol:false,body:name.slice(1),baseFontFamily:"cmr"}});defineFunction(["\\det","\\max","\\min"],"",null,function(name){return{type:"mop",limits:"limits",symbol:false,isFunction:true,body:name.slice(1),baseFontFamily:"cmr"}});frequency(SUPERCOMMON,"\\lim");frequency(COMMON,"\\det");frequency(COMMON,"\\mod");frequency(COMMON,"\\min");frequency(COMMON,"\\max");category="Decoration";defineFunction("\\rule","[raise:dimen]{width:dimen}{thickness:dimen}",null,function(name,args){return{type:"rule",shift:args[0],width:args[1],height:args[2]}});defineFunction("\\color","{:color}",{allowedInText:true},(_name,args)=>{return{color:args[0]}});defineFunction("\\textcolor","{:color}{content:auto*}",{allowedInText:true},(_name,args)=>{return{color:args[0]}});frequency(3,"\\textcolor");defineFunction("\\overline","{:auto}",null,function(name,args){return{type:"line",position:"overline",skipBoundary:true,body:args[0]}});frequency(COMMON,"\\overline");defineFunction("\\underline","{:auto}",null,function(name,args){return{type:"line",position:"underline",skipBoundary:true,body:args[0]}});frequency(COMMON,"\\underline");defineFunction("\\overset","{annotation:auto}{symbol:auto}",null,function(name,args){return{type:"overunder",overscript:args[0],skipBoundary:true,body:args[1]}});frequency(COMMON,"\\overset");defineFunction("\\underset","{annotation:auto}{symbol:auto}",null,function(name,args){return{type:"overunder",underscript:args[0],skipBoundary:true,body:args[1]}});frequency(COMMON,"\\underset");defineFunction(["\\stackrel","\\stackbin"],"{annotation:auto}{symbol:auto}",null,function(name,args){return{type:"overunder",overscript:args[0],skipBoundary:true,body:args[1],mathtype:name==="\\stackrel"?"mrel":"mbin"}});frequency(COMMON,"\\stackrel");frequency(0,"\\stackbin");defineFunction("\\rlap","{:auto}",null,function(name,args){return{type:"overlap",align:"right",skipBoundary:true,body:args[0]}});frequency(270,"\\rlap");defineFunction("\\llap","{:auto}",null,function(name,args){return{type:"overlap",align:"left",skipBoundary:true,body:args[0]}});frequency(18,"\\llap");defineFunction("\\mathrlap","{:auto}",null,function(name,args){return{type:"overlap",mode:"math",align:"right",skipBoundary:true,body:args[0]}});frequency(CRYPTIC,"\\mathrlap");defineFunction("\\mathllap","{:auto}",null,function(name,args){return{type:"overlap",mode:"math",align:"left",skipBoundary:true,body:args[0]}});frequency(CRYPTIC,"\\mathllap");defineFunction("\\boxed","{content:math}",null,function(name,args){return{type:"box",framecolor:"black",skipBoundary:true,body:args[0]}});frequency(1236,"\\boxed");defineFunction("\\colorbox","{background-color:color}{content:auto}",{allowedInText:true},function(name,args){return{type:"box",backgroundcolor:args[0],skipBoundary:true,body:args[1]}});frequency(CRYPTIC,"\\colorbox");defineFunction("\\fcolorbox","{frame-color:color}{background-color:color}{content:auto}",{allowedInText:true},function(name,args){return{type:"box",framecolor:args[0],backgroundcolor:args[1],skipBoundary:true,body:args[2]}});frequency(CRYPTIC,"\\fcolorbox");defineFunction("\\bbox","[:bbox]{body:auto}",{allowedInText:true},function(name,args){if(args[0]){return{type:"box",padding:args[0].padding,border:args[0].border,backgroundcolor:args[0].backgroundcolor,skipBoundary:true,body:args[1]}}return{type:"box",skipBoundary:true,body:args[1]}});frequency(CRYPTIC,"\\bbox");defineFunction("\\enclose","{notation:string}[style:string]{body:auto}",null,function(name,args){let notations=args[0]||[];const result={type:"enclose",strokeColor:"currentColor",strokeWidth:1,strokeStyle:"solid",backgroundcolor:"transparent",padding:"auto",shadow:"auto",captureSelection:true,body:args[2]};if(args[1]){const styles=args[1].split(/,(?![^(]*\)(?:(?:[^(]*\)){2})*[^"]*$)/);for(const s of styles){const shorthand=s.match(/\s*(\S+)\s+(\S+)\s+(.*)/);if(shorthand){result.strokeWidth=FontMetrics.toPx(shorthand[1],"px");if(!isFinite(result.strokeWidth)){result.strokeWidth=1}result.strokeStyle=shorthand[2];result.strokeColor=shorthand[3]}else{const attribute=s.match(/\s*([a-z]*)\s*=\s*"(.*)"/);if(attribute){if(attribute[1]==="mathbackground"){result.backgroundcolor=attribute[2]}else if(attribute[1]==="mathcolor"){result.strokeColor=attribute[2]}else if(attribute[1]==="padding"){result.padding=FontMetrics.toPx(attribute[2],"px")}else if(attribute[1]==="shadow"){result.shadow=attribute[2]}}}}if(result.strokeStyle==="dashed"){result.svgStrokeStyle="5,5"}else if(result.strokeStyle==="dotted"){result.svgStrokeStyle="1,5"}}result.borderStyle=result.strokeWidth+"px "+result.strokeStyle+" "+result.strokeColor;notations=notations.toString().split(/[, ]/).filter(v=>v.length>0).map(v=>v.toLowerCase());result.notation={};for(const notation of notations){result.notation[notation]=true}if(result.notation["updiagonalarrow"])result.notation["updiagonalstrike"]=false;if(result.notation["box"]){result.notation["left"]=false;result.notation["right"]=false;result.notation["bottom"]=false;result.notation["top"]=false}return result});frequency(CRYPTIC,"\\enclose");defineFunction("\\cancel","{body:auto}",null,function(name,args){return{type:"enclose",strokeColor:"currentColor",strokeWidth:1,strokeStyle:"solid",borderStyle:"1px solid currentColor",backgroundcolor:"transparent",padding:"auto",shadow:"auto",notation:{updiagonalstrike:true},body:args[0]}});defineFunction("\\bcancel","{body:auto}",null,function(name,args){return{type:"enclose",strokeColor:"currentColor",strokeWidth:1,strokeStyle:"solid",borderStyle:"1px solid currentColor",backgroundcolor:"transparent",padding:"auto",shadow:"auto",notation:{downdiagonalstrike:true},body:args[0]}});defineFunction("\\xcancel","{body:auto}",null,function(name,args){return{type:"enclose",strokeColor:"currentColor",strokeWidth:1,strokeStyle:"solid",borderStyle:"1px solid currentColor",backgroundcolor:"transparent",padding:"auto",shadow:"auto",notation:{updiagonalstrike:true,downdiagonalstrike:true},body:args[0]}});frequency(CRYPTIC,"\\cancel","\\bcancel","\\xcancel");defineFunction("\\variable","{:math}",null,function(name,args){if(!args[0]||!args[0][0]||args[0][0].type==="placeholder"){return{}}return{type:"variable",captureSelection:true,body:args[0]}});frequency(COMMON,"\\variable");category="Styling";defineFunction(["\\tiny","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"],"",{allowedInText:true},function(name,_args){return{fontSize:{tiny:"size1",scriptsize:"size2",footnotesize:"size3",small:"size4",normalsize:"size5",large:"size6",Large:"size7",LARGE:"size8",huge:"size9",Huge:"size10"}[name.slice(1)]}});defineFunction("\\fontseries","{:text}",{allowedInText:true},(_name,args)=>{return{fontSeries:parseArgAsString(args[0])}});defineFunction("\\bf","",{allowedInText:true},(_name,_args)=>{return{fontSeries:"b"}});defineFunction("\\bm","{:math*}",{allowedInText:true},(_name,_args)=>{return{fontSeries:"b"}});defineFunction("\\bold","",{allowedInText:true},(_name,_args)=>{return{mode:"math",fontSeries:"b"}});defineFunction(["\\mathbf","\\boldsymbol"],"{:math*}",{allowedInText:true},(_name,_args)=>{return{mode:"math",fontSeries:"b",fontShape:"n"}});defineFunction("\\bfseries","",{allowedInText:true},(_name,_args)=>{return{fontSeries:"b"}});defineFunction("\\textbf","{:text*}",{allowedInText:true},(_name,_args)=>{return{fontSeries:"b"}});defineFunction("\\mathmd","{:math*}",{allowedInText:true},(_name,_args)=>{return{mode:"math",fontSeries:"m",fontShape:"n"}});defineFunction("\\mdseries","",{allowedInText:true},(_name,_args)=>{return{fontSeries:"m"}});defineFunction("\\textmd","{:math*}",{allowedInText:true},(_name,_args)=>{return{fontSeries:"m"}});defineFunction("\\fontshape","{:text}",{allowedInText:true},(_name,args)=>{return{fontShape:parseArgAsString(args[0])}});defineFunction("\\it","",{allowedInText:true},(_name,_args)=>{return{fontShape:"it"}});defineFunction("\\mathit","{:math*}",{allowedInText:true},(_name,_args)=>{return{mode:"math",fontSeries:"m",fontShape:"it"}});defineFunction("\\upshape","",{allowedInText:true},(_name,_args)=>{return{fontShape:"n"}});defineFunction("\\textup","{:text*}",{allowedInText:true},(_name,_args)=>{return{fontShape:"n"}});defineFunction("\\textit","{:text*}",{allowedInText:true},(_name,_args)=>{return{fontShape:"it"}});defineFunction("\\slshape","",{allowedInText:true},(_name,_args)=>{return{fontShape:"sl"}});defineFunction("\\textsl","{:text*}",{allowedInText:true},(_name,_args)=>{return{fontShape:"sl"}});defineFunction("\\scshape","",{allowedInText:true},(_name,_args)=>{return{mode:"text",fontShape:"sc"}});defineFunction("\\textsc","{:text*}",{allowedInText:true},(_name,_args)=>{return{fontShape:"sc"}});defineFunction("\\fontfamily","{:text}",{allowedInText:true},(_name,args)=>{return{fontFamily:parseArgAsString(args[0])}});defineFunction("\\mathrm","{:math*}",{allowedInText:true},(_name,_args)=>{return{mode:"math",fontFamily:"cmr",fontSeries:"m",fontShape:"n"}});defineFunction("\\rmfamily","",{allowedInText:true},(_name,_args)=>{return{fontFamily:"cmr"}});defineFunction("\\textrm","{:text*}",{allowedInText:true},(_name,_args)=>{return{fontFamily:"cmr"}});defineFunction("\\mathsf","{:math*}",{allowedInText:true},(_name,_args)=>{return{mode:"math",fontFamily:"cmss",fontSeries:"m",fontShape:"n"}});defineFunction("\\sffamily","",{allowedInText:true},(_name,_args)=>{return{fontFamily:"cmss"}});defineFunction("\\textsf","{:text*}",{allowedInText:true},(_name,_args)=>{return{fontFamily:"cmss"}});defineFunction("\\mathtt","{:math*}",{allowedInText:true},(_name,_args)=>{return{mode:"math",fontFamily:"cmtt",fontSeries:"m",fontShape:"n"}});defineFunction("\\ttfamily","",{allowedInText:true},(_name,_args)=>{return{fontFamily:"cmtt"}});defineFunction("\\texttt","{:text*}",{allowedInText:true},(_name,_args)=>{return{fontFamily:"cmtt"}});defineFunction(["\\Bbb","\\mathbb"],"{:math*}",{allowedInText:true},(_name,_args)=>{return{mode:"math",fontFamily:"bb"}});defineFunction(["\\frak","\\mathfrak"],"{:math*}",{allowedInText:true},(_name,_args)=>{return{fontFamily:"frak"}});defineFunction("\\mathcal","{:math*}",{allowedInText:true},(_name,_args)=>{return{mode:"math",fontFamily:"cal",fontSeries:"m",fontShape:"n"}});defineFunction("\\mathscr","{:math*}",{allowedInText:true},(_name,_args)=>{return{mode:"math",fontFamily:"scr",fontSeries:"m",fontShape:"n"}});frequency(SUPERCOMMON,"\\mathbb");frequency(1081,"\\Bbb");frequency(0,"\\mathcal");frequency(COMMON,"\\mathfrak");frequency(271,"\\frak");frequency(COMMON,"\\mathscr");frequency(UNCOMMON,"\\mathsf");frequency(COMMON,"\\mathtt");frequency(COMMON,"\\boldsymbol");defineFunction("\\textnormal","{:text*}",{allowedInText:true},(_name,_args)=>{return{fontFamily:"cmr",fontShape:"n",fontSeries:"n"}});defineFunction("\\mbox","{:text*}",null,(_name,_args)=>{return{fontFamily:"cmr"}});defineFunction("\\text","{:text*}",{allowedInText:true},(_name,_args)=>{return{}});defineFunction("\\class","{name:text}{content:auto*}",{allowedInText:true},(_name,args)=>{return{cssClass:parseArgAsString(args[0])}});defineFunction("\\cssId","{id:text}{content:auto}",{allowedInText:true},(_name,args)=>{return{cssId:parseArgAsString(args[0]),body:args[1],type:"group"}});defineFunction("\\em","",{allowedInText:true},(_name,_args)=>{return{cssClass:"ML__emph",type:"group"}});defineFunction("\\emph","{:auto}",{allowedInText:true},(_name,args)=>{return{cssClass:"ML__emph",body:args[0],type:"group",skipBoundary:true}});frequency(COMMON,"\\textrm");frequency(COMMON,"\\textit");frequency(COMMON,"\\textsf");frequency(COMMON,"\\texttt");frequency(433,"\\textnormal");frequency(COMMON,"\\textbf");frequency(421,"\\textup");frequency(819,"\\emph");frequency(49,"\\em");category="Operators";defineFunction("\\sqrt","[index:auto]{radicand:auto}",null,function(name,args){return{type:"surd",body:args[1],index:args[0]}});frequency(SUPERCOMMON,"\\sqrt");category="Fractions";defineFunction(["\\frac","\\dfrac","\\tfrac","\\cfrac","\\binom","\\dbinom","\\tbinom"],"{numerator}{denominator}",null,function(name,args){const result={type:"genfrac",numer:args[0],denom:args[1],mathstyle:"auto"};switch(name){case"\\dfrac":case"\\frac":case"\\tfrac":case"\\cfrac":result.hasBarLine=true;break;case"\\\\atopfrac":result.hasBarLine=false;break;case"\\dbinom":case"\\binom":case"\\tbinom":result.hasBarLine=false;result.leftDelim="(";result.rightDelim=")";break}switch(name){case"\\dfrac":case"\\dbinom":result.mathstyle="displaystyle";break;case"\\tfrac":case"\\tbinom":result.mathstyle="textstyle";break}if(name==="\\cfrac"){result.continuousFraction=true}return result});defineFunction(["\\over","\\atop","\\choose"],"",{infix:true},function(name,args){const numer=args[0];const denom=args[1];let hasBarLine=false;let leftDelim=null;let rightDelim=null;switch(name){case"\\atop":break;case"\\over":hasBarLine=true;break;case"\\choose":hasBarLine=false;leftDelim="(";rightDelim=")";break;default:throw new Error("Unrecognized genfrac command")}return{type:"genfrac",numer:numer,denom:denom,hasBarLine:hasBarLine,leftDelim:leftDelim,rightDelim:rightDelim,mathstyle:"auto"}});frequency(21,"\\over");frequency(12,"\\atop");frequency(1968,"\\choose");defineFunction(["\\overwithdelims","\\atopwithdelims"],"{left-delim:delim}{right-delim:delim}",{infix:true},function(name,args){return{type:"genfrac",numer:args[0],denom:args[1],hasBarLine:false,leftDelim:args[2],rightDelim:args[3],mathstyle:"auto"}});frequency(15,"\\overwithdelims");frequency(COMMON,"\\atopwithdelims");category="Fractions";defineFunction("\\pdiff","{numerator}{denominator}",null,function(_funcname,args){return{type:"genfrac",numer:args[0],denom:args[1],numerPrefix:"∂",denomPrefix:"∂",hasBarLine:true,leftDelim:null,rightDelim:null,mathstyle:"auto"}});category="Quantifiers";defineSymbol("\\forall",MAIN,MATHORD,"∀",SUPERCOMMON);defineSymbol("\\exists",MAIN,MATHORD,"∃",SUPERCOMMON);defineSymbol("\\nexists",AMS,MATHORD,"∄",SUPERCOMMON);defineSymbol("\\mid",MAIN,REL,"∣",COMMON);defineSymbol("\\top",MAIN,MATHORD,"⊤",RARE);defineSymbol("\\bot",MAIN,MATHORD,"⊥",RARE);category="Variable Sized Symbols";defineFunction(["\\sum","\\prod","\\bigcup","\\bigcap","\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint","\\intop"],"",null,function(name){return{type:"mop",limits:"auto",symbol:true,baseFontFamily:"cmr",body:{coprod:"∐",bigvee:"⋁",bigwedge:"⋀",biguplus:"⨄",bigcap:"⋂",bigcup:"⋃",intop:"∫",prod:"∏",sum:"∑",bigotimes:"⨂",bigoplus:"⨁",bigodot:"⨀",bigsqcup:"⨆",smallint:"∫"}[name.slice(1)]}});defineFunction(["\\int","\\iint","\\iiint","\\oint","\\oiint","\\oiiint","\\intclockwise","\\varointclockwise","\\ointctrclockwise","\\intctrclockwise"],"",null,function(name){return{type:"mop",limits:"nolimits",symbol:true,body:{int:"∫",iint:"∬",iiint:"∭",oint:"∮",oiint:"∯",oiiint:"∰",intclockwise:"∱",varointclockwise:"∲",ointctrclockwise:"∳",intctrclockwise:"⨑"}[name.slice(1)]}});frequency(SUPERCOMMON,"\\sum","\\prod","\\bigcap","\\bigcup","\\int");frequency(COMMON,"\\bigoplus","\\smallint","\\iint","\\oint");frequency(RARE,"\\bigwedge","\\bigvee");frequency(756,"\\coprod");frequency(723,"\\bigsqcup");frequency(1241,"\\bigotimes");frequency(150,"\\bigodot");frequency(174,"\\biguplus");frequency(878,"\\iiint");frequency(97,"\\intop");category="Various";defineSymbol("\\sharp",MAIN,MATHORD,"♯",COMMON);defineSymbol("\\flat",MAIN,MATHORD,"♭",590);defineSymbol("\\natural",MAIN,MATHORD,"♮",278);defineSymbol("\\#",MAIN,MATHORD,"#",RARE);defineSymbol("\\&",MAIN,MATHORD,"&",RARE);defineSymbol("\\clubsuit",MAIN,MATHORD,"♣",172);defineSymbol("\\heartsuit",MAIN,MATHORD,"♡",ARCANE);defineSymbol("\\spadesuit",MAIN,MATHORD,"♠",ARCANE);defineSymbol("\\diamondsuit",MAIN,MATHORD,"♢",CRYPTIC);defineSymbol("\\differencedelta",MAIN,REL,"∆",COMMON);category="Letters and Letter Like Forms";defineFunction("\\unicode","{charcode:number}",null,function(name,args){let codepoint=parseInt(args[0]);if(!isFinite(codepoint))codepoint=10067;return{type:"mord",body:String.fromCodePoint(codepoint)}});defineSymbol("\\backslash",MAIN,MATHORD,"\\");defineSymbol("?",MAIN,MATHORD,"?");defineSymbol("!",MAIN,MATHORD,"!");defineSymbol("\\nabla",MAIN,MATHORD,"∇",SUPERCOMMON);defineSymbol("\\partial",MAIN,MATHORD,"∂",SUPERCOMMON);defineSymbol("\\ell",MAIN,MATHORD,"ℓ",COMMON);defineSymbol("\\imaginaryI",MAIN,MATHORD,"i");defineSymbol("\\imaginaryJ",MAIN,MATHORD,"j");defineFunction(["\\Re","\\Im"],"",null,function(name){return{type:"mop",limits:"nolimits",symbol:false,isFunction:true,body:{"\\Re":"ℜ","\\Im":"ℑ"}[name],baseFontFamily:"frak"}});defineSymbol("\\hbar",MAIN,MATHORD,"ℏ",COMMON);defineSymbol("\\hslash",AMS,MATHORD,"ℏ",COMMON);defineSymbol("\\differentialD","cmr",MATHORD,"d");defineSymbol("\\rd","cmr",MATHORD,"d");defineSymbol("\\capitalDifferentialD","cmr",MATHORD,"D");defineSymbol("\\rD","cmr",MATHORD,"D");defineSymbol("\\exponentialE","cmr",MATHORD,"e");defineSymbol("\\Finv",AMS,MATHORD,"Ⅎ",3);defineSymbol("\\Game",AMS,MATHORD,"⅁",1);defineSymbol("\\wp",MAIN,MATHORD,"℘",1306);defineSymbol("\\eth",AMS,MATHORD,"ð",77);defineSymbol("\\mho",AMS,MATHORD,"℧",138);defineSymbol("\\Bbbk",AMS,MATHORD,"k");defineSymbol("\\doubleStruckCapitalN","bb",MATHORD,"N");defineSymbol("\\N","bb",MATHORD,"N");defineSymbol("\\doubleStruckCapitalR","bb",MATHORD,"R");defineSymbol("\\R","bb",MATHORD,"R");defineSymbol("\\doubleStruckCapitalQ","bb",MATHORD,"Q");defineSymbol("\\Q","bb",MATHORD,"Q");defineSymbol("\\doubleStruckCapitalC","bb",MATHORD,"C");defineSymbol("\\C","bb",MATHORD,"C");defineSymbol("\\doubleStruckCapitalZ","bb",MATHORD,"Z");defineSymbol("\\Z","bb",MATHORD,"Z");defineSymbol("\\doubleStruckCapitalP","bb",MATHORD,"P");defineSymbol("\\P","bb",MATHORD,"P");defineSymbol("\\scriptCapitalE","scr",MATHORD,"E");defineSymbol("\\scriptCapitalH","scr",MATHORD,"H");defineSymbol("\\scriptCapitalL","scr",MATHORD,"L");defineSymbol("\\gothicCapitalC","frak",MATHORD,"C");defineSymbol("\\gothicCapitalH","frak",MATHORD,"H");defineSymbol("\\gothicCapitalI","frak",MATHORD,"I");defineSymbol("\\gothicCapitalR","frak",MATHORD,"R");defineSymbol("\\pounds",MAIN,MATHORD,"£",509);defineSymbol("\\yen",AMS,MATHORD,"¥",57);defineSymbol("\\euro",MAIN,MATHORD,"€",4);category="Crosses";defineSymbol("\\textdagger",MAIN,BIN,"†");defineSymbol("\\dagger",MAIN,BIN,"†",COMMON);defineSymbol("\\dag",MAIN,BIN,"†",COMMON);defineSymbol("\\ddag",MAIN,BIN,"‡",500);defineSymbol("\\textdaggerdbl",MAIN,BIN,"‡");defineSymbol("\\ddagger",MAIN,BIN,"‡",353);defineSymbol("\\maltese",AMS,MATHORD,"✠",24);category="Arrows";defineSymbol("\\longrightarrow",MAIN,REL,"⟶",SUPERCOMMON);defineSymbol("\\rightarrow",MAIN,REL,"→",SUPERCOMMON);defineSymbol("\\Longrightarrow",MAIN,REL,"⟹",SUPERCOMMON);defineSymbol("\\Rightarrow",MAIN,REL,"⇒",SUPERCOMMON);defineSymbol("\\longmapsto",MAIN,REL,"⟼",COMMON);defineSymbol("\\mapsto",MAIN,REL,"↦",COMMON);defineSymbol("\\Longleftrightarrow",MAIN,REL,"⟺",COMMON);defineSymbol("\\rightleftarrows",AMS,REL,"⇄",COMMON);defineSymbol("\\leftarrow",MAIN,REL,"←",COMMON);defineSymbol("\\curvearrowleft",AMS,REL,"↶",COMMON);defineSymbol("\\uparrow",MAIN,REL,"↑",COMMON);defineSymbol("\\downarrow",MAIN,REL,"↓",COMMON);defineSymbol("\\hookrightarrow",MAIN,REL,"↪",COMMON);defineSymbol("\\rightharpoonup",MAIN,REL,"⇀",COMMON);defineSymbol("\\rightleftharpoons",MAIN,REL,"⇌",COMMON);defineSymbol("\\Leftarrow",MAIN,REL,"⇐",1695);defineSymbol("\\longleftrightarrow",MAIN,REL,"⟷",1599);defineSymbol("\\longleftarrow",MAIN,REL,"⟵",878);defineSymbol("\\Longleftarrow",MAIN,REL,"⟸",296);defineSymbol("\\searrow",MAIN,REL,"↘",1609);defineSymbol("\\nearrow",MAIN,REL,"↗",1301);defineSymbol("\\swarrow",MAIN,REL,"↙",167);defineSymbol("\\nwarrow",MAIN,REL,"↖",108);defineSymbol("\\Uparrow",MAIN,REL,"⇑",257);defineSymbol("\\Downarrow",MAIN,REL,"⇓",556);defineSymbol("\\updownarrow",MAIN,REL,"↕",192);defineSymbol("\\Updownarrow",MAIN,REL,"⇕",161);defineSymbol("\\hookleftarrow",MAIN,REL,"↩",115);defineSymbol("\\leftharpoonup",MAIN,REL,"↼",93);defineSymbol("\\leftharpoondown",MAIN,REL,"↽",42);defineSymbol("\\rightharpoondown",MAIN,REL,"⇁",80);defineSymbol("\\leftrightarrows",AMS,REL,"⇆",765);defineSymbol("\\dashrightarrow",AMS,REL,"⇢",311);defineSymbol("\\dashleftarrow",AMS,REL,"⇠",5);defineSymbol("\\leftleftarrows",AMS,REL,"⇇",8);defineSymbol("\\Lleftarrow",AMS,REL,"⇚",7);defineSymbol("\\twoheadleftarrow",AMS,REL,"↞",32);defineSymbol("\\leftarrowtail",AMS,REL,"↢",25);defineSymbol("\\looparrowleft",AMS,REL,"↫",6);defineSymbol("\\leftrightharpoons",AMS,REL,"⇋",205);defineSymbol("\\circlearrowleft",AMS,REL,"↺",105);defineSymbol("\\Lsh",AMS,REL,"↰",11);defineSymbol("\\upuparrows",AMS,REL,"⇈",15);defineSymbol("\\downharpoonleft",AMS,REL,"⇃",21);defineSymbol("\\multimap",AMS,REL,"⊸",108);defineSymbol("\\leftrightsquigarrow",AMS,REL,"↭",31);defineSymbol("\\twoheadrightarrow",AMS,REL,"↠",835);defineSymbol("\\rightarrowtail",AMS,REL,"↣",195);defineSymbol("\\looparrowright",AMS,REL,"↬",37);defineSymbol("\\curvearrowright",AMS,REL,"↷",209);defineSymbol("\\circlearrowright",AMS,REL,"↻",63);defineSymbol("\\Rsh",AMS,REL,"↱",18);defineSymbol("\\downdownarrows",AMS,REL,"⇊",6);defineSymbol("\\upharpoonright",AMS,REL,"↾",579);defineSymbol("\\downharpoonright",AMS,REL,"⇂",39);defineSymbol("\\rightsquigarrow",AMS,REL,"⇝",674);defineSymbol("\\leadsto",AMS,REL,"⇝",709);defineSymbol("\\Rrightarrow",AMS,REL,"⇛",62);defineSymbol("\\restriction",AMS,REL,"↾",29);defineSymbol("\\upharpoonleft",AMS,REL,"↿",CRYPTIC);defineSymbol("\\rightrightarrows",AMS,REL,"⇉",CRYPTIC);category="Negated Arrows";defineSymbol("\\nrightarrow",AMS,REL,"↛",324);defineSymbol("\\nRightarrow",AMS,REL,"⇏",107);defineSymbol("\\nleftrightarrow",AMS,REL,"↮",36);defineSymbol("\\nLeftrightarrow",AMS,REL,"⇎",20);defineSymbol("\\nleftarrow",AMS,REL,"↚",7);defineSymbol("\\nLeftarrow",AMS,REL,"⇍",5);category="Negated Relations";defineSymbol("\\nless",AMS,REL,"≮",146);defineSymbol("\\nleqslant",AMS,REL,"",58);defineSymbol("\\lneq",AMS,REL,"⪇",54);defineSymbol("\\lneqq",AMS,REL,"≨",36);defineSymbol("\\nleqq",AMS,REL,"",18);defineSymbol("\\unlhd",AMS,BIN,"⊴",253);defineSymbol("\\unrhd",AMS,BIN,"⊵",66);defineSymbol("\\lvertneqq",AMS,REL,"",6);defineSymbol("\\lnsim",AMS,REL,"⋦",4);defineSymbol("\\lnapprox",AMS,REL,"⪉",CRYPTIC);defineSymbol("\\nprec",AMS,REL,"⊀",71);defineSymbol("\\npreceq",AMS,REL,"⋠",57);defineSymbol("\\precnsim",AMS,REL,"⋨",4);defineSymbol("\\precnapprox",AMS,REL,"⪹",2);defineSymbol("\\nsim",AMS,REL,"≁",40);defineSymbol("\\nshortmid",AMS,REL,"",1);defineSymbol("\\nmid",AMS,REL,"∤",417);defineSymbol("\\nvdash",AMS,REL,"⊬",266);defineSymbol("\\nvDash",AMS,REL,"⊭",405);defineSymbol("\\ngtr",AMS,REL,"≯",90);defineSymbol("\\ngeqslant",AMS,REL,"",23);defineSymbol("\\ngeqq",AMS,REL,"",12);defineSymbol("\\gneq",AMS,REL,"⪈",29);defineSymbol("\\gneqq",AMS,REL,"≩",35);defineSymbol("\\gvertneqq",AMS,REL,"",6);defineSymbol("\\gnsim",AMS,REL,"⋧",3);defineSymbol("\\gnapprox",AMS,REL,"⪊",CRYPTIC);defineSymbol("\\nsucc",AMS,REL,"⊁",44);defineSymbol("\\nsucceq",AMS,REL,"⋡",CRYPTIC);defineSymbol("\\succnsim",AMS,REL,"⋩",4);defineSymbol("\\succnapprox",AMS,REL,"⪺",CRYPTIC);defineSymbol("\\ncong",AMS,REL,"≆",128);defineSymbol("\\nshortparallel",AMS,REL,"",6);defineSymbol("\\nparallel",AMS,REL,"∦",54);defineSymbol("\\nVDash",AMS,REL,"⊯",5);defineSymbol("\\nsupseteqq",AMS,REL,"",1);defineSymbol("\\supsetneq",AMS,REL,"⊋",286);defineSymbol("\\varsupsetneq",AMS,REL,"",2);defineSymbol("\\supsetneqq",AMS,REL,"⫌",49);defineSymbol("\\varsupsetneqq",AMS,REL,"",3);defineSymbol("\\nVdash",AMS,REL,"⊮",179);defineSymbol("\\precneqq",AMS,REL,"⪵",11);defineSymbol("\\succneqq",AMS,REL,"⪶",3);defineSymbol("\\nsubseteqq",AMS,REL,"",16);category="Various";defineSymbol("\\checkmark",AMS,MATHORD,"✓",1025);defineSymbol("\\diagup",AMS,MATHORD,"╱",440);defineSymbol("\\diagdown",AMS,MATHORD,"╲",175);defineSymbol("\\measuredangle",AMS,MATHORD,"∡",271);defineSymbol("\\sphericalangle",AMS,MATHORD,"∢",156);defineSymbol("\\backprime",AMS,MATHORD,"‵",104);defineSymbol("\\backdoubleprime",AMS,MATHORD,"‶",CRYPTIC);category="Shapes";defineSymbol("\\ast",MAIN,BIN,"∗",SUPERCOMMON);defineSymbol("\\star",MAIN,BIN,"⋆",COMMON);defineSymbol("\\diamond",MAIN,BIN,"⋄",1356);defineSymbol("\\Diamond",AMS,MATHORD,"◊",695);defineSymbol("\\lozenge",AMS,MATHORD,"◊",422);defineSymbol("\\blacklozenge",AMS,MATHORD,"⧫",344);defineSymbol("\\bigstar",AMS,MATHORD,"★",168);category="Hebrew";defineSymbol("\\aleph",MAIN,MATHORD,"ℵ",1381);defineSymbol("\\beth",AMS,MATHORD,"ℶ",54);defineSymbol("\\daleth",AMS,MATHORD,"ℸ",43);defineSymbol("\\gimel",AMS,MATHORD,"ℷ",36);category="Fences";defineSymbol("\\lbrace",MAIN,OPEN,"{",SUPERCOMMON);defineSymbol("\\rbrace",MAIN,CLOSE,"}",SUPERCOMMON);defineSymbol("\\langle",MAIN,OPEN,"⟨",COMMON);defineSymbol("\\rangle",MAIN,CLOSE,"⟩",COMMON);defineSymbol("\\lfloor",MAIN,OPEN,"⌊",COMMON);defineSymbol("\\rfloor",MAIN,CLOSE,"⌋",COMMON);defineSymbol("\\lceil",MAIN,OPEN,"⌈",COMMON);defineSymbol("\\rceil",MAIN,CLOSE,"⌉",COMMON);defineSymbol("\\vert",MAIN,MATHORD,"∣",SUPERCOMMON);defineSymbol("\\mvert",MAIN,REL,"∣");defineSymbol("\\lvert",MAIN,OPEN,"∣",496);defineSymbol("\\rvert",MAIN,CLOSE,"∣",496);defineSymbol("\\|",MAIN,MATHORD,"∥");defineSymbol("\\Vert",MAIN,MATHORD,"∥",SUPERCOMMON);defineSymbol("\\mVert",MAIN,MATHORD,"∥");defineSymbol("\\lVert",MAIN,OPEN,"∥",287);defineSymbol("\\rVert",MAIN,CLOSE,"∥",CRYPTIC);defineSymbol("\\lbrack",MAIN,OPEN,"[",574);defineSymbol("\\rbrack",MAIN,CLOSE,"]",213);defineSymbol("\\{",MAIN,OPEN,"{");defineSymbol("\\}",MAIN,CLOSE,"}");defineSymbol("(",MAIN,OPEN,"(");defineSymbol(")",MAIN,CLOSE,")");defineSymbol("[",MAIN,OPEN,"[");defineSymbol("]",MAIN,CLOSE,"]");defineSymbol("\\ulcorner",AMS,OPEN,"┌",296);defineSymbol("\\urcorner",AMS,CLOSE,"┐",310);defineSymbol("\\llcorner",AMS,OPEN,"└",137);defineSymbol("\\lrcorner",AMS,CLOSE,"┘",199);defineSymbol("\\lgroup",MAIN,OPEN,"⟮",24);defineSymbol("\\rgroup",MAIN,CLOSE,"⟯",24);defineSymbol("\\lmoustache",MAIN,OPEN,"⎰",CRYPTIC);defineSymbol("\\rmoustache",MAIN,CLOSE,"⎱",CRYPTIC);defineFunction(["\\middle"],"{:delim}",null,function(name,args){return{type:"delim",delim:args[0]}});category="Sizing";const delimiterSizes={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}};defineFunction(["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],"{:delim}",null,function(name,args){return{type:"sizeddelim",size:delimiterSizes[name].size,cls:delimiterSizes[name].mclass,delim:args[0]}});category="Relations";defineSymbol("=",MAIN,REL,"=",SUPERCOMMON);defineSymbol("\\ne",MAIN,REL,"≠",SUPERCOMMON);defineSymbol("\\neq",MAIN,REL,"≠",COMMON);defineSymbol("<",MAIN,REL,"<",SUPERCOMMON);defineSymbol("\\lt",MAIN,REL,"<",COMMON);defineSymbol(">",MAIN,REL,">",SUPERCOMMON);defineSymbol("\\gt",MAIN,REL,">",COMMON);defineSymbol("\\le",MAIN,REL,"≤",COMMON);defineSymbol("\\ge",MAIN,REL,"≥",COMMON);defineSymbol("\\leqslant",AMS,REL,"⩽",SUPERCOMMON);defineSymbol("\\geqslant",AMS,REL,"⩾",SUPERCOMMON);defineSymbol("\\leq",MAIN,REL,"≤",COMMON);defineSymbol("\\geq",MAIN,REL,"≥",COMMON);defineSymbol("\\ll",MAIN,REL,"≪");defineSymbol("\\gg",MAIN,REL,"≫",COMMON);defineSymbol("\\coloneq",MAIN,REL,"≔",5);defineSymbol("\\measeq",MAIN,REL,"≝");defineSymbol("\\eqdef",MAIN,REL,"≞");defineSymbol("\\questeq",MAIN,REL,"≟");defineSymbol(":",MAIN,REL,":");defineSymbol("\\cong",MAIN,REL,"≅",COMMON);defineSymbol("\\equiv",MAIN,REL,"≡",COMMON);defineSymbol("\\prec",MAIN,REL,"≺",COMMON);defineSymbol("\\preceq",MAIN,REL,"⪯",COMMON);defineSymbol("\\succ",MAIN,REL,"≻",COMMON);defineSymbol("\\succeq",MAIN,REL,"⪰",1916);defineSymbol("\\perp",MAIN,REL,"⊥",COMMON);defineSymbol("\\parallel",MAIN,REL,"∥",COMMON);defineSymbol("\\propto",MAIN,REL,"∝",COMMON);defineSymbol("\\Colon",MAIN,REL,"∷");defineSymbol("\\smile",MAIN,REL,"⌣",COMMON);defineSymbol("\\frown",MAIN,REL,"⌢",COMMON);defineSymbol("\\sim",MAIN,REL,"∼",COMMON);defineSymbol("\\gtrsim",AMS,REL,"≳",COMMON);defineSymbol("\\approx",MAIN,REL,"≈",SUPERCOMMON);defineSymbol("\\approxeq",AMS,REL,"≊",147);defineSymbol("\\thickapprox",AMS,REL,"≈",377);defineSymbol("\\lessapprox",AMS,REL,"⪅",146);defineSymbol("\\gtrapprox",AMS,REL,"⪆",95);defineSymbol("\\precapprox",AMS,REL,"⪷",50);defineSymbol("\\succapprox",AMS,REL,"⪸",CRYPTIC);defineSymbol("\\thicksim",AMS,REL,"∼",779);defineSymbol("\\succsim",AMS,REL,"≿",251);defineSymbol("\\precsim",AMS,REL,"≾",104);defineSymbol("\\backsim",AMS,REL,"∽",251);defineSymbol("\\eqsim",AMS,REL,"≂",62);defineSymbol("\\backsimeq",AMS,REL,"⋍",91);defineSymbol("\\simeq",MAIN,REL,"≃",CRYPTIC);defineSymbol("\\lesssim",AMS,REL,"≲",CRYPTIC);defineSymbol("\\nleq",AMS,REL,"≰",369);defineSymbol("\\ngeq",AMS,REL,"≱",164);defineSymbol("\\smallsmile",AMS,REL,"⌣",31);defineSymbol("\\smallfrown",AMS,REL,"⌢",71);defineSymbol("\\bowtie",MAIN,REL,"⋈",558);defineSymbol("\\asymp",MAIN,REL,"≍",755);defineSymbol("\\sqsubseteq",MAIN,REL,"⊑",1255);defineSymbol("\\sqsupseteq",MAIN,REL,"⊒",183);defineSymbol("\\leqq",AMS,REL,"≦",1356);defineSymbol("\\eqslantless",AMS,REL,"⪕",15);defineSymbol("\\lll",AMS,REL,"⋘",157);defineSymbol("\\lessgtr",AMS,REL,"≶",281);defineSymbol("\\lesseqgtr",AMS,REL,"⋚",134);defineSymbol("\\lesseqqgtr",AMS,REL,"⪋",CRYPTIC);defineSymbol("\\risingdotseq",AMS,REL,"≓",8);defineSymbol("\\fallingdotseq",AMS,REL,"≒",99);defineSymbol("\\subseteqq",AMS,REL,"⫅",82);defineSymbol("\\Subset",AMS,REL,"⋐");defineSymbol("\\sqsubset",AMS,REL,"⊏",309);defineSymbol("\\preccurlyeq",AMS,REL,"≼",549);defineSymbol("\\curlyeqprec",AMS,REL,"⋞",14);defineSymbol("\\vDash",AMS,REL,"⊨",646);defineSymbol("\\Vvdash",AMS,REL,"⊪",20);defineSymbol("\\bumpeq",AMS,REL,"≏",13);defineSymbol("\\Bumpeq",AMS,REL,"≎",12);defineSymbol("\\geqq",AMS,REL,"≧",972);defineSymbol("\\eqslantgtr",AMS,REL,"⪖",13);defineSymbol("\\ggg",AMS,REL,"⋙",127);defineSymbol("\\gtrless",AMS,REL,"≷",417);defineSymbol("\\gtreqless",AMS,REL,"⋛",190);defineSymbol("\\gtreqqless",AMS,REL,"⪌",91);defineSymbol("\\supseteqq",AMS,REL,"⫆",6);defineSymbol("\\Supset",AMS,REL,"⋑",34);defineSymbol("\\sqsupset",AMS,REL,"⊐",71);defineSymbol("\\succcurlyeq",AMS,REL,"≽",442);defineSymbol("\\curlyeqsucc",AMS,REL,"⋟",10);defineSymbol("\\Vdash",AMS,REL,"⊩",276);defineSymbol("\\shortmid",AMS,REL,"∣",67);defineSymbol("\\shortparallel",AMS,REL,"∥",17);defineSymbol("\\between",AMS,REL,"≬",110);defineSymbol("\\pitchfork",AMS,REL,"⋔",66);defineSymbol("\\varpropto",AMS,REL,"∝",203);defineSymbol("\\backepsilon",AMS,REL,"∍",176);defineSymbol("\\llless",AMS,REL,"⋘",CRYPTIC);defineSymbol("\\gggtr",AMS,REL,"⋙",CRYPTIC);defineSymbol("\\lhd",AMS,BIN,"⊲",447);defineSymbol("\\rhd",AMS,BIN,"⊳",338);defineSymbol("\\Join",MAIN,REL,"⋈",35);defineSymbol("\\doteq",MAIN,REL,"≐",1450);defineSymbol("\\doteqdot",AMS,REL,"≑",60);defineSymbol("\\Doteq",AMS,REL,"≑",CRYPTIC);defineSymbol("\\eqcirc",AMS,REL,"≖",6);defineSymbol("\\circeq",AMS,REL,"≗",31);defineSymbol("\\lessdot",AMS,BIN,"⋖",88);defineSymbol("\\gtrdot",AMS,BIN,"⋗",45);defineSymbol("\\~",MAIN,REL,"~");category="Logic";defineSymbol("\\leftrightarrow",MAIN,REL,"↔",SUPERCOMMON);defineSymbol("\\Leftrightarrow",MAIN,REL,"⇔",SUPERCOMMON);defineSymbol("\\to",MAIN,REL,"→",SUPERCOMMON);defineSymbol("\\models",MAIN,REL,"⊨",COMMON);defineSymbol("\\vdash",MAIN,REL,"⊢",COMMON);defineSymbol("\\therefore",AMS,REL,"∴",1129);defineSymbol("\\because",AMS,REL,"∵",388);defineSymbol("\\implies",MAIN,REL,"⟹",1858);defineSymbol("\\gets",MAIN,REL,"←",150);defineSymbol("\\dashv",MAIN,REL,"⊣",299);defineSymbol("\\impliedby",MAIN,REL,"⟸",CRYPTIC);defineSymbol("\\biconditional",MAIN,REL,"⟷",CRYPTIC);defineSymbol("\\roundimplies",MAIN,REL,"⥰",CRYPTIC);category="Operators";defineSymbol("+",MAIN,BIN,"+",SUPERCOMMON);defineSymbol("-",MAIN,BIN,"−",SUPERCOMMON);defineSymbol("−",MAIN,BIN,"−",SUPERCOMMON);defineSymbol("\\pm",MAIN,BIN,"±",COMMON);defineSymbol("\\mp",MAIN,BIN,"∓",COMMON);defineSymbol("*",MAIN,BIN,"∗",COMMON);defineSymbol("\\times",MAIN,BIN,"×",COMMON);defineSymbol("\\div",MAIN,BIN,"÷",COMMON);defineSymbol("\\surd",MAIN,MATHORD,"√",COMMON);defineSymbol("\\divides",MAIN,BIN,"∣",CRYPTIC);defineSymbol("\\ltimes",AMS,BIN,"⋉",576);defineSymbol("\\rtimes",AMS,BIN,"⋊",946);defineSymbol("\\leftthreetimes",AMS,BIN,"⋋",34);defineSymbol("\\rightthreetimes",AMS,BIN,"⋌",14);defineSymbol("\\intercal",AMS,BIN,"⊺",478);defineSymbol("\\dotplus",AMS,BIN,"∔",81);defineSymbol("\\centerdot",AMS,BIN,"⋅",271);defineSymbol("\\doublebarwedge",AMS,BIN,"⩞",5);defineSymbol("\\divideontimes",AMS,BIN,"⋇",51);defineSymbol("\\cdot",MAIN,BIN,"⋅",CRYPTIC);category="Others";defineSymbol("\\infty",MAIN,MATHORD,"∞",SUPERCOMMON);defineSymbol("\\prime",MAIN,ORD,"′",SUPERCOMMON);defineSymbol("\\doubleprime",MAIN,MATHORD,"″");defineSymbol("\\angle",MAIN,MATHORD,"∠",COMMON);defineSymbol("`",MAIN,MATHORD,"‘");defineSymbol("\\$",MAIN,MATHORD,"$");defineSymbol("\\%",MAIN,MATHORD,"%");defineSymbol("\\_",MAIN,MATHORD,"_");category="Greek";defineSymbol("\\alpha",MAIN,ORD,"α",COMMON);defineSymbol("\\beta",MAIN,ORD,"β",COMMON);defineSymbol("\\gamma",MAIN,ORD,"γ",COMMON);defineSymbol("\\delta",MAIN,ORD,"δ",COMMON);defineSymbol("\\epsilon",MAIN,ORD,"ϵ",COMMON);defineSymbol("\\varepsilon",MAIN,ORD,"ε");defineSymbol("\\zeta",MAIN,ORD,"ζ",COMMON);defineSymbol("\\eta",MAIN,ORD,"η",COMMON);defineSymbol("\\theta",MAIN,ORD,"θ",COMMON);defineSymbol("\\vartheta",MAIN,ORD,"ϑ",COMMON);defineSymbol("\\iota",MAIN,ORD,"ι",COMMON);defineSymbol("\\kappa",MAIN,ORD,"κ",COMMON);defineSymbol("\\varkappa",AMS,ORD,"ϰ",COMMON);defineSymbol("\\lambda",MAIN,ORD,"λ",COMMON);defineSymbol("\\mu",MAIN,ORD,"μ",COMMON);defineSymbol("\\nu",MAIN,ORD,"ν",COMMON);defineSymbol("\\xi",MAIN,ORD,"ξ",COMMON);defineSymbol("\\omicron",MAIN,ORD,"o");defineSymbol("\\pi",MAIN,ORD,"π",COMMON);defineSymbol("\\varpi",MAIN,ORD,"ϖ",COMMON);defineSymbol("\\rho",MAIN,ORD,"ρ",COMMON);defineSymbol("\\varrho",MAIN,ORD,"ϱ",COMMON);defineSymbol("\\sigma",MAIN,ORD,"σ",COMMON);defineSymbol("\\varsigma",MAIN,ORD,"ς",COMMON);defineSymbol("\\tau",MAIN,ORD,"τ",COMMON);defineSymbol("\\phi",MAIN,ORD,"ϕ",COMMON);defineSymbol("\\varphi",MAIN,ORD,"φ",COMMON);defineSymbol("\\upsilon",MAIN,ORD,"υ",COMMON);defineSymbol("\\chi",MAIN,ORD,"χ",COMMON);defineSymbol("\\psi",MAIN,ORD,"ψ",COMMON);defineSymbol("\\omega",MAIN,ORD,"ω",COMMON);defineSymbol("\\Gamma",MAIN,ORD,"Γ",COMMON);defineSymbol("\\Delta",MAIN,ORD,"Δ",COMMON);defineSymbol("\\Theta",MAIN,ORD,"Θ",COMMON);defineSymbol("\\Lambda",MAIN,ORD,"Λ",COMMON);defineSymbol("\\Xi",MAIN,ORD,"Ξ",COMMON);defineSymbol("\\Pi",MAIN,ORD,"Π",COMMON);defineSymbol("\\Sigma",MAIN,ORD,"Σ",COMMON);defineSymbol("\\Upsilon",MAIN,ORD,"Υ",COMMON);defineSymbol("\\Phi",MAIN,ORD,"Φ",COMMON);defineSymbol("\\Psi",MAIN,ORD,"Ψ",COMMON);defineSymbol("\\Omega",MAIN,ORD,"Ω",COMMON);defineSymbol("\\digamma",AMS,ORD,"ϝ",248);category="Others";defineSymbol("\\emptyset",MAIN,MATHORD,"∅",SUPERCOMMON);defineSymbol("\\varnothing",AMS,MATHORD,"∅",SUPERCOMMON);category="Set Operators";defineSymbol("\\cap",MAIN,BIN,"∩",SUPERCOMMON);defineSymbol("\\cup",MAIN,BIN,"∪",SUPERCOMMON);defineSymbol("\\setminus",MAIN,BIN,"∖",COMMON);defineSymbol("\\smallsetminus",AMS,BIN,"∖",254);defineSymbol("\\complement",AMS,MATHORD,"∁",200);category="Set Relations";defineSymbol("\\in",MAIN,REL,"∈",SUPERCOMMON);defineSymbol("\\notin",MAIN,REL,"∉",SUPERCOMMON);defineSymbol("\\not",MAIN,REL,"̸",COMMON);defineSymbol("\\ni",MAIN,REL,"∋",COMMON);defineSymbol("\\owns",MAIN,REL,"∋",18);defineSymbol("\\subset",MAIN,REL,"⊂",SUPERCOMMON);defineSymbol("\\supset",MAIN,REL,"⊃",SUPERCOMMON);defineSymbol("\\subseteq",MAIN,REL,"⊆",SUPERCOMMON);defineSymbol("\\supseteq",MAIN,REL,"⊇",SUPERCOMMON);defineSymbol("\\subsetneq",AMS,REL,"⊊",1945);defineSymbol("\\varsubsetneq",AMS,REL,"",198);defineSymbol("\\subsetneqq",AMS,REL,"⫋",314);defineSymbol("\\varsubsetneqq",AMS,REL,"",55);defineSymbol("\\nsubset",AMS,REL,"⊄",CRYPTIC);defineSymbol("\\nsupset",AMS,REL,"⊅",CRYPTIC);defineSymbol("\\nsubseteq",AMS,REL,"⊈",950);defineSymbol("\\nsupseteq",AMS,REL,"⊉",49);category="Spacing";defineSymbol("\\ ",MAIN,SPACING," ");defineSymbol("~",MAIN,SPACING," ");defineSymbol("\\space",MAIN,SPACING," ");defineSymbol("\\!",MAIN,SPACING,null);defineSymbol("\\,",MAIN,SPACING,null);defineSymbol("\\:",MAIN,SPACING,null);defineSymbol("\\;",MAIN,SPACING,null);defineSymbol("\\enskip",MAIN,SPACING,null);defineSymbol("\\enspace",MAIN,SPACING,null,672);defineSymbol("\\quad",MAIN,SPACING,null,COMMON);defineSymbol("\\qquad",MAIN,SPACING,null,COMMON);defineFunction(["\\hspace","\\hspace*"],"{width:skip}",{allowedInText:true},function(_name,args){return{type:"spacing",width:args[0]||0}});function getSimpleString(atoms){let result="";let success=true;for(const atom of atoms){if(typeof atom.body==="string"){result+=atom.body}else{success=false}}return success?result:""}defineFunction(["\\mathop","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathord","\\mathinner"],"{:auto}",null,function(name,args){const result={type:{"\\mathop":"mop","\\mathbin":"mbin","\\mathrel":"mrel","\\mathopen":"mopen","\\mathclose":"mclose","\\mathpunct":"mpunct","\\mathord":"mord","\\mathinner":"minner"}[name],body:getSimpleString(args[0])||args[0],captureSelection:true,baseFontFamily:name==="\\mathop"?"math":""};if(name==="\\mathop"){result.limits="nolimits";result.isFunction=true}return result});defineFunction(["\\operatorname","\\operatorname*"],"{operator:string}",null,function(name,args){const result={type:"mop",skipBoundary:true,body:args[0],isFunction:true,baseFontFamily:"cmr"};if(name==="\\operatorname"){result.limits="nolimits"}else if(name==="\\operatorname*"){result.limits="limits"}return result});category="Punctuation";defineSymbol("\\colon",MAIN,PUNCT,":",COMMON);defineSymbol("\\cdotp",MAIN,PUNCT,"⋅",COMMON);defineSymbol("\\ldots",MAIN,INNER,"…",COMMON);defineSymbol("\\cdots",MAIN,INNER,"⋯",COMMON);defineSymbol("\\ddots",MAIN,INNER,"⋱",COMMON);defineSymbol("\\mathellipsis",MAIN,INNER,"…",91);defineSymbol("\\vdots",MAIN,MATHORD,"⋮",COMMON);defineSymbol("\\ldotp",MAIN,PUNCT,".",18);defineSymbol(",",MAIN,PUNCT,",");defineSymbol(";",MAIN,PUNCT,";");category="Logical Operators";defineSymbol("\\wedge",MAIN,BIN,"∧",SUPERCOMMON);defineSymbol("\\vee",MAIN,BIN,"∨",SUPERCOMMON);defineSymbol("\\lnot",MAIN,MATHORD,"¬",COMMON);defineSymbol("\\neg",MAIN,MATHORD,"¬",SUPERCOMMON);defineSymbol("\\land",MAIN,BIN,"∧",659);defineSymbol("\\lor",MAIN,BIN,"∨",364);defineSymbol("\\barwedge",AMS,BIN,"⊼",21);defineSymbol("\\veebar",AMS,BIN,"⊻",43);defineSymbol("\\nor",AMS,BIN,"⊻",7);defineSymbol("\\curlywedge",AMS,BIN,"⋏",58);defineSymbol("\\curlyvee",AMS,BIN,"⋎",57);category="Boxes";defineSymbol("\\square",AMS,MATHORD,"□",COMMON);defineSymbol("\\Box",AMS,MATHORD,"□",COMMON);defineSymbol("\\blacksquare",AMS,MATHORD,"■",1679);defineSymbol("\\boxminus",AMS,BIN,"⊟",79);defineSymbol("\\boxplus",AMS,BIN,"⊞",276);defineSymbol("\\boxtimes",AMS,BIN,"⊠",457);defineSymbol("\\boxdot",AMS,BIN,"⊡",120);category="Circles";defineSymbol("\\circ",MAIN,BIN,"∘",SUPERCOMMON);defineSymbol("\\bigcirc",MAIN,BIN,"◯",903);defineSymbol("\\bullet",MAIN,BIN,"∙",COMMON);defineSymbol("\\circleddash",AMS,BIN,"⊝",COMMON);defineSymbol("\\circledast",AMS,BIN,"⊛",339);defineSymbol("\\oplus",MAIN,BIN,"⊕",COMMON);defineSymbol("\\ominus",MAIN,BIN,"⊖",1568);defineSymbol("\\otimes",MAIN,BIN,"⊗",COMMON);defineSymbol("\\odot",MAIN,BIN,"⊙",COMMON);defineSymbol("\\circledcirc",AMS,BIN,"⊚",93);defineSymbol("\\oslash",MAIN,BIN,"⊘",497);defineSymbol("\\circledS",AMS,MATHORD,"Ⓢ",31);defineSymbol("\\circledR",AMS,MATHORD,"®",1329);category="Triangles";defineSymbol("\\triangle",MAIN,MATHORD,"△",COMMON);defineSymbol("\\triangleq",AMS,REL,"≜",COMMON);defineSymbol("\\bigtriangleup",MAIN,BIN,"△",1773);defineSymbol("\\vartriangle",AMS,REL,"△",762);defineSymbol("\\triangledown",AMS,MATHORD,"▽",520);defineSymbol("\\bigtriangledown",MAIN,BIN,"▽",661);defineSymbol("\\triangleleft",MAIN,BIN,"◃",534);defineSymbol("\\vartriangleleft",AMS,REL,"⊲",281);defineSymbol("\\trianglelefteq",AMS,REL,"⊴",176);defineSymbol("\\ntriangleleft",AMS,REL,"⋪",13);defineSymbol("\\ntrianglelefteq",AMS,REL,"⋬",22);defineSymbol("\\triangleright",MAIN,BIN,"▹",516);defineSymbol("\\vartriangleright",AMS,REL,"⊳",209);defineSymbol("\\trianglerighteq",AMS,REL,"⊵",45);defineSymbol("\\ntriangleright",AMS,REL,"⋫",15);defineSymbol("\\ntrianglerighteq",AMS,REL,"⋭",6);defineSymbol("\\blacktriangle",AMS,MATHORD,"▲",360);defineSymbol("\\blacktriangledown",AMS,MATHORD,"▼",159);defineSymbol("\\blacktriangleleft",AMS,REL,"◀",101);defineSymbol("\\blacktriangleright",AMS,REL,"▶",271);category="Others";defineSymbol("\\/",MAIN,ORD,"/");defineSymbol("|",MAIN,"textord","∣");category="Big Operators";defineSymbol("\\sqcup",MAIN,BIN,"⊔",1717);defineSymbol("\\sqcap",MAIN,BIN,"⊓",735);defineSymbol("\\uplus",MAIN,BIN,"⊎",597);defineSymbol("\\wr",MAIN,BIN,"≀",286);defineSymbol("\\Cap",AMS,BIN,"⋒",2);defineSymbol("\\Cup",AMS,BIN,"⋓",2);defineSymbol("\\doublecap",AMS,BIN,"⋒",1);defineSymbol("\\doublecup",AMS,BIN,"⋓",1);defineSymbol("\\amalg",MAIN,BIN,"⨿",CRYPTIC);defineSymbol("\\And",MAIN,BIN,"&");category="Accents";defineFunction(["\\acute","\\grave","\\dot","\\ddot","\\mathring","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec"],"{body:auto}",null,function(name,args){return{type:"accent",accent:{"\\acute":"ˊ","\\grave":"ˋ","\\dot":"˙","\\ddot":"¨","\\mathring":"˚","\\tilde":"~","\\bar":"ˉ","\\breve":"˘","\\check":"ˇ","\\hat":"ˆ","\\vec":"⃗"}[name],limits:"accent",skipBoundary:true,body:args[0]}});frequency(COMMON,"\\bar","\\ddot","\\acute","\\tilde","\\check");frequency(1548,"\\breve");frequency(735,"\\grave");frequency(SUPERCOMMON,"\\vec");category="Letters and Letter Like Forms";defineSymbol("\\imath",MAIN,MATHORD,"ı");defineSymbol("\\jmath",MAIN,MATHORD,"ȷ");category="Others";defineSymbol("\\degree",MAIN,MATHORD,"°",46);category="Others";defineSymbol("'",MAIN,MATHORD,"′");defineSymbol('"',MAIN,MATHORD,"”");category="Others";defineFunction("\\^","{:string}",{allowedInText:true},function(name,args){return{type:"mord",limits:"nolimits",symbol:true,isFunction:false,body:args[0]?{a:"â",e:"ê",i:"î",o:"ô",u:"û",A:"Â",E:"Ê",I:"Î",O:"Ô",U:"Û"}[args[0]]||"^":"^",baseFontFamily:"cmr"}});defineFunction("\\`","{:string}",{allowedInText:true},function(name,args){return{type:"mord",limits:"nolimits",symbol:true,isFunction:false,body:args[0]?{a:"à",e:"è",i:"ì",o:"ò",u:"ù",A:"À",E:"È",I:"Ì",O:"Ò",U:"Ù"}[args[0]]||"`":"`",baseFontFamily:"cmr"}});defineFunction("\\'","{:string}",{allowedInText:true},function(name,args){return{type:"mord",limits:"nolimits",symbol:true,isFunction:false,body:args[0]?{a:"á",e:"é",i:"í",o:"ó",u:"ú",A:"Á",E:"É",I:"Í",O:"Ó",U:"Ú"}[args[0]]||"^":"^",baseFontFamily:"cmr"}});defineFunction("\\~","{:string}",{allowedInText:true},function(name,args){return{type:"mord",limits:"nolimits",symbol:true,isFunction:false,body:args[0]?{n:"ñ",N:"Ñ",a:"ã",o:"õ",A:"Ã",O:"Õ"}[args[0]]||"´":"´",baseFontFamily:"cmr"}});defineFunction("\\c","{:string}",{allowedInText:true},function(name,args){return{type:"mord",limits:"nolimits",symbol:true,isFunction:false,body:args[0]?{c:"ç",C:"Ç"}[args[0]]||"":"",baseFontFamily:"cmr"}});const TEXT_SYMBOLS={"\\#":"#","\\&":"&","\\$":"$","\\%":"%","\\_":"_","\\euro":"€","\\maltese":"✠","\\{":"{","\\}":"}","\\nobreakspace":" ","\\ldots":"…","\\textellipsis":"…","\\backslash":"\\","`":"‘","'":"’","``":"“","''":"”","\\degree":"°","\\textasciicircum":"^","\\textasciitilde":"~","\\textasteriskcentered":"*","\\textbackslash":"\\","\\textbraceleft":"{","\\textbraceright":"}","\\textbullet":"•","\\textdollar":"$","\\textsterling":"£","–":"–","—":"—","‘":"‘","’":"’","“":"“","”":"”",'"':"”","\\ss":"ß","\\ae":"æ","\\oe":"œ","\\AE":"Æ","\\OE":"Œ","\\O":"Ø","\\i":"ı","\\j":"ȷ","\\aa":"å","\\AA":"Å"};const COMMAND_MODE_CHARACTERS=/[a-zA-Z0-9!@*()-=+{}[\]\\';:?/.,~<>`|'$%#&^_" ]/;const LETTER=typeof navigator!=="undefined"&&/firefox|edge/i.test(navigator.userAgent)?/[a-zA-ZаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяĄąĆćĘęŁłŃńÓóŚśŹźŻżàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ]/:new RegExp("\\p{Letter}","u");const LETTER_AND_DIGITS=typeof navigator!=="undefined"&&/firefox|edge/i.test(navigator.userAgent)?/[0-9a-zA-ZаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяĄąĆćĘęŁłŃńÓóŚśŹźŻżàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ]/:new RegExp("[0-9\\p{Letter}]","u");var Definitions={matchCodepoint:matchCodepoint,commandAllowed:commandAllowed,unicodeToMathVariant:unicodeToMathVariant,mathVariantToUnicode:mathVariantToUnicode,unicodeStringToLatex:unicodeStringToLatex,getInfo:getInfo,getValue:getValue,getEnvironmentInfo:getEnvironmentInfo,suggest:suggest,FREQUENCY_VALUE:FREQUENCY_VALUE,TEXT_SYMBOLS:TEXT_SYMBOLS,MATH_SYMBOLS:MATH_SYMBOLS,ENVIRONMENTS:ENVIRONMENTS,RIGHT_DELIM:RIGHT_DELIM,FUNCTIONS:FUNCTIONS,MACROS:MACROS,COMMAND_MODE_CHARACTERS:COMMAND_MODE_CHARACTERS,LETTER:LETTER,LETTER_AND_DIGITS:LETTER_AND_DIGITS};const makeSymbol$1=Span$1.makeSymbol;const makeSpan$1=Span$1.makeSpan;const makeVlist$1=Span$1.makeVlist;function makeSmallDelim(type,delim,style,center,context,classes){const text=makeSymbol$1("Main-Regular",Definitions.getValue("math",delim));const span=Span$1.makeStyleWrap(type,text,context.mathstyle,style,classes);if(center){span.setTop((1-context.mathstyle.sizeMultiplier/style.sizeMultiplier)*context.mathstyle.metrics.axisHeight)}span.setStyle("color",context.color);if(typeof context.opacity==="number")span.setStyle("opacity",context.opacity);return span}function makeLargeDelim(type,delim,size,center,context,classes){const inner=makeSymbol$1("Size"+size+"-Regular",Definitions.getValue("math",delim));const result=Span$1.makeStyleWrap(type,makeSpan$1(inner,"delimsizing size"+size),context.mathstyle,Mathstyle$1.TEXT,classes);if(center){result.setTop((1-context.mathstyle.sizeMultiplier)*context.mathstyle.metrics.axisHeight)}result.setStyle("color",context.color);if(typeof context.opacity==="number")result.setStyle("opacity",context.opacity);return result}function makeInner$1(symbol,font){let sizeClass="";if(font==="Size1-Regular"){sizeClass=" delim-size1"}else if(font==="Size4-Regular"){sizeClass=" delim-size4"}const inner=makeSpan$1(makeSymbol$1(font,Definitions.getValue("math",symbol)),"delimsizinginner"+sizeClass);return inner}function makeStackedDelim(type,delim,heightTotal,center,context,classes){let top;let middle;let repeat;let bottom;top=repeat=bottom=Definitions.getValue("math",delim);middle=null;let font="Size1-Regular";if(delim==="\\vert"||delim==="\\lvert"||delim==="\\rvert"||delim==="\\mvert"||delim==="\\mid"){repeat=top=bottom="∣"}else if(delim==="\\Vert"||delim==="\\lVert"||delim==="\\rVert"||delim==="\\mVert"||delim==="\\|"){repeat=top=bottom="∥"}else if(delim==="\\uparrow"){repeat=bottom="⏐"}else if(delim==="\\Uparrow"){repeat=bottom="‖"}else if(delim==="\\downarrow"){top=repeat="⏐"}else if(delim==="\\Downarrow"){top=repeat="‖"}else if(delim==="\\updownarrow"){top="↑";repeat="⏐";bottom="↓"}else if(delim==="\\Updownarrow"){top="⇑";repeat="‖";bottom="⇓"}else if(delim==="["||delim==="\\lbrack"){top="⎡";repeat="⎢";bottom="⎣";font="Size4-Regular"}else if(delim==="]"||delim==="\\rbrack"){top="⎤";repeat="⎥";bottom="⎦";font="Size4-Regular"}else if(delim==="\\lfloor"){repeat=top="⎢";bottom="⎣";font="Size4-Regular"}else if(delim==="\\lceil"){top="⎡";repeat=bottom="⎢";font="Size4-Regular"}else if(delim==="\\rfloor"){repeat=top="⎥";bottom="⎦";font="Size4-Regular"}else if(delim==="\\rceil"){top="⎤";repeat=bottom="⎥";font="Size4-Regular"}else if(delim==="("){top="⎛";repeat="⎜";bottom="⎝";font="Size4-Regular"}else if(delim===")"){top="⎞";repeat="⎟";bottom="⎠";font="Size4-Regular"}else if(delim==="\\{"||delim==="\\lbrace"){top="⎧";middle="⎨";bottom="⎩";repeat="⎪";font="Size4-Regular"}else if(delim==="\\}"||delim==="\\rbrace"){top="⎫";middle="⎬";bottom="⎭";repeat="⎪";font="Size4-Regular"}else if(delim==="\\lgroup"){top="⎧";bottom="⎩";repeat="⎪";font="Size4-Regular"}else if(delim==="\\rgroup"){top="⎫";bottom="⎭";repeat="⎪";font="Size4-Regular"}else if(delim==="\\lmoustache"){top="⎧";bottom="⎭";repeat="⎪";font="Size4-Regular"}else if(delim==="\\rmoustache"){top="⎫";bottom="⎩";repeat="⎪";font="Size4-Regular"}else if(delim==="\\surd"){top="";bottom="⎷";repeat="";font="Size4-Regular"}else if(delim==="\\ulcorner"){top="┌";repeat=bottom=" "}else if(delim==="\\urcorner"){top="┐";repeat=bottom=" "}else if(delim==="\\llcorner"){bottom="└";repeat=top=" "}else if(delim==="\\lrcorner"){top="┘";repeat=top=" "}const topMetrics=FontMetrics.getCharacterMetrics(Definitions.getValue("math",top),font);const topHeightTotal=topMetrics.height+topMetrics.depth;const repeatMetrics=FontMetrics.getCharacterMetrics(Definitions.getValue("math",repeat),font);const repeatHeightTotal=repeatMetrics.height+repeatMetrics.depth;const bottomMetrics=FontMetrics.getCharacterMetrics(Definitions.getValue("math",bottom),font);const bottomHeightTotal=bottomMetrics.height+bottomMetrics.depth;let middleHeightTotal=0;let middleFactor=1;if(middle!==null){const middleMetrics=FontMetrics.getCharacterMetrics(Definitions.getValue("math",middle),font);middleHeightTotal=middleMetrics.height+middleMetrics.depth;middleFactor=2}const minHeight=topHeightTotal+bottomHeightTotal+middleHeightTotal;const repeatCount=Math.ceil((heightTotal-minHeight)/(middleFactor*repeatHeightTotal));const realHeightTotal=minHeight+repeatCount*middleFactor*repeatHeightTotal;let axisHeight=context.mathstyle.metrics.axisHeight;if(center){axisHeight*=context.mathstyle.sizeMultiplier}const depth=realHeightTotal/2-axisHeight;const inners=[];inners.push(makeInner$1(bottom,font));if(middle===null){for(let i=0;i<repeatCount;i++){inners.push(makeInner$1(repeat,font))}}else{for(let i=0;i<repeatCount;i++){inners.push(makeInner$1(repeat,font))}inners.push(makeInner$1(middle,font));for(let i=0;i<repeatCount;i++){inners.push(makeInner$1(repeat,font))}}inners.push(makeInner$1(top,font));const inner=makeVlist$1(context,inners,"bottom",depth);inner.setStyle("color",context.color);if(typeof context.opacity==="number")inner.setStyle("opacity",context.opacity);return Span$1.makeStyleWrap(type,makeSpan$1(inner,"delimsizing mult"),context.mathstyle,Mathstyle$1.TEXT,classes)}const stackLargeDelimiters=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","\\surd"];const stackAlwaysDelimiters=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\mvert","\\mid","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache"];const stackNeverDelimiters=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"];const sizeToMaxHeight=[0,1.2,1.8,2.4,3];function makeSizedDelim(type,delim,size,context,classes){if(delim==="."){return makeNullFence(type,context,classes)}if(delim==="<"||delim==="\\lt"){delim="\\langle"}else if(delim===">"||delim==="\\gt"){delim="\\rangle"}if(stackLargeDelimiters.includes(delim)||stackNeverDelimiters.includes(delim)){return makeLargeDelim(type,delim,size,false,context,classes)}else if(stackAlwaysDelimiters.includes(delim)){return makeStackedDelim(type,delim,sizeToMaxHeight[size],false,context,classes)}console.assert(false,"Unknown delimiter '"+delim+"'");return null}const stackNeverDelimiterSequence=[{type:"small",mathstyle:Mathstyle$1.SCRIPTSCRIPT},{type:"small",mathstyle:Mathstyle$1.SCRIPT},{type:"small",mathstyle:Mathstyle$1.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}];const stackAlwaysDelimiterSequence=[{type:"small",mathstyle:Mathstyle$1.SCRIPTSCRIPT},{type:"small",mathstyle:Mathstyle$1.SCRIPT},{type:"small",mathstyle:Mathstyle$1.TEXT},{type:"stack"}];const stackLargeDelimiterSequence=[{type:"small",mathstyle:Mathstyle$1.SCRIPTSCRIPT},{type:"small",mathstyle:Mathstyle$1.SCRIPT},{type:"small",mathstyle:Mathstyle$1.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}];function delimTypeToFont(type){if(type.type==="small"){return"Main-Regular"}else if(type.type==="large"){return"Size"+type.size+"-Regular"}console.assert(type.type==="stack");return"Size4-Regular"}function traverseSequence(delim,height,sequence,context){const start=Math.min(2,3-context.mathstyle.size);for(let i=start;i<sequence.length;i++){if(sequence[i].type==="stack"){break}const metrics=FontMetrics.getCharacterMetrics(delim,delimTypeToFont(sequence[i]));if(metrics.defaultMetrics){return{type:"small",mathstyle:Mathstyle$1.SCRIPT}}let heightDepth=metrics.height+metrics.depth;if(sequence[i].type==="small"){heightDepth*=sequence[i].mathstyle.sizeMultiplier}if(heightDepth>height){return sequence[i]}}return sequence[sequence.length-1]}function makeCustomSizedDelim(type,delim,height,center,context,classes){if(!delim||delim.length===0||delim==="."){return makeNullFence(type,context,type)}if(delim==="<"||delim==="\\lt"){delim="\\langle"}else if(delim===">"||delim==="\\gt"){delim="\\rangle"}let sequence;if(stackNeverDelimiters.includes(delim)){sequence=stackNeverDelimiterSequence}else if(stackLargeDelimiters.includes(delim)){sequence=stackLargeDelimiterSequence}else{sequence=stackAlwaysDelimiterSequence}const delimType=traverseSequence(Definitions.getValue("math",delim),height,sequence,context);console.log({delimType:delimType});if(delimType.type==="small"){return makeSmallDelim(type,delim,delimType.mathstyle,center,context,classes)}else if(delimType.type==="large"){return makeLargeDelim(type,delim,delimType.size,center,context,classes)}console.assert(delimType.type==="stack");return makeStackedDelim(type,delim,height,center,context,classes)}function makeLeftRightDelim(type,delim,height,depth,context,classes){if(delim==="."){return makeNullFence(type,context,classes)}const axisHeight=context.mathstyle.metrics.axisHeight*context.mathstyle.sizeMultiplier;const delimiterFactor=901;const delimiterShortfall=5/FontMetrics.METRICS.ptPerEm;let delta2=depth+axisHeight;let delta1=height-axisHeight;delta1=Math.max(delta2,delta1);let delta=delta1*delimiterFactor/500;delta2=2*delta1-delimiterShortfall;delta=Math.max(delta,delta2);return makeCustomSizedDelim(type,delim,delta,true,context,classes)}function makeNullFence(type,context,classes){return Span$1.makeSpanOfType(type,"","sizing"+context.mathstyle.adjustTo(Mathstyle$1.TEXT)+" nulldelimiter "+(classes||""))}var Delimiters={makeSizedDelim:makeSizedDelim,makeCustomSizedDelim:makeCustomSizedDelim,makeLeftRightDelim:makeLeftRightDelim};const makeSpan$2=Span$1.makeSpan;const makeOrd$1=Span$1.makeOrd;const makeInner$2=Span$1.makeInner;const makeHlist$1=Span$1.makeHlist;const makeVlist$2=Span$1.makeVlist;const GREEK_REGEX=/\u0393|\u0394|\u0398|\u039b|\u039E|\u03A0|\u03A3|\u03a5|\u03a6|\u03a8|\u03a9|[\u03b1-\u03c9]|\u03d1|\u03d5|\u03d6|\u03f1|\u03f5/;const AUTO_ITALIC_REGEX=/^([A-Za-z]|[\u03b1-\u03c9]|\u03d1|\u03d5|\u03d6|\u03f1|\u03f5)$/;const SIZING_MULTIPLIER={size1:.5,size2:.7,size3:.8,size4:.9,size5:1,size6:1.2,size7:1.44,size8:1.73,size9:2.07,size10:2.49};class MathAtom{constructor(mode,type,body,style){this.mode=mode;this.type=type;this.body=body;if(style){this.applyStyle(style)}}getStyle(){return{color:this.phantom?"transparent":this.color,backgroundColor:this.phantom?"transparent":this.backgroundColor,fontFamily:this.baseFontFamily||this.fontFamily||this.autoFontFamily,fontShape:this.fontShape,fontSeries:this.fontSeries,fontSize:this.fontSize,cssId:this.cssId,cssClass:this.cssClass}}applyStyle(style){Object.assign(this,style);if(this.fontFamily==="none"){this.fontFamily="";delete this.baseFontFamily}if(this.fontShape==="auto"){this.fontShape=""}if(this.fontSeries==="auto"){this.fontSeries=""}if(this.color==="none"){this.color=""}if(this.backgroundColor==="none"){this.backgroundColor=""}if(this.fontSize==="auto"){this.fontSize=""}if(this.fontSize){this.maxFontSize=SIZING_MULTIPLIER[this.fontSize]}if(this.mode==="math"){const symbol=typeof this.body==="string"?this.body:"";this.autoFontFamily="cmr";if(/\\imaginary[IJ]/.test(this.latex)){this.autoFontFamily="mathbf"}else if(AUTO_ITALIC_REGEX.test(symbol)){this.autoFontFamily="math"}else if(/\\imath|\\jmath|\\pounds/.test(symbol)){this.autoFontFamily="mainit"}else if(!GREEK_REGEX.test(symbol)&&this.baseFontFamily==="math"){this.autoFontFamily="cmr"}}else if(this.mode==="text"){if(this.type!=="root")this.type="";delete this.baseFontFamily;delete this.autoFontFamily}}getInitialBaseElement(){let result=this;if(Array.isArray(this.body)&&this.body.length>0){if(this.body[0].type!=="first"){result=this.body[0].getInitialBaseElement()}else if(this.body[1]){result=this.body[1].getInitialBaseElement()}}return result}getFinalBaseElement(){if(Array.isArray(this.body)&&this.body.length>0){return this.body[this.body.length-1].getFinalBaseElement()}return this}isCharacterBox(){const base=this.getInitialBaseElement();return/minner|mbin|mrel|mpunct|mopen|mclose|textord/.test(base.type)}forEach(cb,parents){parents=parents||[];cb(this,parents);const childParents=[this,...parents];if(Array.isArray(this.body)){for(const atom of this.body)if(atom)atom.forEach(cb,childParents)}else if(this.body&&typeof this.body==="object"){cb(this.body,childParents)}if(this.superscript){for(const atom of this.superscript)if(atom)atom.forEach(cb,childParents)}if(this.subscript){for(const atom of this.subscript)if(atom)atom.forEach(cb,childParents)}if(this.overscript){for(const atom of this.overscript)if(atom)atom.forEach(cb,childParents)}if(this.underscript){for(const atom of this.underscript)if(atom)atom.forEach(cb,childParents)}if(this.numer){for(const atom of this.numer)if(atom)atom.forEach(cb,childParents)}if(this.denom){for(const atom of this.denom)if(atom)atom.forEach(cb,childParents)}if(this.index){for(const atom of this.index)if(atom)atom.forEach(cb,childParents)}if(this.array){for(const row of this.array){for(const cell of row){for(const atom of cell)atom.forEach(cb,childParents)}}}}filter(cb){let result=[];if(cb(this))result.push(this);for(const relation of["body","superscript","subscript","overscript","underscript","numer","denom","index"]){if(Array.isArray(this[relation])){for(const atom of this[relation]){if(atom)result=result.concat(atom.filter(cb))}}}if(Array.isArray(this.array)){for(const row of this.array){for(const cell of row){if(cell)result=result.concat(cell.filter(cb))}}}return result}decomposeGroup(context){const localContext=context.clone({mathstyle:this.mathstyle});const span=makeOrd$1(decompose(localContext,this.body));if(this.cssId)span.cssId=this.cssId;span.applyStyle({backgroundColor:this.backgroundColor,cssClass:this.cssClass});return span}decomposeArray(context){let colFormat=this.colFormat;if(colFormat&&colFormat.length===0){colFormat=[{align:"l"}]}if(!colFormat){colFormat=[{align:"l"},{align:"l"},{align:"l"},{align:"l"},{align:"l"},{align:"l"},{align:"l"},{align:"l"},{align:"l"},{align:"l"}]}const array=[];let colMax=0;for(const colSpec of colFormat){if(colSpec.align)colMax++}for(const row of this.array){let colIndex=0;while(colIndex<row.length){const newRow=[];const lastCol=Math.min(row.length,colIndex+colMax);while(colIndex<lastCol){newRow.push(row[colIndex++])}array.push(newRow)}}if(array[array.length-1].length===1&&array[array.length-1][0].length===0){array.pop()}const mathstyle=Mathstyle$1.toMathstyle(this.mathstyle)||context.mathstyle;const arraystretch=this.arraystretch||1;const arrayskip=arraystretch*METRICS.baselineskip;const arstrutHeight=.7*arrayskip;const arstrutDepth=.3*arrayskip;let totalHeight=0;let nc=0;const body=[];const nr=array.length;for(let r=0;r<nr;++r){const inrow=array[r];nc=Math.max(nc,inrow.length);let height=arstrutHeight;let depth=arstrutDepth;const outrow=[];for(let c=0;c<inrow.length;++c){const localContext=context.clone({mathstyle:this.mathstyle});const cell=decompose(localContext,inrow[c])||[];const elt=[makeOrd$1(null)].concat(cell);depth=Math.max(depth,Span$1.depth(elt));height=Math.max(height,Span$1.height(elt));outrow.push(elt)}let jot=r===nr-1?0:this.jot||0;if(this.rowGaps&&this.rowGaps[r]){jot=this.rowGaps[r];if(jot>0){jot+=arstrutDepth;if(depth<jot){depth=jot}jot=0}}outrow.height=height;outrow.depth=depth;totalHeight+=height;outrow.pos=totalHeight;totalHeight+=depth+jot;body.push(outrow)}const offset=totalHeight/2+mathstyle.metrics.axisHeight;const contentCols=[];for(let colIndex=0;colIndex<nc;colIndex++){const col=[];for(const row of body){const elem=row[colIndex];if(!elem){continue}elem.depth=row.depth;elem.height=row.height;col.push(elem);col.push(row.pos-offset)}if(col.length>0){contentCols.push(makeVlist$2(context,col,"individualShift"))}}const cols=[];let prevColContent=false;let prevColRule=false;let currentContentCol=0;let firstColumn=!this.lFence;for(const colDesc of colFormat){if(colDesc.align&&currentContentCol>=contentCols.length){break}else if(colDesc.align&&currentContentCol<contentCols.length){if(prevColContent){cols.push(makeColGap(2*METRICS.arraycolsep))}else if(prevColRule||firstColumn){cols.push(makeColGap(METRICS.arraycolsep))}cols.push(makeSpan$2(contentCols[currentContentCol],"col-align-"+colDesc.align));currentContentCol++;prevColContent=true;prevColRule=false;firstColumn=false}else if(typeof colDesc.gap!=="undefined"){if(typeof colDesc.gap==="number"){cols.push(makeColGap(colDesc.gap))}else{cols.push(makeColOfRepeatingElements(context,body,offset,colDesc.gap))}prevColContent=false;prevColRule=false;firstColumn=false}else if(colDesc.rule){const separator=makeSpan$2(null,"vertical-separator");separator.setStyle("height",totalHeight,"em");separator.setStyle("margin-top",3*context.mathstyle.metrics.axisHeight-offset,"em");separator.setStyle("vertical-align","top");let gap=0;if(prevColRule){gap=METRICS.doubleRuleSep-METRICS.arrayrulewidth}else if(prevColContent){gap=METRICS.arraycolsep-METRICS.arrayrulewidth}separator.setLeft(gap,"em");cols.push(separator);prevColContent=false;prevColRule=true;firstColumn=false}}if(prevColContent&&!this.rFence){cols.push(makeColGap(METRICS.arraycolsep))}if((!this.lFence||this.lFence===".")&&(!this.rFence||this.rFence===".")){return makeOrd$1(cols,"mtable")}const inner=makeSpan$2(cols,"mtable");const innerHeight=Span$1.height(inner);const innerDepth=Span$1.depth(inner);return makeOrd$1([this.bind(context,Delimiters.makeLeftRightDelim("mopen",this.lFence,innerHeight,innerDepth,context)),inner,this.bind(context,Delimiters.makeLeftRightDelim("mclose",this.rFence,innerHeight,innerDepth,context))])}decomposeGenfrac(context){const mathstyle=this.mathstyle==="auto"?context.mathstyle:Mathstyle$1.toMathstyle(this.mathstyle);const newContext=context.clone({mathstyle:mathstyle});let numer=[];if(this.numerPrefix){numer.push(makeOrd$1(this.numerPrefix))}const numeratorStyle=this.continuousFraction?mathstyle:mathstyle.fracNum();numer=numer.concat(decompose(newContext.clone({mathstyle:numeratorStyle}),this.numer));const numerReset=makeHlist$1(numer,context.mathstyle.adjustTo(numeratorStyle));let denom=[];if(this.denomPrefix){denom.push(makeOrd$1(this.denomPrefix))}const denominatorStyle=this.continuousFraction?mathstyle:mathstyle.fracDen();denom=denom.concat(decompose(newContext.clone({mathstyle:denominatorStyle}),this.denom));const denomReset=makeHlist$1(denom,context.mathstyle.adjustTo(denominatorStyle));const ruleWidth=!this.hasBarLine?0:METRICS.defaultRuleThickness/mathstyle.sizeMultiplier;let numShift;let clearance;let denomShift;if(mathstyle.size===Mathstyle$1.DISPLAY.size){numShift=mathstyle.metrics.num1;if(ruleWidth>0){clearance=3*ruleWidth}else{clearance=7*METRICS.defaultRuleThickness}denomShift=mathstyle.metrics.denom1}else{if(ruleWidth>0){numShift=mathstyle.metrics.num2;clearance=ruleWidth}else{numShift=mathstyle.metrics.num3;clearance=3*METRICS.defaultRuleThickness}denomShift=mathstyle.metrics.denom2}const numerDepth=numerReset?numerReset.depth:0;const denomHeight=denomReset?denomReset.height:0;let frac;if(ruleWidth===0){const candidateClearance=numShift-numerDepth-(denomHeight-denomShift);if(candidateClearance<clearance){numShift+=.5*(clearance-candidateClearance);denomShift+=.5*(clearance-candidateClearance)}frac=makeVlist$2(newContext,[numerReset,-numShift,denomReset,denomShift],"individualShift")}else{const axisHeight=mathstyle.metrics.axisHeight;if(numShift-numerDepth-(axisHeight+.5*ruleWidth)<clearance){numShift+=clearance-(numShift-numerDepth-(axisHeight+.5*ruleWidth))}if(axisHeight-.5*ruleWidth-(denomHeight-denomShift)<clearance){denomShift+=clearance-(axisHeight-.5*ruleWidth-(denomHeight-denomShift))}const mid=makeSpan$2(null," frac-line");mid.applyStyle(this.getStyle());mid.height=ruleWidth;const elements=[];if(numerReset){elements.push(numerReset);elements.push(-numShift)}elements.push(mid);elements.push(ruleWidth/2-axisHeight);if(denomReset){elements.push(denomReset);elements.push(denomShift)}frac=makeVlist$2(newContext,elements,"individualShift")}frac.classes+=" mfrac";frac.height*=mathstyle.sizeMultiplier/context.mathstyle.sizeMultiplier;frac.depth*=mathstyle.sizeMultiplier/context.mathstyle.sizeMultiplier;const delimSize=mathstyle.size===Mathstyle$1.DISPLAY.size?mathstyle.metrics.delim1:mathstyle.metrics.delim2;const leftDelim=Delimiters.makeCustomSizedDelim("mopen",this.leftDelim,delimSize,true,context.clone({mathstyle:mathstyle}));const rightDelim=Delimiters.makeCustomSizedDelim("mclose",this.rightDelim,delimSize,true,context.clone({mathstyle:mathstyle}));leftDelim.applyStyle(this.getStyle());rightDelim.applyStyle(this.getStyle());const result=makeOrd$1([leftDelim,frac,rightDelim],context.parentSize!==context.size?"sizing reset-"+context.parentSize+" "+context.size:"");return this.bind(context,result)}decomposeLeftright(context){if(!this.body){if(this.leftDelim){return new MathAtom("math","mopen",this.leftDelim).decompose(context)}if(this.rightDelim){return new MathAtom("math","mclose",this.rightDelim).decompose(context)}return null}const localContext=context.clone();const inner=decompose(localContext,this.body);const mathstyle=localContext.mathstyle;let innerHeight=0;let innerDepth=0;let result=[];innerHeight=Span$1.height(inner)*mathstyle.sizeMultiplier;innerDepth=Span$1.depth(inner)*mathstyle.sizeMultiplier;if(this.leftDelim){result.push(Delimiters.makeLeftRightDelim("mopen",this.leftDelim,innerHeight,innerDepth,localContext));result[result.length-1].applyStyle(this.getStyle())}if(inner){for(let i=0;i<inner.length;i++){if(inner[i].delim){const savedCaret=inner[i].caret;const savedSelected=/ML__selected/.test(inner[i].classes);inner[i]=Delimiters.makeLeftRightDelim("minner",inner[i].delim,innerHeight,innerDepth,localContext);inner[i].caret=savedCaret;inner[i].selected(savedSelected)}}result=result.concat(inner)}if(this.rightDelim){let delim=this.rightDelim;let classes;if(delim==="?"){delim={"(":")","\\{":"\\}","\\[":"\\]","\\lbrace":"\\rbrace","\\langle":"\\rangle","\\lfloor":"\\rfloor","\\lceil":"\\rceil","\\vert":"\\vert","\\lvert":"\\rvert","\\Vert":"\\Vert","\\lVert":"\\rVert","\\lbrack":"\\rbrack","\\ulcorner":"\\urcorner","\\llcorner":"\\lrcorner","\\lgroup":"\\rgroup","\\lmoustache":"\\rmoustache"}[this.leftDelim];delim=delim||this.leftDelim;classes="ML__smart-fence__close"}result.push(Delimiters.makeLeftRightDelim("mclose",delim,innerHeight,innerDepth,localContext,classes));result[result.length-1].applyStyle(this.getStyle())}if(this.inner)return makeInner$2(result,mathstyle.cls());return result}decomposeSurd(context){const mathstyle=context.mathstyle;const inner=decompose(context.cramp(),this.body);const ruleWidth=METRICS.defaultRuleThickness*mathstyle.sizeMultiplier;let phi=ruleWidth;if(mathstyle.id<Mathstyle$1.TEXT.id){phi=mathstyle.metrics.xHeight}let lineClearance=ruleWidth+phi/4;const innerSize=Span$1.height(inner)+Span$1.depth(inner);const innerSizeMin=Math.max(2*phi,innerSize*mathstyle.sizeMultiplier);const minDelimiterHeight=innerSizeMin+(lineClearance+ruleWidth);const delim=makeSpan$2(Delimiters.makeCustomSizedDelim("","\\surd",minDelimiterHeight,false,context),"sqrt-sign");delim.applyStyle(this.getStyle());const visibleDelimSize=(delim.height+delim.depth)*mathstyle.sizeMultiplier-ruleWidth;if(visibleDelimSize>innerSizeMin+lineClearance){lineClearance=(visibleDelimSize-innerSizeMin)/2}const delimTop=delim.height-Span$1.height(inner)-lineClearance-ruleWidth;delim.setTop(delimTop);const line=makeSpan$2(null,context.mathstyle.adjustTo(Mathstyle$1.TEXT)+" sqrt-line");line.applyStyle(this.getStyle());line.height=ruleWidth;const body=makeVlist$2(context,[inner,lineClearance,line,ruleWidth]);if(!this.index){return this.bind(context,makeOrd$1([delim,body],"sqrt"))}const newcontext=context.clone({mathstyle:Mathstyle$1.SCRIPTSCRIPT});const root=makeSpan$2(decompose(newcontext,this.index),mathstyle.adjustTo(Mathstyle$1.SCRIPTSCRIPT));const innerRootHeight=Math.max(delim.height,body.height);const innerRootDepth=Math.max(delim.depth,body.depth);const toShift=.6*(innerRootHeight-innerRootDepth);const rootVlist=makeVlist$2(context,[root],"shift",-toShift);return this.bind(context,makeOrd$1([makeSpan$2(rootVlist,"root"),delim,body],"sqrt"))}decomposeAccent(context){const mathstyle=context.mathstyle;let base=decompose(context.cramp(),this.body);if(this.superscript||this.subscript){base=this.attachSupsub(context,makeOrd$1(base),"mord")}let skew=0;if(Array.isArray(this.body)&&this.body.length===1&&this.body[0].isCharacterBox()){skew=Span$1.skew(base)}const clearance=Math.min(Span$1.height(base),mathstyle.metrics.xHeight);const accent=Span$1.makeSymbol("Main-Regular",this.accent,"math");accent.italic=0;const vecClass=this.accent==="⃗"?" accent-vec":this.accent==="ˆ"?" accent-hat":"";let accentBody=makeSpan$2(makeSpan$2(accent),"accent-body"+vecClass);accentBody=makeVlist$2(context,[base,-clearance,accentBody]);accentBody.children[1].setLeft(2*skew);return makeOrd$1(accentBody,"accent")}decomposeLine(context){const mathstyle=context.mathstyle;const inner=decompose(context.cramp(),this.body);const ruleWidth=METRICS.defaultRuleThickness/mathstyle.sizeMultiplier;const line=makeSpan$2(null,context.mathstyle.adjustTo(Mathstyle$1.TEXT)+" "+this.position+"-line");line.height=ruleWidth;line.maxFontSize=1;let vlist;if(this.position==="overline"){vlist=makeVlist$2(context,[inner,3*ruleWidth,line,ruleWidth])}else{const innerSpan=makeSpan$2(inner);vlist=makeVlist$2(context,[ruleWidth,line,3*ruleWidth,innerSpan],"top",Span$1.height(innerSpan))}return makeOrd$1(vlist,this.position)}decomposeOverunder(context){const base=decompose(context,this.body);const annotationStyle=context.clone({mathstyle:"scriptstyle"});const above=this.overscript?makeSpan$2(decompose(annotationStyle,this.overscript),context.mathstyle.adjustTo(annotationStyle.mathstyle)):null;const below=this.underscript?makeSpan$2(decompose(annotationStyle,this.underscript),context.mathstyle.adjustTo(annotationStyle.mathstyle)):null;return makeStack(context,base,0,0,above,below,this.mathtype||"mrel")}decomposeOverlap(context){const inner=makeSpan$2(decompose(context,this.body),"inner");return makeOrd$1([inner,makeSpan$2(null,"fix")],this.align==="left"?"llap":"rlap")}decomposeRule(context){const mathstyle=context.mathstyle;const result=makeOrd$1("","rule");let shift=this.shift&&!isNaN(this.shift)?this.shift:0;shift=shift/mathstyle.sizeMultiplier;const width=this.width/mathstyle.sizeMultiplier;const height=this.height/mathstyle.sizeMultiplier;result.setStyle("border-right-width",width,"em");result.setStyle("border-top-width",height,"em");result.setStyle("margin-top",-(height-shift),"em");result.setStyle("border-color",context.color);result.width=width;result.height=height+shift;result.depth=-shift;return result}decomposeOp(context){const mathstyle=context.mathstyle;let large=false;if(mathstyle.size===Mathstyle$1.DISPLAY.size&&typeof this.body==="string"&&this.body!=="\\smallint"){large=true}let base;let baseShift=0;let slant=0;if(this.symbol){const fontName=large?"Size2-Regular":"Size1-Regular";base=Span$1.makeSymbol(fontName,this.body,"op-symbol "+(large?"large-op":"small-op"));base.type="mop";baseShift=(base.height-base.depth)/2-mathstyle.metrics.axisHeight*mathstyle.sizeMultiplier;slant=base.italic;this.bind(context,base)}else if(Array.isArray(this.body)){base=Span$1.makeOp(decompose(context,this.body));this.bind(context,base)}else{console.assert(this.type==="mop");base=this.makeSpan(context,this.body)}if(this.superscript||this.subscript){const limits=this.limits||"auto";if(this.alwaysHandleSupSub||limits==="limits"||limits==="auto"&&mathstyle.size===Mathstyle$1.DISPLAY.size){return this.attachLimits(context,base,baseShift,slant)}return this.attachSupsub(context,base,"mop")}if(this.symbol)base.setTop(baseShift);return base}decomposeBox(context){const base=makeOrd$1(decompose(context,this.body));const box=makeSpan$2();box.setStyle("position","absolute");const padding=typeof this.padding==="number"?this.padding:METRICS.fboxsep;box.setStyle("height",base.height+base.depth+2*padding,"em");if(padding!==0){box.setStyle("width","calc(100% + "+2*padding+"em)")}else{box.setStyle("width","100%")}box.setStyle("top",-padding,"em");box.setStyle("left",-padding,"em");box.setStyle("z-index","-1");if(this.backgroundcolor)box.setStyle("background-color",this.backgroundcolor);if(this.framecolor)box.setStyle("border",METRICS.fboxrule+"em solid "+this.framecolor);if(this.border)box.setStyle("border",this.border);base.setStyle("display","inline-block");base.setStyle("height",base.height+base.depth,"em");base.setStyle("vertical-align",-base.depth+padding,"em");const result=makeSpan$2([box,base]);result.setStyle("position","relative");result.setStyle("vertical-align",-padding+base.depth,"em");result.height=base.height+padding;result.depth=base.depth+padding;result.setLeft(padding);result.setRight(padding);return result}decomposeEnclose(context){const base=makeOrd$1(decompose(context,this.body));const result=base;const padding=this.padding==="auto"?.2:this.padding;result.setStyle("padding",padding,"em");result.setStyle("display","inline-block");result.setStyle("height",result.height+result.depth,"em");result.setStyle("left",-padding,"em");if(this.backgroundcolor&&this.backgroundcolor!=="transparent"){result.setStyle("background-color",this.backgroundcolor)}let svg="";if(this.notation.box)result.setStyle("border",this.borderStyle);if(this.notation.actuarial){result.setStyle("border-top",this.borderStyle);result.setStyle("border-right",this.borderStyle)}if(this.notation.madruwb){result.setStyle("border-bottom",this.borderStyle);result.setStyle("border-right",this.borderStyle)}if(this.notation.roundedbox){result.setStyle("border-radius",(Span$1.height(result)+Span$1.depth(result))/2,"em");result.setStyle("border",this.borderStyle)}if(this.notation.circle){result.setStyle("border-radius","50%");result.setStyle("border",this.borderStyle)}if(this.notation.top)result.setStyle("border-top",this.borderStyle);if(this.notation.left)result.setStyle("border-left",this.borderStyle);if(this.notation.right)result.setStyle("border-right",this.borderStyle);if(this.notation.bottom)result.setStyle("border-bottom",this.borderStyle);if(this.notation.horizontalstrike){svg+='<line x1="3%"  y1="50%" x2="97%" y2="50%"';svg+=` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`;svg+=' stroke-linecap="round"';if(this.svgStrokeStyle){svg+=` stroke-dasharray="${this.svgStrokeStyle}"`}svg+="/>"}if(this.notation.verticalstrike){svg+='<line x1="50%"  y1="3%" x2="50%" y2="97%"';svg+=` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`;svg+=' stroke-linecap="round"';if(this.svgStrokeStyle){svg+=` stroke-dasharray="${this.svgStrokeStyle}"`}svg+="/>"}if(this.notation.updiagonalstrike){svg+='<line x1="3%"  y1="97%" x2="97%" y2="3%"';svg+=` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`;svg+=' stroke-linecap="round"';if(this.svgStrokeStyle){svg+=` stroke-dasharray="${this.svgStrokeStyle}"`}svg+="/>"}if(this.notation.downdiagonalstrike){svg+='<line x1="3%"  y1="3%" x2="97%" y2="97%"';svg+=` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`;svg+=' stroke-linecap="round"';if(this.svgStrokeStyle){svg+=` stroke-dasharray="${this.svgStrokeStyle}"`}svg+="/>"}if(svg){let svgStyle;if(this.shadow!=="none"){if(this.shadow==="auto"){svgStyle="filter: drop-shadow(0 0 .5px rgba(255, 255, 255, .7)) drop-shadow(1px 1px 2px #333)"}else{svgStyle="filter: drop-shadow("+this.shadow+")"}}return Span$1.makeSVG(result,svg,svgStyle)}return result}decomposeVariable(context){const localContext=context.clone({mathstyle:this.mathstyle});const span=makeOrd$1(decompose(localContext,this.body));if(this.cssId)span.cssId=this.cssId;span.applyStyle({backgroundColor:this.backgroundColor,cssClass:this.cssClass});span.classes+=" ML__variable";return span}decompose(context,phantomBase){console.assert(context instanceof Context$1.Context);let result=null;if(!this.type||/mord|minner|mbin|mrel|mpunct|mopen|mclose|textord/.test(this.type)){if(typeof this.body==="string"){result=this.makeSpan(context,this.body)}else{result=this.makeSpan(context,decompose(context,this.body))}result.type=this.type}else if(this.type==="group"||this.type==="root"){result=this.decomposeGroup(context)}else if(this.type==="array"){result=this.decomposeArray(context)}else if(this.type==="genfrac"){result=this.decomposeGenfrac(context)}else if(this.type==="surd"){result=this.decomposeSurd(context)}else if(this.type==="accent"){result=this.decomposeAccent(context)}else if(this.type==="leftright"){result=this.decomposeLeftright(context)}else if(this.type==="delim"){result=makeSpan$2(null,"");result.delim=this.delim}else if(this.type==="sizeddelim"){result=this.bind(context,Delimiters.makeSizedDelim(this.cls,this.delim,this.size,context))}else if(this.type==="line"){result=this.decomposeLine(context)}else if(this.type==="overunder"){result=this.decomposeOverunder(context)}else if(this.type==="overlap"){result=this.decomposeOverlap(context)}else if(this.type==="rule"){result=this.decomposeRule(context)}else if(this.type==="styling");else if(this.type==="msubsup"){result=makeOrd$1("​");if(phantomBase){result.height=phantomBase[0].height;result.depth=phantomBase[0].depth}}else if(this.type==="mop"){result=this.decomposeOp(context)}else if(this.type==="space"){result=this.makeSpan(context," ")}else if(this.type==="spacing"){if(this.body==="​"){result=this.makeSpan(context,"​")}else if(this.body===" "){if(this.mode==="math"){result=this.makeSpan(context," ")}else{result=this.makeSpan(context," ")}}else if(this.width){result=makeSpan$2("​","mspace ");if(this.width>0){result.setWidth(this.width)}else{result.setStyle("margin-left",this.width,"em")}}else{const spacingCls={qquad:"qquad",quad:"quad",enspace:"enspace",";":"thickspace",":":"mediumspace",",":"thinspace","!":"negativethinspace"}[this.body]||"quad";result=makeSpan$2("​","mspace "+spacingCls)}}else if(this.type==="mathstyle"){context.setMathstyle(this.mathstyle)}else if(this.type==="box"){result=this.decomposeBox(context)}else if(this.type==="enclose"){result=this.decomposeEnclose(context)}else if(this.type==="variable"){result=this.decomposeVariable(context)}else if(this.type==="command"||this.type==="error"){result=this.makeSpan(context,this.body);result.classes="";if(this.error){result.classes+=" ML__error"}if(this.suggestion){result.classes+=" ML__suggestion"}}else if(this.type==="placeholder"){result=this.makeSpan(context,"⬚")}else if(this.type==="first"){result=this.makeSpan(context,"​")}else{console.assert(false,'Unknown MathAtom type: "'+this.type+'"')}if(!result)return result;if(this.caret&&this.type!=="styling"&&this.type!=="msubsup"&&this.type!=="command"&&this.type!=="placeholder"&&this.type!=="first"){if(Array.isArray(result)){result[result.length-1].caret=this.caret}else{result.caret=this.caret}}if(!this.limits&&(this.superscript||this.subscript)){if(Array.isArray(result)){const lastSpan=result[result.length-1];result[result.length-1]=this.attachSupsub(context,lastSpan,lastSpan.type)}else{result=[this.attachSupsub(context,result,result.type)]}}return Array.isArray(result)?result:[result]}attachSupsub(context,nucleus,type){if(!this.superscript&&!this.subscript)return nucleus;const mathstyle=context.mathstyle;let supmid=null;let submid=null;if(this.superscript){const sup=decompose(context.sup(),this.superscript);supmid=makeSpan$2(sup,mathstyle.adjustTo(mathstyle.sup()))}if(this.subscript){const sub=decompose(context.sub(),this.subscript);submid=makeSpan$2(sub,mathstyle.adjustTo(mathstyle.sub()))}let supShift=0;let subShift=0;if(!this.isCharacterBox()){supShift=Span$1.height(nucleus)-mathstyle.metrics.supDrop;subShift=Span$1.depth(nucleus)+mathstyle.metrics.subDrop}let minSupShift;if(mathstyle===Mathstyle$1.DISPLAY){minSupShift=mathstyle.metrics.sup1}else if(mathstyle.cramped){minSupShift=mathstyle.metrics.sup3}else{minSupShift=mathstyle.metrics.sup2}const multiplier=Mathstyle$1.TEXT.sizeMultiplier*mathstyle.sizeMultiplier;const scriptspace=.5/METRICS.ptPerEm/multiplier;let supsub=null;if(submid&&supmid){supShift=Math.max(supShift,minSupShift,supmid.depth+.25*mathstyle.metrics.xHeight);subShift=Math.max(subShift,mathstyle.metrics.sub2);const ruleWidth=METRICS.defaultRuleThickness;if(supShift-Span$1.depth(supmid)-(Span$1.height(submid)-subShift)<4*ruleWidth){subShift=4*ruleWidth-(supShift-supmid.depth)+Span$1.height(submid);const psi=.8*mathstyle.metrics.xHeight-(supShift-Span$1.depth(supmid));if(psi>0){supShift+=psi;subShift-=psi}}supsub=makeVlist$2(context,[submid,subShift,supmid,-supShift],"individualShift");if(this.symbol){supsub.children[0].setLeft(-Span$1.italic(nucleus))}}else if(submid&&!supmid){subShift=Math.max(subShift,mathstyle.metrics.sub1,Span$1.height(submid)-.8*mathstyle.metrics.xHeight);supsub=makeVlist$2(context,[submid],"shift",subShift);supsub.children[0].setRight(scriptspace);if(this.isCharacterBox()){supsub.children[0].setLeft(-Span$1.italic(nucleus))}}else if(!submid&&supmid){supShift=Math.max(supShift,minSupShift,supmid.depth+.25*mathstyle.metrics.xHeight);supsub=makeVlist$2(context,[supmid],"shift",-supShift);supsub.children[0].setRight(scriptspace)}const supsubContainer=makeSpan$2(supsub,"msubsup");if(this.caret){supsubContainer.caret=this.caret}return Span$1.makeSpanOfType(type,[nucleus,supsubContainer])}attachLimits(context,nucleus,nucleusShift,slant){const limitAbove=this.superscript?makeSpan$2(decompose(context.sup(),this.superscript),context.mathstyle.adjustTo(context.mathstyle.sup())):null;const limitBelow=this.subscript?makeSpan$2(decompose(context.sub(),this.subscript),context.mathstyle.adjustTo(context.mathstyle.sub())):null;return makeStack(context,nucleus,nucleusShift,slant,limitAbove,limitBelow,"mop")}bind(context,span){if(this.type!=="first"&&this.body!=="​"){this.id=makeID(context);if(this.id){if(!span.attributes)span.attributes={};span.attributes["data-atom-id"]=this.id}}return span}makeSpan(context,body){const type=this.type==="textord"?"mord":this.type;const result=Span$1.makeSpanOfType(type,body);const style=this.getStyle();result.applyStyle(style);const size=style&&style.fontSize?style.fontSize:"size5";if(size!==context.parentSize){result.classes+=" sizing reset-"+context.parentSize;result.classes+=" "+size}else if(context.parentSize!==context.size){result.classes+=" sizing reset-"+context.parentSize;result.classes+=" "+context.size}result.maxFontSize=Math.max(result.maxFontSize,context.sizeMultiplier||1);if(this.mode==="text")result.classes+=" ML__text";if(context.mathstyle.isTight())result.isTight=true;if(this.mode!=="math")result.italic=0;result.setRight(result.italic);if(typeof context.opacity==="number")result.setStyle("opacity",context.opacity);this.bind(context,result);if(this.caret){if(!this.superscript&&!this.subscript){result.caret=this.caret;if(context.mathstyle.isTight())result.isTight=true}}return result}}function makeColGap(width){const separator=makeSpan$2("​","arraycolsep");separator.setWidth(width,"em");return separator}function makeColOfRepeatingElements(context,body,offset,elem){const col=[];for(const row of body){const cell=makeSpan$2(decompose(context,elem));cell.depth=row.depth;cell.height=row.height;col.push(cell);col.push(row.pos-offset)}return makeVlist$2(context,col,"individualShift")}function makeID(context){let result;if(typeof context.generateID==="boolean"&&context.generateID){result=Date.now().toString(36).slice(-2)+Math.floor(Math.random()*1e5).toString(36)}else if(typeof context.generateID!=="boolean"){if(context.generateID.overrideID){result=context.generateID.overrideID}else{result=context.generateID.seed.toString(36);context.generateID.seed+=1}}return result}function makeStack(context,nucleus,nucleusShift,slant,above,below,type){if(!above&&!below)return nucleus;nucleus=makeSpan$2(nucleus);let aboveShift=0;let belowShift=0;if(above){aboveShift=Math.max(METRICS.bigOpSpacing1,METRICS.bigOpSpacing3-above.depth)}if(below){belowShift=Math.max(METRICS.bigOpSpacing2,METRICS.bigOpSpacing4-below.height)}let result=null;if(below&&above){const bottom=METRICS.bigOpSpacing5+Span$1.height(below)+Span$1.depth(below)+belowShift+Span$1.depth(nucleus)+nucleusShift;result=makeVlist$2(context,[METRICS.bigOpSpacing5,below,belowShift,nucleus,aboveShift,above,METRICS.bigOpSpacing5],"bottom",bottom);result.children[0].setLeft(-slant);result.children[2].setLeft(slant)}else if(below&&!above){const top=Span$1.height(nucleus)-nucleusShift;result=makeVlist$2(context,[METRICS.bigOpSpacing5,below,belowShift,nucleus],"top",top);result.children[0].setLeft(-slant)}else if(!below&&above){const bottom=Span$1.depth(nucleus)+nucleusShift;result=makeVlist$2(context,[nucleus,aboveShift,above,METRICS.bigOpSpacing5],"bottom",bottom);result.children[1].setLeft(slant)}return Span$1.makeSpanOfType(type,result,"op-limits")}function decompose(context,atoms){if(!(context instanceof Context$1.Context)){context=new Context$1.Context(context)}const displaySelection=!context.generateID||!context.generateID.groupNumbers;let result=[];if(Array.isArray(atoms)){if(atoms.length===0){return result}else if(atoms.length===1){result=atoms[0].decompose(context);if(result&&displaySelection&&atoms[0].isSelected){result.forEach(x=>x.selected(true))}console.assert(!result||Array.isArray(result))}else{let previousType="none";let nextType=atoms[1].type;let selection=[];let digitStringID=null;let phantomBase=null;for(let i=0;i<atoms.length;i++){if(atoms[i].type==="mbin"){if(/first|none|mrel|mpunct|mopen|mbin|mop/.test(previousType)||/none|mrel|mpunct|mclose/.test(nextType)){atoms[i].type="mord"}}if(atoms[i].body!=="​"||!atoms[i].superscript&&!atoms[i].subscript){phantomBase=null}if(context.generateID.groupNumbers&&digitStringID&&atoms[i].type==="mord"&&/[0-9,.]/.test(atoms[i].latex)){context.generateID.overrideID=digitStringID}const span=atoms[i].decompose(context,phantomBase);if(context.generateID){context.generateID.overrideID=null}if(span){const flat=[].concat.apply([],span);phantomBase=flat;if(context.generateID&&context.generateID.groupNumbers){if(atoms[i].type==="mord"&&/[0-9,.]/.test(atoms[i].latex)){if(!digitStringID){digitStringID=atoms[i].id}}if((atoms[i].type!=="mord"||/[0-9,.]/.test(atoms[i].latex)||atoms[i].superscript||atoms[i].subscript)&&digitStringID){digitStringID=null}}if(displaySelection&&atoms[i].isSelected){selection=selection.concat(flat);selection.forEach(x=>x.selected(true))}else{if(selection.length>0){result=[...result,...selection];selection=[]}result=result.concat(flat)}}previousType=atoms[i].getFinalBaseElement().type;nextType=atoms[i+1]?atoms[i+1].getInitialBaseElement().type:"none"}if(selection.length>0){result=[...result,...selection];selection=[]}}}else if(atoms){result=atoms.decompose(context);if(result&&displaySelection&&atoms.isSelected){result.forEach(x=>x.selected(true))}}if(!result||result.length===0)return null;console.assert(Array.isArray(result)&&result.length>0);if(context.mathstyle!==context.parentMathstyle){const factor=context.mathstyle.sizeMultiplier/context.parentMathstyle.sizeMultiplier;for(const span of result){console.assert(!Array.isArray(span));console.assert(typeof span.height==="number"&&isFinite(span.height));span.height*=factor;span.depth*=factor}}if(context.size!==context.parentSize){const factor=SIZING_MULTIPLIER[context.size]/SIZING_MULTIPLIER[context.parentSize];for(const span of result){console.assert(!Array.isArray(span));console.assert(typeof span.height==="number"&&isFinite(span.height));span.height*=factor;span.depth*=factor}}return result}function makeRoot(parseMode,body){parseMode=parseMode||"math";const result=new MathAtom(parseMode,"root",body||[]);if(result.body.length===0||result.body[0].type!=="first"){result.body.unshift(new MathAtom("","first"))}return result}var MathAtom$1={MathAtom:MathAtom,decompose:decompose,makeRoot:makeRoot,GREEK_REGEX:GREEK_REGEX};const MATHEMATICA_COLORS={m0:"#3f3d99",m1:"#993d71",m2:"#998b3d",m3:"#3d9956",m4:"#3d5a99",m5:"#993d90",m6:"#996d3d",m7:"#43993d",m8:"#3d7999",m9:"#843d99"};const AREA_COLORS=["#d35d60","#7293cb","#e1974d","#84bb5d","#9066a7","#aD6a58","#f5a4ce","#fff590","#212121","#818787","#d4d5d2","#ffffff"];const LINE_COLORS=["#cc2428","#3769b1","#da7e30","#409852","#6b4c9a","#922426","#e7298a","#ffe907","#000000","#525055","#adafaa","#ffffff"];const NAMED_COLORS={apricot:"#FBB982",aquamarine:"#00B5BE",bittersweet:"#C04F17",black:"#221E1F",blue:"#2D2F92",bluegreen:"#00B3B8",blueviolet:"#473992",brickred:"#B6321C",brown:"#792500",burntorange:"#F7921D",cadetblue:"#74729A",carnationpink:"#F282B4",cerulean:"#00A2E3",cornflowerblue:"#41B0E4",cyan:"#00AEEF",dandelion:"#FDBC42",darkorchid:"#A4538A",emerald:"#00A99D",forestgreen:"#009B55",fuchsia:"#8C368C",goldenrod:"#FFDF42",gray:"#949698",green:"#00A64F",greenyellow:"#DFE674",junglegreen:"#00A99A",lavender:"#F49EC4",limegreen:"#8DC73E",magenta:"#EC008C",mahogany:"#A9341F",maroon:"#AF3235",melon:"#F89E7B",midnightblue:"#006795",mulberry:"#A93C93",navyblue:"#006EB8",olivegreen:"#3C8031",orange:"#F58137",orangered:"#ED135A",orchid:"#AF72B0",peach:"#F7965A",periwinkle:"#7977B8",pinegreen:"#008B72",plum:"#92268F",processblue:"#00B0F0",purple:"#99479B",rawsienna:"#974006",red:"#ED1B23",redorange:"#F26035",redviolet:"#A1246B",rhodamine:"#EF559F",royalblue:"#0071BC",royalpurple:"#613F99",rubinered:"#ED017D",salmon:"#F69289",seagreen:"#3FBC9D",sepia:"#671800",skyblue:"#46C5DD",springgreen:"#C6DC67",tan:"#DA9D76",tealblue:"#00AEB3",thistle:"#D883B7",turquoise:"#00B4CE",violet:"#58429B",violetred:"#EF58A0",white:"#FFFFFF",wildstrawberry:"#EE2967",yellow:"#FFF200",yellowgreen:"#98CC70",yelloworange:"#FAA21A"};function stringToColor(s){const colorSpec=s.toLowerCase().split("!");let baseRed;let baseGreen;let baseBlue;let red=255;let green=255;let blue=255;let mix=-1;const complementary=colorSpec.length>0&&colorSpec[0].charAt(0)==="-";if(complementary)colorSpec[0]=colorSpec[0].slice(1);for(let i=0;i<colorSpec.length;i++){baseRed=red;baseGreen=green;baseBlue=blue;let colorName=colorSpec[i].match(/([a-z0-9]*)/);if(colorName)colorName=colorName[1];let color=NAMED_COLORS[colorName]||MATHEMATICA_COLORS[colorName];if(!color)color=colorSpec[i];let m=color.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);if(m&&m[1]&&m[2]&&m[3]){red=Math.max(0,Math.min(255,parseInt(m[1],16)));green=Math.max(0,Math.min(255,parseInt(m[2],16)));blue=Math.max(0,Math.min(255,parseInt(m[3],16)))}else{m=color.match(/^#([0-9a-f]{3})$/i);if(m&&m[1]){const r1=parseInt(m[1][0],16);const g1=parseInt(m[1][1],16);const b1=parseInt(m[1][2],16);red=Math.max(0,Math.min(255,r1*16+r1));green=Math.max(0,Math.min(255,g1*16+g1));blue=Math.max(0,Math.min(255,b1*16+b1))}else{m=color.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i);if(m&&m[1]&&m[2]&&m[3]){red=Math.max(0,Math.min(255,parseInt(m[1])));green=Math.max(0,Math.min(255,parseInt(m[2])));blue=Math.max(0,Math.min(255,parseInt(m[3])))}else{return null}}}if(mix>=0){red=(1-mix)*red+mix*baseRed;green=(1-mix)*green+mix*baseGreen;blue=(1-mix)*blue+mix*baseBlue;mix=-1}if(i+1<colorSpec.length){mix=Math.max(0,Math.min(100,parseInt(colorSpec[++i])))/100}}if(mix>=0){red=mix*red+(1-mix)*baseRed;green=mix*green+(1-mix)*baseGreen;blue=mix*blue+(1-mix)*baseBlue}if(complementary){red=255-red;green=255-green;blue=255-blue}return"#"+("00"+Math.round(red).toString(16)).slice(-2)+("00"+Math.round(green).toString(16)).slice(-2)+("00"+Math.round(blue).toString(16)).slice(-2)}function colorToString(color){let result=color.toUpperCase();for(const c in NAMED_COLORS){if(NAMED_COLORS[c]===result){result=c;break}}for(const c in MATHEMATICA_COLORS){if(MATHEMATICA_COLORS[c]===result){result=c;break}}return result}var Color={stringToColor:stringToColor,colorToString:colorToString,AREA_COLORS:AREA_COLORS,LINE_COLORS:LINE_COLORS};const MathAtom$2=MathAtom$1.MathAtom;class Parser{constructor(tokens,args,macros){this.tokens=tokens;this.index=0;this.args=args;this.macros=macros;this.mathList=[];this.style={};this.parseMode="math";this.tabularMode=false;this.endCount=0}swapMathList(newMathList){const result=this.mathList;this.mathList=newMathList||[];return result}swapParseMode(mode){const result=this.parseMode;this.parseMode=mode;return result}end(){this.endCount++;return this.index>=this.tokens.length||this.endCount>1e3}get(){this.endCount=0;return this.index<this.tokens.length?this.tokens[this.index++]:null}peek(offset){const index=this.index+(offset?offset:0);return index<this.tokens.length?this.tokens[index]:null}lastMathAtom(){const lastType=this.mathList.length===0?"none":this.mathList[this.mathList.length-1].type;if(lastType!=="mop"&&lastType!=="msubsup"){const lastAtom=new MathAtom$2(this.parseMode,"msubsup","​");lastAtom.attributes={"aria-hidden":true};this.mathList.push(lastAtom)}return this.mathList[this.mathList.length-1]}hasToken(type){const index=this.index;return index<this.tokens.length?this.tokens[index].type===type:false}hasLiteral(value){const index=this.index;return index<this.tokens.length?this.tokens[index].type==="literal"&&(!value||this.tokens[index].value===value):false}hasLiteralPattern(pattern){return this.hasToken("literal")&&pattern.test(this.tokens[this.index].value)}hasCommand(command){console.assert(command==="\\"||command.charAt(0)!=="\\","hasCommand() does not require a \\");const index=this.index;return index<this.tokens.length?this.tokens[index].type==="command"&&this.tokens[index].value===command:false}hasInfixCommand(){const index=this.index;if(index<this.tokens.length&&this.tokens[index].type==="command"){const info=Definitions.getInfo("\\"+this.tokens[index].value,this.parseMode,this.macros);return info&&info.infix}return false}hasColumnSeparator(){const index=this.index;return this.tabularMode&&index<this.tokens.length?this.tokens[index].type==="literal"&&this.tokens[index].value==="&":false}hasRowSeparator(){const index=this.index;return this.tabularMode&&index<this.tokens.length?this.tokens[index].type==="command"&&(this.tokens[index].value==="\\"||this.tokens[index].value==="cr"):false}parseColumnSeparator(){if(this.hasColumnSeparator()){this.index++;return true}return false}placeholder(){if(this.args&&typeof this.args["?"]==="string"){return parseTokens(Lexer$1.tokenize(this.args["?"]),this.parseMode,null,this.macros)}const result=new MathAtom$2(this.parseMode,"placeholder","?",this.style);result.captureSelection=true;return[result]}hasImplicitCommand(commands){if(this.index<this.tokens.length){const token=this.tokens[this.index];if(token.type==="command"){return commands.includes(token.value)}}return false}parseRowSeparator(){if(this.hasRowSeparator()){this.index++;return true}return false}parseToken(type){if(this.hasToken(type)){this.index++;return true}return false}skipWhitespace(){let found=false;while(this.hasToken("space")){this.index++;found=true}return found}skipUntilToken(type){while(!this.end()&&!this.parseToken(type)){this.get()}}parseCommand(command){if(this.hasCommand(command)){this.index++;return true}return false}parseLiteral(literal){if(this.hasLiteral(literal)){this.index++;return true}return false}parseFiller(){let skipped=false;let done=false;do{const skippedSpace=this.skipWhitespace();const skippedRelax=this.parseCommand("relax");skipped=skipped||skippedSpace||skippedRelax;done=!skippedSpace&&!skippedRelax}while(!done);return skipped}parseKeyword(keyword){const savedIndex=this.index;let done=this.end();let value="";while(!done){const token=this.get();if(token.type==="literal"){value+=token.value}done=this.end()||token.type!=="literal"||value.length>=keyword.length}const hasKeyword=keyword.toUpperCase()===value.toUpperCase();if(!hasKeyword){this.index=savedIndex}return hasKeyword}scanString(){let result="";let done=this.end();while(!done){if(this.hasLiteral("]")){done=true}else if(this.hasToken("literal")){result+=this.get().value}else if(this.skipWhitespace()){result+=" "}else if(this.hasToken("command")){const token=this.get();if(token.value==="space"){result+=" "}else{result+=token.value}}else{done=true}done=done||this.end()}return result}scanColor(){return Color.stringToColor(this.scanString())}scanNumber(isInteger){const negative=this.parseLiteral("-");if(!negative)this.parseLiteral("+");this.skipWhitespace();isInteger=!!isInteger;let radix=10;let digits=/[0-9]/;if(this.parseLiteral("'")){radix=8;digits=/[0-7]/;isInteger=true}else if(this.parseLiteral('"')||this.parseLiteral("x")){radix=16;digits=/[0-9A-F]/;isInteger=true}let value="";while(this.hasLiteralPattern(digits)){value+=this.get().value}if(!isInteger&&(this.parseLiteral(".")||this.parseLiteral(","))){value+=".";while(this.hasLiteralPattern(digits)){value+=this.get().value}}const result=isInteger?parseInt(value,radix):parseFloat(value);return negative?-result:result}scanDimen(){const value=this.scanNumber(false);this.skipWhitespace();let result;if(this.parseKeyword("pt")){result=FontMetrics.toEm(value,"pt")}else if(this.parseKeyword("mm")){result=FontMetrics.toEm(value,"mm")}else if(this.parseKeyword("cm")){result=FontMetrics.toEm(value,"cm")}else if(this.parseKeyword("ex")){result=FontMetrics.toEm(value,"ex")}else if(this.parseKeyword("px")){result=FontMetrics.toEm(value,"px")}else if(this.parseKeyword("em")){result=FontMetrics.toEm(value,"em")}else if(this.parseKeyword("bp")){result=FontMetrics.toEm(value,"bp")}else if(this.parseKeyword("dd")){result=FontMetrics.toEm(value,"dd")}else if(this.parseKeyword("pc")){result=FontMetrics.toEm(value,"pc")}else if(this.parseKeyword("in")){result=FontMetrics.toEm(value,"in")}else if(this.parseKeyword("mu")){result=FontMetrics.toEm(value,"mu")}else{result=FontMetrics.toEm(value,"pt")}return result}scanSkip(){const result=this.scanDimen();this.skipWhitespace();if(this.parseKeyword("plus")){this.scanDimen()}this.skipWhitespace();if(this.parseKeyword("minus")){this.scanDimen()}return result}scanColspec(){this.skipWhitespace();const result=[];while(!this.end()&&!(this.hasToken("}")||this.hasLiteral("]"))){if(this.hasLiteral()){const literal=this.get().value;if("lcr".includes(literal)){result.push({align:literal})}else if(literal==="|"){result.push({rule:true})}else if(literal==="@"){if(this.parseToken("{")){const savedParsemode=this.swapParseMode("math");result.push({gap:this.scanImplicitGroup(token=>token.type==="}")});this.swapParseMode(savedParsemode)}this.parseToken("}")}}}return result}scanModeSet(){let final;if(this.parseCommand("("))final=")";if(!final&&this.parseCommand("["))final="]";if(!final)return null;const savedParsemode=this.swapParseMode("math");const result=new MathAtom$2("math","group");result.mathstyle=final===")"?"textstyle":"displaystyle";result.body=this.scanImplicitGroup(token=>token.type==="command"&&token.value===final);this.parseCommand(final);this.swapParseMode(savedParsemode);if(!result.body||result.body.length===0)return null;return result}scanModeShift(){if(!this.hasToken("$")&&!this.hasToken("$$"))return null;const final=this.get().type;const result=new MathAtom$2("math","group");result.mathstyle=final==="$"?"textstyle":"displaystyle";result.latexOpen=result.mathstyle==="textstyle"?"$":"$$";result.latexClose=result.latexOpen;const savedParsemode=this.swapParseMode("math");result.body=this.scanImplicitGroup(token=>token.type===final);this.parseToken(final);this.swapParseMode(savedParsemode);if(!result.body||result.body.length===0)return null;return result}scanEnvironment(){if(!this.parseCommand("begin"))return null;const envName=this.scanArg("string");const env=Definitions.getEnvironmentInfo(envName);const args=[];if(env&&env.params){for(const param of env.params){if(param.optional){const arg=this.scanOptionalArg(param.type);args.push(arg)}else{args.push(this.scanArg(param.type))}}}const savedMode=this.parseMode;const savedTabularMode=this.tabularMode;const savedMathList=this.swapMathList([]);this.tabularMode=env.tabular;const array=[];const rowGaps=[];let row=[];let done=false;do{done=this.end();if(!done&&this.parseCommand("end")){done=this.scanArg("string")===envName}if(!done){if(this.parseColumnSeparator()){row.push(this.swapMathList([]))}else if(this.parseRowSeparator()){row.push(this.swapMathList([]));let gap=0;this.skipWhitespace();if(this.parseLiteral("[")){gap=this.scanDimen();this.skipWhitespace();this.parseLiteral("]")}rowGaps.push(gap||0);array.push(row);row=[]}else{this.mathList=this.mathList.concat(this.scanImplicitGroup())}}}while(!done);row.push(this.swapMathList([]));if(row.length>0)array.push(row);const newMathList=this.swapMathList(savedMathList);console.assert(!this.tabularMode||newMathList.length===0,"Leftover atoms in tabular mode");this.parseMode=savedMode;this.tabularMode=savedTabularMode;if(!env.tabular&&newMathList.length===0)return null;if(env.tabular&&array.length===0)return null;const result=new MathAtom$2(this.parseMode,"array",newMathList,env.parser?env.parser(envName,args,array):{});result.array=array;result.rowGaps=rowGaps;result.env={...env};result.env.name=envName;return result}scanImplicitGroup(done){const savedStyle=this.style;if(!done){done=token=>token.type==="}"||token.type==="literal"&&token.value==="&"||token.type==="command"&&/^(end|cr|\\)$/.test(token.value)}let infix=null;let prefix=null;const savedMathlist=this.swapMathList([]);while(!this.end()&&!done(this.peek())){if(this.hasImplicitCommand(["displaystyle","textstyle","scriptstyle","scriptscriptstyle"])){this.parseMode="math";const atom=new MathAtom$2("math","mathstyle");atom.mathstyle=this.get().value;this.mathList.push(atom)}else if(this.hasInfixCommand()&&!infix){infix=this.get();prefix=this.swapMathList([])}else{this.parseAtom()}}let result;if(infix){const suffix=this.swapMathList(savedMathlist);const info=Definitions.getInfo("\\"+infix.value,"math",this.macros);if(info){result=[new MathAtom$2(this.parseMode,info.type,info.value||infix.value,info.parse?info.parse("\\"+infix.value,[prefix,suffix]):null)]}else{result=[new MathAtom$2(this.parseMode,"mop",infix.value)]}}else{result=this.swapMathList(savedMathlist)}this.style=savedStyle;return result}scanGroup(){if(!this.parseToken("{"))return null;const formatCommands=["fontseries","upshape","fontshape","tiny","scriptsize","footnotesize","small","normalsize","large","Large","LARGE","huge","Huge","fontfamily"];const isFormatGroup=formatCommands.some(c=>this.hasCommand(c));const body=this.scanImplicitGroup(token=>token.type==="}");this.parseToken("}");if(isFormatGroup){return body}const result=new MathAtom$2(this.parseMode,"group");result.body=body;result.latexOpen="{";result.latexClose="}";return result}scanSmartFence(){this.skipWhitespace();if(!this.parseLiteral("("))return null;const result=new MathAtom$2(this.parseMode,"leftright");result.leftDelim="(";result.inner=false;const savedMathList=this.swapMathList([]);let nestLevel=1;while(!this.end()&&nestLevel!==0){if(this.hasLiteral("("))nestLevel+=1;if(this.hasLiteral(")"))nestLevel-=1;if(nestLevel!==0)this.parseAtom()}if(nestLevel===0)this.parseLiteral(")");result.rightDelim=nestLevel===0?")":"?";result.body=this.swapMathList(savedMathList);return result}scanDelim(){this.skipWhitespace();const token=this.get();if(!token)return null;let delim=".";if(token.type==="command"){delim="\\"+token.value}else if(token.type==="literal"){delim=token.value}const info=Definitions.getInfo(delim,"math",this.macros);if(!info)return null;if(info.type==="mopen"||info.type==="mclose"){return delim}if(/^(\?|\||<|>|\\vert|\\Vert|\\\||\\surd|\\uparrow|\\downarrow|\\Uparrow|\\Downarrow|\\updownarrow|\\Updownarrow|\\mid|\\mvert|\\mVert)$/.test(delim)){return delim}return null}scanLeftRight(){if(this.parseCommand("right")||this.parseCommand("mright")){const result=new MathAtom$2(this.parseMode,"leftright");result.rightDelim=this.scanDelim()||".";return result}const savedStyle=this.style;let close="right";if(!this.parseCommand("left")){if(!this.parseCommand("mleft"))return null;close="mright"}const leftDelim=this.scanDelim()||".";const savedMathList=this.swapMathList([]);while(!this.end()&&!this.parseCommand(close)){this.parseAtom()}this.style=savedStyle;const rightDelim=this.scanDelim();const result=new MathAtom$2(this.parseMode,"leftright");result.leftDelim=leftDelim;result.rightDelim=rightDelim;result.inner=close==="right";result.body=this.swapMathList(savedMathList);return result}parseSupSub(){if(this.parseMode!=="math")return false;let result=false;while(this.hasLiteral("^")||this.hasLiteral("_")||this.hasLiteral("'")){let supsub;if(this.hasLiteral("^")){supsub="superscript"}else if(this.hasLiteral("_")){supsub="subscript"}if(this.parseLiteral("^")||this.parseLiteral("_")){const arg=this.scanArg();if(arg){const atom=this.lastMathAtom();atom[supsub]=atom[supsub]||[];atom[supsub]=atom[supsub].concat(arg);result=true}}else if(this.parseLiteral("'")){const atom=this.lastMathAtom();atom.superscript=atom.superscript||[];atom.superscript.push(new MathAtom$2(atom.parseMode,"mord","′"));result=true}}return result}parseLimits(){if(this.parseCommand("limits")){const lastAtom=this.lastMathAtom();lastAtom.limits="limits";lastAtom.explicitLimits=true;return true}if(this.parseCommand("nolimits")){const lastAtom=this.lastMathAtom();lastAtom.limits="nolimits";lastAtom.explicitLimits=true;return true}return false}scanOptionalArg(parseMode){parseMode=!parseMode||parseMode==="auto"?this.parseMode:parseMode;this.skipWhitespace();if(!this.parseLiteral("["))return null;const savedParseMode=this.parseMode;this.parseMode=parseMode;const savedMathlist=this.swapMathList();let result;while(!this.end()&&!this.parseLiteral("]")){if(parseMode==="string"){result=this.scanString()}else if(parseMode==="number"){result=this.scanNumber()}else if(parseMode==="dimen"){result=this.scanDimen()}else if(parseMode==="skip"){result=this.scanSkip()}else if(parseMode==="colspec"){result=this.scanColspec()}else if(parseMode==="color"){result=this.scanColor()||"#ffffff"}else if(parseMode==="bbox"){const list=this.scanString().toLowerCase().trim().split(/,(?![^(]*\)(?:(?:[^(]*\)){2})*[^"]*$)/);for(const elem of list){const color=Color.stringToColor(elem);if(color){result=result||{};result.backgroundcolor=color}else{const m=elem.match(/^\s*([0-9.]+)\s*([a-z][a-z])/);if(m){result=result||{};result.padding=FontMetrics.toEm(m[1],m[2])}else{const m=elem.match(/^\s*border\s*:\s*(.*)/);if(m){result=result||{};result.border=m[1]}}}}}else{console.assert(parseMode==="math",'Unexpected parse mode: "'+parseMode+'"');this.mathList=this.mathList.concat(this.scanImplicitGroup(token=>token.type==="literal"&&token.value==="]"))}}this.parseMode=savedParseMode;const mathList=this.swapMathList(savedMathlist);return result?result:mathList}scanArg(parseMode){parseMode=!parseMode||parseMode==="auto"?this.parseMode:parseMode;this.parseFiller();let result;if(!this.parseToken("{")){if(parseMode==="delim"){return this.scanDelim()||"."}else if(/^(math|text)$/.test(parseMode)){const savedParseMode=this.parseMode;this.parseMode=parseMode;const atom=this.scanToken();this.parseMode=savedParseMode;if(Array.isArray(atom))return atom;return atom?[atom]:null}}if(this.hasToken("#")){const paramToken=this.get();this.skipUntilToken("}");if(paramToken.value==="?"){return this.placeholder()}if(this.args){if(this.args[paramToken.value]===undefined&&this.args["?"]!==undefined){return this.placeholder()}return this.args[paramToken.value]||null}return null}const savedParseMode=this.parseMode;this.parseMode=parseMode;const savedMathList=this.swapMathList([]);if(parseMode==="string"){result=this.scanString();this.skipUntilToken("}")}else if(parseMode==="number"){result=this.scanNumber();this.skipUntilToken("}")}else if(parseMode==="dimen"){result=this.scanDimen();this.skipUntilToken("}")}else if(parseMode==="skip"){result=this.scanSkip();this.skipUntilToken("}")}else if(parseMode==="colspec"){result=this.scanColspec();this.skipUntilToken("}")}else if(parseMode==="color"){result=this.scanColor()||"#ffffff";this.skipUntilToken("}")}else if(parseMode==="delim"){result=this.scanDelim()||".";this.skipUntilToken("}")}else{console.assert(/^(math|text)$/.test(parseMode),'Unexpected parse mode: "'+parseMode+'"');do{this.mathList=this.mathList.concat(this.scanImplicitGroup())}while(!this.parseToken("}")&&!this.end())}this.parseMode=savedParseMode;const mathList=this.swapMathList(savedMathList);return result?result:mathList}scanToken(){const token=this.get();if(!token)return null;let result=null;if(token.type==="space"){if(this.parseMode==="text"){result=new MathAtom$2("text",""," ",this.style)}}else if(token.type==="placeholder"){result=new MathAtom$2(this.parseMode,"placeholder",token.value);result.captureSelection=true}else if(token.type==="command"){if(token.value==="placeholder"){result=new MathAtom$2(this.parseMode,"placeholder",this.scanArg("string"),this.style);result.captureSelection=true}else if(token.value==="char"){let codepoint=Math.floor(this.scanNumber(true));if(!isFinite(codepoint)||codepoint<0||codepoint>1114111){codepoint=10067}result=new MathAtom$2(this.parseMode,this.parseMode==="math"?"mord":"",String.fromCodePoint(codepoint));result.latex='\\char"'+("000000"+codepoint.toString(16)).toUpperCase().substr(-6)+""}else if(token.value==="hskip"||token.value==="kern"){const width=this.scanSkip();if(isFinite(width)){result=new MathAtom$2(this.parseMode,"spacing",null,this.style);result.width=width}result.latex="\\"+token.value}else{result=this.scanMacro(token.value);if(!result){const info=Definitions.getInfo("\\"+token.value,this.parseMode,this.macros);const args=[];let argString="";let explicitGroup="";if(info&&info.params){for(const param of info.params){if(param.optional){const arg=this.scanOptionalArg(param.type);args.push(arg)}else if(param.type.endsWith("*")){explicitGroup=param.type.slice(0,-1)}else{const arg=this.scanArg(param.type);if(arg&&arg.length===1&&arg[0].type==="placeholder"&&param.placeholder){arg[0].value=param.placeholder}if(arg){args.push(arg)}else if(param.placeholder){const placeholder=new MathAtom$2(this.parseMode,"placeholder",param.placeholder);placeholder.captureSelection=true;args.push([placeholder])}else{args.push(this.placeholder())}if(param.type!=="math"&&typeof arg==="string"){argString+=arg}}}}if(info&&!info.infix){let style=undefined;if(info.parse){const attributes=info.parse("\\"+token.value,args);if(!attributes.type){const savedMode=this.parseMode;if(attributes.mode){this.parseMode=attributes.mode;delete attributes.mode}if(explicitGroup){const saveStyle=this.style;this.style={...this.style,...attributes};result=this.scanArg(explicitGroup);this.style=saveStyle}else{this.style={...this.style,...attributes}}this.parseMode=savedMode}else{result=new MathAtom$2(this.parseMode,info.type,explicitGroup?this.scanArg(explicitGroup):null);style={...this.style,...attributes}}}else{style={...this.style};if(info.baseFontFamily)style.baseFontFamily=info.baseFontFamily;result=new MathAtom$2(this.parseMode,info.type||"mop",info.value||token.value);if(info.skipBoundary){result.skipBoundary=true}}if(result&&!/^(llap|rlap|class|cssId)$/.test(token.value)){result.latex="\\"+token.value;if(argString){result.latex+="{"+argString+"}"}if(result.isFunction&&this.smartFence){const smartFence=this.scanSmartFence();if(smartFence){result=[result,smartFence]}}}if(result&&style){result.applyStyle(style)}}if(!info){result=new MathAtom$2(this.parseMode,"error","\\"+token.value);result.latex="\\"+token.value}}}}else if(token.type==="literal"){const info=Definitions.getInfo(token.value,this.parseMode,this.macros);if(info){const style={...this.style};if(info.baseFontFamily)style.baseFontFamily=info.baseFontFamily;result=new MathAtom$2(this.parseMode,info.type,info.value||token.value,style);if(info.isFunction){result.isFunction=true}}else{result=new MathAtom$2(this.parseMode,this.parseMode==="math"?"mord":"",token.value,this.style)}result.latex=Definitions.matchCodepoint(this.parseMode,token.value.codePointAt(0));if(info&&info.isFunction&&this.smartFence){const smartFence=this.scanSmartFence();if(smartFence){result=[result,smartFence]}}}else if(token.type==="#"){if(token.value==="?"){result=this.placeholder()}else if(this.args){result=this.args[token.value]||null;if(Array.isArray(result)&&result.length===1){result=result[0]}else if(Array.isArray(result)){const group=new MathAtom$2(this.parseMode,"group");group.body=result;result=group}else{result=this.placeholder()}}}else{console.warn('Unexpected token type "'+token.type+'", value ="'+token.value+'"')}return result}scanMacro(macro){if(!this.macros||!this.macros[macro])return null;const args={};let def;let argCount=0;if(typeof this.macros[macro]==="string"){def=this.macros[macro];if(/(^|[^\\])#1/.test(def))argCount=1;if(/(^|[^\\])#2/.test(def))argCount=2;if(/(^|[^\\])#3/.test(def))argCount=3;if(/(^|[^\\])#4/.test(def))argCount=4;if(/(^|[^\\])#5/.test(def))argCount=5;if(/(^|[^\\])#6/.test(def))argCount=6;if(/(^|[^\\])#7/.test(def))argCount=7;if(/(^|[^\\])#8/.test(def))argCount=8;if(/(^|[^\\])#9/.test(def))argCount=9}else{def=this.macros[macro].def;argCount=this.macros[macro].args||0}for(let i=1;i<=argCount;i++){args[i]=this.scanArg()}if(this.args&&typeof this.args["?"]==="string"){args["?"]=this.args["?"]}const atom=new MathAtom$2(this.parseMode,"group",parseTokens(Lexer$1.tokenize(def),this.parseMode,args,this.macros));atom.captureSelection=true;atom.latex="\\"+macro;let argString="";for(let i=1;i<=argCount;i++){argString+="{";if(Array.isArray(args[i])){for(let j=0;j<args[i].length;j++){argString+=args[i][j].latex}}argString+="}"}atom.latex+=argString?argString:"";return atom}parseAtom(){let result=this.scanEnvironment()||this.scanModeShift()||this.scanModeSet()||this.scanGroup()||this.scanLeftRight();if(!result&&(this.parseSupSub()||this.parseLimits()))return true;if(!result)result=this.scanToken();if(Array.isArray(result)){this.mathList=this.mathList.concat(result)}else if(result){this.mathList.push(result)}return result!==null}}function parseTokens(tokens,parseMode,args,macros,smartFence){let mathlist=[];const parser=new Parser(tokens,args,macros);parser.parseMode=parseMode||"math";if(smartFence)parser.smartFence=true;while(!parser.end()){mathlist=mathlist.concat(parser.scanImplicitGroup())}return mathlist}var ParserModule={Parser:Parser,parseTokens:parseTokens};function pathToString(path,extent){let result="";for(const segment of path){result+=segment.relation+":"+segment.offset+"/"}if(extent){result+="#"+extent}return result}function pathFromString(string){const result={path:[],extent:0};const components=string.split("#");if(components.length>1){result.extent=parseInt(components[1])}const segments=components[0].split("/");for(const segment of segments){const m2=segment.match(/([^:]*):(.*)/);if(m2){result.path.push({relation:m2[1],offset:parseInt(m2[2])})}}return result}function pathCommonAncestor(p,q){const result=[];const maxIndex=Math.min(p.length-1,q.length-1);let i=0;while(i<=maxIndex&&p[i].relation===q[i].relation&&p[i].offset===q[i].offset){result.push(p[i]);i+=1}return result}function pathDistance(p,q){let result=0;let i=-1;let done=false;while(!done){i+=1;done=i>=p.length||i>=q.length;done=done||!(p[i].relation===q[i].relation&&p[i].offset===q[i].offset)}if(i===p.length&&i===q.length){result=0}else if(i+1===p.length&&i+1===q.length&&p[i].relation===q[i].relation){result=1}else{result=2}return result}function clone(path){return pathFromString(pathToString(path)).path}var MathPath={pathFromString:pathFromString,pathToString:pathToString,pathDistance:pathDistance,pathCommonAncestor:pathCommonAncestor,clone:clone};const KEYBOARD_SHORTCUTS={Left:"moveToPreviousChar",Right:"moveToNextChar",Up:"moveUp",Down:"moveDown","Shift-Left":"extendToPreviousChar","Shift-Right":"extendToNextChar","Shift-Up":"extendUp","Shift-Down":"extendDown",Backspace:"deletePreviousChar","Alt-Del":"deletePreviousChar",Del:"deleteNextChar","Alt-Backspace":"deleteNextChar","Alt-Left":"moveToPreviousWord","Alt-Right":"moveToNextWord","Alt-Shift-Left":"extendToPreviousWord","Alt-Shift-Right":"extendToNextWord","Ctrl-Left":"moveToGroupStart","Ctrl-Right":"moveToGroupEnd","Ctrl-Shift-Left":"extendToGroupStart","Ctrl-Shift-Right":"extendToGroupEnd","math:Spacebar":"moveAfterParent","math:Shift-Spacebar":"moveBeforeParent",Home:"moveToMathFieldStart","mac:Meta-Left":"moveToMathFieldStart","Shift-Home":"extendToMathFieldStart","mac:Meta-Shift-Left":"extendToMathFieldStart",End:"moveToMathFieldEnd","mac:Meta-Right":"moveToMathFieldEnd","Shift-End":"extendToMathFieldEnd","mac:Meta-Shift-Right":"extendToMathFieldEnd",PageUp:"moveToGroupStart",PageDown:"moveToGroupEnd","math:Tab":"moveToNextPlaceholder","math:F8":"moveToNextPlaceholder","math:Shift-Tab":"moveToPreviousPlaceholder","math:Shift-F8":"moveToPreviousPlaceholder","text:Tab":"moveToNextPlaceholder","text:F8":"moveToNextPlaceholder","text:Shift-Tab":"moveToPreviousPlaceholder","text:Shift-F8":"moveToPreviousPlaceholder","math:Esc":["switch-mode","command"],"math:Backslash":["switch-mode","command"],"math:IntlBackslash":["switch-mode","command"],"math:Alt-Equal":["apply-style",{mode:"text"}],"text:Alt-Equal":["apply-style",{mode:"math"}],"command:Esc":["complete",{discard:true}],"command:Tab":["complete",{acceptSuggestion:true}],"command:Return":"complete","command:Enter":"complete","command:Shift-Esc":["complete",{discard:true}],"command:Down":"nextSuggestion","ios:command:Tab":"nextSuggestion","command:Up":"previousSuggestion","!mac:Ctrl-KeyA":"selectAll","mac:Meta-KeyA":"selectAll",Cut:"cut",Copy:"copy",Paste:"paste",Clear:"delete","!mac:Ctrl-KeyZ":"undo","mac:Meta-KeyZ":"undo",Undo:"undo","!mac:Ctrl-KeyY":"redo","mac:Meta-Shift-KeyY":"redo","!mac:Ctrl-Shift-KeyZ":"redo","mac:Meta-Shift-KeyZ":"redo",Redo:"redo",EraseEof:"deleteToGroupEnd","mac:Ctrl-KeyB":"moveToPreviousChar","mac:Ctrl-KeyF":"moveToNextChar","mac:Ctrl-KeyP":"moveUp","mac:Ctrl-KeyN":"moveDown","mac:Ctrl-KeyA":"moveToMathFieldStart","mac:Ctrl-KeyE":"moveToMathFieldEnd","mac:Ctrl-Shift-KeyB":"extendToPreviousChar","mac:Ctrl-Shift-KeyF":"extendToNextChar","mac:Ctrl-Shift-KeyP":"extendUp","mac:Ctrl-Shift-KeyN":"extendDown","mac:Ctrl-Shift-KeyA":"extendToMathFieldStart","mac:Ctrl-Shift-KeyE":"extendToMathFieldEnd","mac:Ctrl-Alt-KeyB":"moveToPreviousWord","mac:Ctrl-Alt-KeyF":"moveToNextWord","mac:Ctrl-Shift-Alt-KeyB":"extendToPreviousWord","mac:Ctrl-Shift-Alt-KeyF":"extendToNextWord","mac:Ctrl-KeyH":"deletePreviousChar","mac:Ctrl-KeyD":"deleteNextChar","mac:Ctrl-KeyL":"scrollIntoView","mac:Ctrl-KeyT":"transpose","math:Shift-Quote":["switch-mode","text","","“"],"text:Shift-Quote":["switch-mode","math","”",""],"math:Ctrl-Digit2":["insert","\\sqrt{#0}"],"math:Ctrl-Digit5":"moveToOpposite","math:Ctrl-Digit6":"moveToSuperscript","math:Ctrl-Minus":"moveToSubscript","math:Alt-BracketLeft":["insert","\\left\\lbrack #0 \\right\\rbrack"],"math:Alt-Shift-BracketLeft":["insert","\\left\\lbrace #0 \\right\\rbrace"],"math:Return":"addRowAfter","math:Enter":"addRowAfter","math:Ctrl-Comma":"addColumnAfter","math:Alt-KeyQ":["insert","\\theta"],"math:Alt-KeyP":["insert","\\pi"],"math:Alt-KeyV":["insert","\\sqrt{#0}"],"math:Alt-KeyW":["insert","\\sum_{i=#?}^{#?}"],"math:Alt-KeyB":["insert","\\int_{#?}^{#?}"],"math:Alt-KeyU":["insert","\\cup"],"math:Alt-KeyN":["insert","\\cap"],"math:Alt-KeyO":["insert","\\emptyset"],"math:Alt-KeyD":["insert","\\differentialD"],"math:Alt-Shift-KeyO":["insert","\\varnothing"],"math:Alt-Shift-KeyD":["insert","\\partial"],"math:Alt-Shift-KeyP":["insert","\\prod_{i=#?}^{#?}"],"math:Alt-Shift-KeyU":["insert","\\bigcup"],"math:Alt-Shift-KeyN":["insert","\\bigcap"],"math:Alt-Shift-KeyA":["insert","\\forall"],"math:Alt-Shift-KeyE":["insert","\\exists"],"math:Alt-Digit5":["insert","\\infty"],"math:Alt-Digit6":["insert","\\wedge"],"math:Alt-Shift-Digit6":["insert","\\vee"],"math:Alt-Digit9":["insert","("],"math:Alt-Digit0":["insert",")"],"math:Alt-Shift-Backslash":["insert","|"],"math:Alt-Backslash":["insert","\\backslash"],"math:Slash":["insert","\\frac{#@}{#?}"],"math:Alt-Slash":["insert","\\frac{#?}{#@}"],"math:NumpadDivide":["insert","\\frac{#@}{#?}"],"math:Alt-NumpadDivide":["insert","\\frac{#?}{#@}"],"math:Shift-Backquote":["insert","\\~"],"math:Alt-Shift-Slash":["insert","\\/"],"Alt-Shift-KeyK":"toggleKeystrokeCaption","Alt-Space":"toggleVirtualKeyboard","mac:Ctrl-Meta-Up":["speak","parent",{withHighlighting:false}],"!mac:Ctrl-Alt-Up":["speak","parent",{withHighlighting:false}],"mac:Ctrl-Meta-Down":["speak","all",{withHighlighting:false}],"!mac:Ctrl-Alt-Down":["speak","all",{withHighlighting:false}],"mac:Ctrl-Meta-Left":["speak","left",{withHighlighting:false}],"!mac:Ctrl-Alt-Left":["speak","left",{withHighlighting:false}],"mac:Ctrl-Meta-Right":["speak","right",{withHighlighting:false}],"!mac:Ctrl-Alt-Right":["speak","right",{withHighlighting:false}],"!mac:Ctrl-Alt-Period":["speak","selection",{withHighlighting:false}],"mac:Ctrl-Meta-Period":["speak","selection",{withHighlighting:false}],"mac:Ctrl-Meta-Shift-Up":["speak","parent",{withHighlighting:true}],"!mac:Ctrl-Alt-Shift-Up":["speak","parent",{withHighlighting:true}],"mac:Ctrl-Meta-Shift-Down":["speak","all",{withHighlighting:true}],"!mac:Ctrl-Alt-Shift-Down":["speak","all",{withHighlighting:true}],"mac:Ctrl-Meta-Shift-Left":["speak","left",{withHighlighting:true}],"!mac:Ctrl-Alt-Shift-Left":["speak","left",{withHighlighting:true}],"mac:Ctrl-Meta-Shift-Right":["speak","right",{withHighlighting:true}],"!mac:Ctrl-Alt-Shift-Right":["speak","right",{withHighlighting:true}],"!mac:Ctrl-Alt-Shift-Period":["speak","selection",{withHighlighting:true}],"mac:Ctrl-Meta-Shift-Period":["speak","selection",{withHighlighting:true}]};const REVERSE_KEYBOARD_SHORTCUTS={"\\theta":"Alt-KeyQ","\\sqrt":["Alt-KeyV","Ctrl-Digit2"],"\\pi":"Alt-KeyP","\\prod":"Alt-Shift-KeyP","\\sum":"Alt-KeyW","\\int":"Alt-KeyB","\\cup":"Alt-KeyU","\\cap":"Alt-KeyN","\\bigcup":"Alt-Shift-KeyU","\\bigcap":"Alt-Shift-KeyN","\\forall":"Alt-Shift-KeyA","\\exists":"Alt-Shift-KeyE","\\infty":"Alt-Digit5","\\wedge":"Alt-Digit5","\\vee":"Alt-Shift-Digit6","\\differentialD":"Alt-keyD","\\partial":"Alt-Shift-KeyD","\\frac":"Slash","\\emptyset":"Alt-KeyO","\\varnothing":"Alt-Shift-KeyO","\\~":"~"};const INLINE_SHORTCUTS={"''":{mode:"math",value:"^{\\doubleprime}"},alpha:"\\alpha",delta:"\\delta",Delta:"\\Delta",pi:{mode:"math",value:"\\pi"},"pi ":{mode:"text",value:"\\pi "},Pi:{mode:"math",value:"\\Pi"},theta:"\\theta",Theta:"\\Theta",ii:{after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\imaginaryI"},jj:{after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\imaginaryJ"},ee:{mode:"math",after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\exponentialE"},nabla:{mode:"math",value:"\\nabla"},grad:{mode:"math",value:"\\nabla"},del:{mode:"math",value:"\\partial"},"∞":"\\infty",oo:{mode:"math",after:"nothing+digit+frac+surd+binop+relop+punct+array+openfence+closefence+space",value:"\\infty"},"∑":{mode:"math",value:"\\sum"},sum:{mode:"math",value:"\\sum_{#?}^{#?}"},prod:{mode:"math",value:"\\prod_{#?}^{#?}"},sqrt:{mode:"math",value:"\\sqrt"},"∆":{mode:"math",value:"\\differentialD"},"∂":{mode:"math",value:"\\differentialD"},sin:{mode:"math",value:"\\sin"},cos:{mode:"math",value:"\\cos"},tan:{mode:"math",value:"\\tan"},tanh:{mode:"math",value:"\\tanh"},log:{mode:"math",value:"\\log"},ln:{mode:"math",value:"\\ln"},exp:{mode:"math",value:"\\exp"},lim:{mode:"math",value:"\\lim_{#?}"},dx:"\\differentialD x",dy:"\\differentialD y",dt:"\\differentialD t",AA:{mode:"math",value:"\\forall"},EE:{mode:"math",value:"\\exists"},"!EE":{mode:"math",value:"\\nexists"},"&&":{mode:"math",value:"\\land"},xin:{mode:"math",after:"nothing+text+relop+punct+openfence+space",value:"x \\in"},in:{mode:"math",after:"nothing+letter+closefence",value:"\\in"},"!in":{mode:"math",value:"\\notin"},NN:"\\N",ZZ:"\\Z",QQ:"\\Q",RR:"\\R",CC:"\\C",PP:"\\P",xx:"\\times","+-":"\\pm","!=":"\\ne",">=":"\\ge","<=":"\\le","<<":"\\ll",">>":"\\gg","~~":"\\approx","≈":"\\approx","?=":"\\questeq","÷":"\\div","¬":"\\neg",":=":"\\coloneq","::":"\\Colon","(:":"\\langle",":)":"\\rangle",beta:"\\beta",chi:"\\chi",epsilon:"\\epsilon",varepsilon:"\\varepsilon",eta:{mode:"math",after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\eta"},"eta ":{mode:"text",after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\eta "},gamma:"\\gamma",Gamma:"\\Gamma",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",Lambda:"\\Lambda",mu:{mode:"math",after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\mu"},"mu ":{mode:"text",after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\mu "},nu:{mode:"math",after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\nu"},"nu ":{mode:"text",after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\nu "},"µ":"\\mu",phi:{after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\phi"},Phi:{after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\Phi"},varphi:"\\varphi",psi:{after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\psi"},Psi:{after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\Psi"},rho:{after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\rho"},sigma:"\\sigma",Sigma:"\\Sigma",tau:{after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\tau"},vartheta:"\\vartheta",upsilon:"\\upsilon",xi:{after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\xi"},Xi:{after:"nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text",value:"\\Xi"},zeta:"\\zeta",omega:"\\omega",Omega:"\\Omega","Ω":"\\omega",forall:"\\forall",exists:{mode:"math",value:"\\exists"},"!exists":{mode:"math",value:"\\nexists"},":.":{mode:"math",value:"\\therefore"},liminf:"\\operatorname*{lim~inf}_{#?}",limsup:"\\operatorname*{lim~sup}_{#?}",argmin:"\\operatorname*{arg~min}_{#?}",argmax:"\\operatorname*{arg~max}_{#?}",det:"\\det",mod:{mode:"math",value:"\\mod"},max:{mode:"math",value:"\\max"},min:{mode:"math",value:"\\min"},erf:"\\operatorname{erf}",erfc:"\\operatorname{erfc}",bessel:{mode:"math",value:"\\operatorname{bessel}"},mean:{mode:"math",value:"\\operatorname{mean}"},median:{mode:"math",value:"\\operatorname{median}"},fft:{mode:"math",value:"\\operatorname{fft}"},lcm:{mode:"math",value:"\\operatorname{lcm}"},gcd:{mode:"math",value:"\\operatorname{gcd}"},randomReal:"\\operatorname{randomReal}",randomInteger:"\\operatorname{randomInteger}",Re:{mode:"math",value:"\\operatorname{Re}"},Im:{mode:"math",value:"\\operatorname{Im}"},mm:{mode:"math",after:"nothing+digit",value:"\\operatorname{mm}"},cm:{mode:"math",after:"nothing+digit",value:"\\operatorname{cm}"},km:{mode:"math",after:"nothing+digit",value:"\\operatorname{km}"},kg:{mode:"math",after:"nothing+digit",value:"\\operatorname{kg}"},"...":"\\ldots","+...":"+\\cdots","-...":"-\\cdots","->...":"\\to\\cdots","->":"\\to","|->":"\\mapsto","--\x3e":"\\longrightarrow","<--":"\\longleftarrow","=>":"\\Rightarrow","==>":"\\Longrightarrow","<=>":"\\Leftrightarrow","<->":"\\leftrightarrow","(.)":"\\odot","(+)":"\\oplus","(/)":"\\oslash","(*)":"\\otimes","(-)":"\\ominus","||":"\\Vert","{":"\\{","}":"\\}","*":"\\cdot"};function startsWithString(s,config){const result=[];for(let i=0;i<=s.length-1;i++){const s2=s.substring(i);const skipDefaultShortcuts=config&&config.overrideDefaultInlineShortcuts;if(!skipDefaultShortcuts){Object.keys(INLINE_SHORTCUTS).forEach(key=>{if(key.startsWith(s2)&&!result.includes(key)){result.push(key)}})}const customInlineShortcuts=config&&config.inlineShortcuts?config.inlineShortcuts:null;if(customInlineShortcuts){Object.keys(customInlineShortcuts).forEach(key=>{if(key.startsWith(s2)){result.push(key)}})}}return result}function validateShortcut(mode,siblings,shortcut){if(!shortcut)return shortcut;if(typeof shortcut==="string")return shortcut;if(typeof shortcut.mode==="string"&&shortcut.mode!==mode)return null;if(!siblings)return shortcut?shortcut.value:undefined;let nothing=false;let letter=false;let digit=false;let isFunction=false;let frac=false;let surd=false;let binop=false;let relop=false;let punct=false;let array=false;let openfence=false;let closefence=false;let text=false;let space=false;let sibling=siblings[siblings.length-1];let index=siblings.length-1;while(sibling&&/msubsup|placeholder/.test(sibling.type)){index-=1;sibling=siblings[index]}nothing=!sibling||sibling.type==="first";if(sibling){text=sibling.mode==="text";letter=!text&&sibling.type==="mord"&&Definitions.LETTER.test(sibling.body);digit=!text&&sibling.type==="mord"&&/[0-9]+$/.test(sibling.body);isFunction=!text&&sibling.isFunction;frac=sibling.type==="genfrac";surd=sibling.type==="surd";binop=sibling.type==="mbin";relop=sibling.type==="mrel";punct=sibling.type==="mpunct"||sibling.type==="minner";array=sibling.array;openfence=sibling.type==="mopen";closefence=sibling.type==="mclose"||sibling.type==="leftright";space=sibling.type==="space"}if(typeof shortcut.after!=="undefined"){if(/nothing/.test(shortcut.after)&&nothing||/letter/.test(shortcut.after)&&letter||/digit/.test(shortcut.after)&&digit||/function/.test(shortcut.after)&&isFunction||/frac/.test(shortcut.after)&&frac||/surd/.test(shortcut.after)&&surd||/binop/.test(shortcut.after)&&binop||/relop/.test(shortcut.after)&&relop||/punct/.test(shortcut.after)&&punct||/array/.test(shortcut.after)&&array||/openfence/.test(shortcut.after)&&openfence||/closefence/.test(shortcut.after)&&closefence||/text/.test(shortcut.after)&&text||/space/.test(shortcut.after)&&space){return shortcut.value}return null}return shortcut.value}function forString(mode,context,s,config){let result="";const skipDefaultShortcuts=config&&config.overrideDefaultInlineShortcuts;if(!skipDefaultShortcuts){result=validateShortcut(mode,context,INLINE_SHORTCUTS[s])}const customInlineShortcuts=config&&config.inlineShortcuts?config.inlineShortcuts:null;let customResult;if(customInlineShortcuts){customResult=validateShortcut(mode,context,customInlineShortcuts[s])}return customResult||result}function platform(p){let result="other";if(navigator&&navigator.platform&&navigator.userAgent){if(/^(mac)/i.test(navigator.platform)){result="mac"}else if(/^(win)/i.test(navigator.platform)){result="win"}else if(/(android)/i.test(navigator.userAgent)){result="android"}else if(/(iphone)/i.test(navigator.userAgent)||/(ipod)/i.test(navigator.userAgent)||/(ipad)/i.test(navigator.userAgent)){result="ios"}else if(/\bCrOS\b/i.test(navigator.userAgent)){result="chromeos"}}return result===p?p:"!"+p}function selectorForKeystroke(mode,keystroke){for(const c of[platform("mac")+":"+mode+":"+keystroke,platform("win")+":"+mode+":"+keystroke,platform("ios")+":"+mode+":"+keystroke,platform("android")+":"+mode+":"+keystroke,platform("chromeos")+":"+mode+":"+keystroke,platform("other")+":"+mode+":"+keystroke,platform("mac")+":"+keystroke,platform("win")+":"+keystroke,platform("ios")+":"+keystroke,platform("android")+":"+keystroke,platform("chromeos")+":"+keystroke,mode+":"+keystroke,keystroke]){if(KEYBOARD_SHORTCUTS[c]){return KEYBOARD_SHORTCUTS[c]}}return""}function commandToString(command){let result=command;if(Array.isArray(result)&&result.length>0){result=result[0]+"("+result.slice(1).join("")+")"}return result}function forCommand(command){let result=[];if(typeof command==="string"){const candidate=REVERSE_KEYBOARD_SHORTCUTS[command];if(Array.isArray(candidate)){result=candidate.slice()}else if(candidate){result.push(candidate)}}command=commandToString(command);const regex=new RegExp("^"+command.replace("\\","\\\\").replace("|","\\|").replace("*","\\*").replace("$","\\$").replace("^","\\^")+"([^*a-zA-Z]|$)");Object.keys(KEYBOARD_SHORTCUTS).forEach(shortcut=>{if(regex.test(commandToString(KEYBOARD_SHORTCUTS[shortcut]))){const m=shortcut.match(/:([^:]*)$/);if(m)result.push(m[1])}});return stringify(result)}function stringify(shortcuts,join){let result="";if(!Array.isArray(shortcuts))shortcuts=[shortcuts];for(const shortcut of shortcuts){let keyboardShortcut;const platMatch=shortcut.match(/(^[^:]*):/);const plat=platMatch?platMatch[1]:"";if(plat===platform("mac")||plat===platform("win")||plat===platform("ios")||plat===platform("android")||plat===platform("chromeos")||plat===platform("other")){const m=shortcut.match(/:([^:]*)$/);keyboardShortcut=m?m[1]:shortcut}else if(!["mac","!mac","win","!win","ios","!ios","android","!android","chromeos","!chromeos","other","!other"].includes(plat)){const m=shortcut.match(/:([^:]*)$/);keyboardShortcut=m?m[1]:shortcut}if(keyboardShortcut){const useSymbol=platform("mac")==="mac"||platform("ios")==="ios";const modifiers=keyboardShortcut.length>1?keyboardShortcut.split("-"):[keyboardShortcut];let shortcutString="";for(const modifier of modifiers){if(!useSymbol&&shortcutString.length>0){shortcutString+='<span class="ML__shortcut-join">+</span>'}if(modifier.substr(0,3)==="Key"){shortcutString+=modifier.substr(3,1)}else if(modifier.substr(0,5)==="Digit"){shortcutString+=modifier.substr(5,1)}else{shortcutString+={Meta:useSymbol?"⌘":"command",Shift:useSymbol?"⇧":"shift",Alt:useSymbol?"⌥":"alt",Ctrl:useSymbol?"⌃":"control","\n":useSymbol?"⏎":"return",Return:useSymbol?"⏎":"return",Enter:useSymbol?"⌤":"enter",Tab:useSymbol?"⇥":"tab",Esc:"esc",Backspace:useSymbol?"⌫":"backspace",Del:useSymbol?"⌦":"del",PageUp:useSymbol?"⇞":"page up",PageDown:useSymbol?"⇟":"page down",Home:useSymbol?"⤒":"home",End:useSymbol?"⤓":"end",Spacebar:"space",Semicolon:";",Period:".",Comma:",",Minus:"-",Equal:"=",Quote:"'",BracketLeft:"[",BracketRight:"]",Backslash:"\\",IntlBackslash:"\\",Backquote:"`",Slash:"/",NumpadMultiply:"* &#128290;",NumpadDivide:"/ &#128290;",NumpadSubtract:"- &#128290;",NumpadAdd:"+ &#128290;",NumpadDecimal:". &#128290;",NumpadComma:", &#128290;",Help:"help",Left:"⇠",Up:"⇡",Right:"⇢",Down:"⇣"}[modifier]||modifier}}if(result.length>0){result+=join||" or "}result+=shortcutString}}return result}var Shortcuts={KEYBOARD_SHORTCUTS:KEYBOARD_SHORTCUTS,INLINE_SHORTCUTS:INLINE_SHORTCUTS,stringify:stringify,startsWithString:startsWithString,forString:forString,selectorForKeystroke:selectorForKeystroke,forCommand:forCommand};function isEmptyMathlist(mathlist){return mathlist.length===0||mathlist.length===1&&mathlist[0].type==="first"}function EditableMathlist(config,target){this.root=MathAtom$1.makeRoot();this.path=[{relation:"body",offset:0}];this.extent=0;this.config=config?{...config}:{};this.target=target;this.suppressChangeNotifications=false}function clone$1(mathlist){const result=Object.assign(new EditableMathlist(mathlist.config,mathlist.target),mathlist);result.path=MathPath.clone(mathlist.path);return result}EditableMathlist.prototype._announce=function(command,mathlist,atoms){if(typeof this.config.onAnnounce==="function"){this.config.onAnnounce(this.target,command,mathlist,atoms)}};EditableMathlist.prototype.filter=function(cb,dir){dir=dir<0?-1:+1;const result=[];const iter=new EditableMathlist;iter.path=MathPath.clone(this.path);iter.extent=this.extent;iter.root=this.root;if(dir>=0){iter.collapseForward()}else{iter.collapseBackward();iter.move(1)}const initialAnchor=iter.anchor();do{if(cb.bind(iter)(iter.path,iter.anchor())){result.push(iter.toString())}if(dir>=0){iter.next({iterateAll:true})}else{iter.previous({iterateAll:true})}}while(initialAnchor!==iter.anchor());return result};EditableMathlist.prototype.forEach=function(cb){this.root.forEach(cb)};EditableMathlist.prototype.forEachSelected=function(cb,options){options=options||{};options.recursive=typeof options.recursive!=="undefined"?options.recursive:false;const siblings=this.siblings();const firstOffset=this.startOffset()+1;const lastOffset=this.endOffset()+1;if(options.recursive){for(let i=firstOffset;i<lastOffset;i++){if(siblings[i]&&siblings[i].type!=="first"){siblings[i].forEach(cb)}}}else{for(let i=firstOffset;i<lastOffset;i++){if(siblings[i]&&siblings[i].type!=="first"){cb(siblings[i])}}}};EditableMathlist.prototype.toString=function(){return MathPath.pathToString(this.path,this.extent)};EditableMathlist.prototype.adjustPlaceholder=function(){const siblings=this.siblings();if(siblings&&siblings.length<=1){let placeholder;const relation=this.relation();if(relation==="numer"){placeholder="numerator"}else if(relation==="denom"){placeholder="denominator"}else if(this.parent().type==="surd"&&relation==="body"){placeholder="radicand"}else if(this.parent().type==="overunder"&&relation==="body"){placeholder="base"}else if(relation==="underscript"||relation==="overscript"){placeholder="annotation"}if(placeholder){const placeholderAtom=[new MathAtom$1.MathAtom("math","placeholder","⬚",this.anchorStyle())];Array.prototype.splice.apply(siblings,[1,0].concat(placeholderAtom))}}};EditableMathlist.prototype.selectionWillChange=function(){if(typeof this.config.onSelectionWillChange==="function"&&!this.suppressChangeNotifications){this.config.onSelectionWillChange(this.target)}};EditableMathlist.prototype.selectionDidChange=function(){if(typeof this.config.onSelectionDidChange==="function"&&!this.suppressChangeNotifications){this.config.onSelectionDidChange(this.target)}};EditableMathlist.prototype.contentWillChange=function(){if(typeof this.config.onContentWillChange==="function"&&!this.suppressChangeNotifications){this.config.onContentWillChange(this.target)}};EditableMathlist.prototype.contentDidChange=function(){if(typeof this.config.onContentDidChange==="function"&&!this.suppressChangeNotifications){this.config.onContentDidChange(this.target)}};EditableMathlist.prototype.setPath=function(selection,extent){if(typeof selection==="string"){selection=MathPath.pathFromString(selection)}else if(Array.isArray(selection)){const newPath=MathPath.clone(selection);const oldPath=this.path;this.path=newPath;if(extent===0&&this.anchor().type==="placeholder"){newPath[newPath.length-1].offset=0;extent=1}selection={path:newPath,extent:extent||0};this.path=oldPath}const pathChanged=MathPath.pathDistance(this.path,selection.path)!==0;const extentChanged=selection.extent!==this.extent;if(pathChanged||extentChanged){if(pathChanged){this.adjustPlaceholder()}this.selectionWillChange();this.path=MathPath.clone(selection.path);if(this.siblings().length<this.anchorOffset()){console.warn("Invalid selection: "+this.toString()+' in "'+this.root.toLatex()+'"');this.path=[{relation:"body",offset:0}];this.extent=0}else{this.setExtent(selection.extent)}this.selectionDidChange()}return pathChanged||extentChanged};EditableMathlist.prototype.wordBoundary=function(path,dir){dir=dir<0?-1:+1;const iter=new EditableMathlist;iter.path=MathPath.clone(path);iter.root=this.root;let i=0;while(iter.sibling(i)&&iter.sibling(i).mode==="text"&&Definitions.LETTER_AND_DIGITS.test(iter.sibling(i).body)){i+=dir}if(!iter.sibling(i))i-=dir;iter.path[iter.path.length-1].offset+=i;return iter.path};EditableMathlist.prototype.wordBoundaryOffset=function(offset,dir){dir=dir<0?-1:+1;const siblings=this.siblings();if(!siblings[offset])return offset;if(siblings[offset].mode!=="text")return offset;let result;if(Definitions.LETTER_AND_DIGITS.test(siblings[offset].body)){let i=offset;let match;do{match=siblings[i].mode==="text"&&Definitions.LETTER_AND_DIGITS.test(siblings[i].body);i+=dir}while(siblings[i]&&match);result=siblings[i]?i-2*dir:i-dir}else if(/\s/.test(siblings[offset].body)){let i=offset;while(siblings[i]&&siblings[i].mode==="text"&&/\s/.test(siblings[i].body)){i+=dir}if(!siblings[i]){result=i-dir}else{let match=true;do{match=siblings[i].mode==="text"&&!/\s/.test(siblings[i].body);i+=dir}while(siblings[i]&&match);result=siblings[i]?i-2*dir:i-dir}}else{let i=offset;while(siblings[i]&&siblings[i].mode==="text"&&!/\s/.test(siblings[i].body)){i+=dir}result=siblings[i]?i:i-dir;let match=true;while(siblings[i]&&match){match=siblings[i].mode==="text"&&/\s/.test(siblings[i].body);if(match)result=i;i+=dir}result=siblings[i]?i-2*dir:i-dir}return result-(dir>0?0:1)};EditableMathlist.prototype.setRange=function(from,to,options){options=options||{};const distance=MathPath.pathDistance(from,to);if(distance===0){if(options.extendToWordBoundary){from=this.wordBoundary(from,-1);to=this.wordBoundary(to,+1);return this.setRange(from,to)}return this.setPath(MathPath.clone(from),0)}if(distance===1){const extent=to[to.length-1].offset-from[from.length-1].offset;if(options.extendToWordBoundary){from=this.wordBoundary(from,extent<0?+1:-1);to=this.wordBoundary(to,extent<0?-1:+1);return this.setRange(from,to)}return this.setPath(MathPath.clone(from),extent)}let commonAncestor=MathPath.pathCommonAncestor(from,to);const ancestorDepth=commonAncestor.length;if(from.length===ancestorDepth||to.length===ancestorDepth||from[ancestorDepth].relation!==to[ancestorDepth].relation){return this.setPath(commonAncestor,-1)}commonAncestor.push(from[ancestorDepth]);commonAncestor=MathPath.clone(commonAncestor);let extent=to[ancestorDepth].offset-from[ancestorDepth].offset+1;if(extent<=0){if(to.length>ancestorDepth+1){commonAncestor[ancestorDepth].relation=to[ancestorDepth].relation;commonAncestor[ancestorDepth].offset=to[ancestorDepth].offset;commonAncestor[commonAncestor.length-1].offset-=1;extent=-extent+2}else{commonAncestor[ancestorDepth].relation=to[ancestorDepth].relation;commonAncestor[ancestorDepth].offset=to[ancestorDepth].offset;extent=-extent+1}}else if(to.length<=from.length){commonAncestor[commonAncestor.length-1].offset-=1}else if(to.length>from.length){commonAncestor[ancestorDepth].offset-=1}return this.setPath(commonAncestor,extent)};function arrayIndex(array,rowCol){let result=0;for(let i=0;i<rowCol.row;i++){for(let j=0;j<array[i].length;j++){result+=1}}result+=rowCol.col;return result}function arrayColRow(array,index){if(typeof index==="string"){const m=index.match(/cell([0-9]*)$/);if(m)index=parseInt(m[1])}const result={row:0,col:0};while(index>0){result.col+=1;if(!array[result.row]||result.col>=array[result.row].length){result.col=0;result.row+=1}index-=1}return result}function arrayCell(array,colrow){if(typeof colrow!=="object")colrow=arrayColRow(array,colrow);let result;if(Array.isArray(array[colrow.row])){result=array[colrow.row][colrow.col]||null}if(result&&(result.length===0||result[0].type!=="first")){result.unshift(makeFirstAtom())}return result}function arrayCellCount(array){let result=0;let numRows=0;let numCols=1;for(const row of array){numRows+=1;if(row.length>numCols)numCols=row.length}result=numRows*numCols;return result}function arrayJoinColumns(row,separator,style){if(!row)return[];if(!separator)separator=",";let result=[];let sep;for(let cell of row){if(cell&&cell.length>0&&cell[0].type==="first"){cell=cell.slice(1)}if(cell&&cell.length>0){if(sep){result.push(sep)}else{sep=new MathAtom$1.MathAtom("math","mpunct",separator,style)}result=result.concat(cell)}}return result}function arrayJoinRows(array,separators,style){if(!separators)separators=[";",","];let result=[];let sep;for(const row of array){if(sep){result.push(sep)}else{sep=new MathAtom$1.MathAtom("math","mpunct",separators[0],style)}result=result.concat(arrayJoinColumns(row,separators[1]))}return result}function arrayColumnCellCount(array,col){let result=0;const colRow={col:col,row:0};while(colRow.row<array.length){const cell=arrayCell(array,colRow);if(cell&&cell.length>0){let cellLen=cell.length;if(cell[0].type==="first")cellLen-=1;if(cellLen>0){result+=1}}colRow.row+=1}return result}function arrayRemoveColumn(array,col){let row=0;while(row<array.length){if(array[row][col]){array[row].splice(col,1)}row+=1}}function arrayRemoveRow(array,row){array.splice(row,1)}function arrayFirstCellByRow(array){const colRow={col:0,row:0};while(colRow.row<array.length&&!arrayCell(array,colRow)){colRow.row+=1}return arrayCell(array,colRow)?"cell"+arrayIndex(array,colRow):""}function arrayAdjustRow(array,colRow,dir){const result={...colRow};result.row+=dir;if(result.row<0){result.col+=dir;result.row=array.length-1;if(result.col<0)return null;while(result.row>=0&&!arrayCell(array,result)){result.row-=1}if(result.row<0)return null}else if(result.row>=array.length){result.col+=dir;result.row=0;while(result.row<array.length&&!arrayCell(array,result)){result.row+=1}if(result.row>array.length-1)return null}return result}EditableMathlist.prototype.ancestor=function(ancestor){if(ancestor>this.path.length)return null;let result=this.root;for(let i=0;i<this.path.length-ancestor;i++){const segment=this.path[i];if(result.array){result=arrayCell(result.array,segment.relation)[segment.offset]}else if(!result[segment.relation]){return null}else{if(result[segment.relation].length===0||result[segment.relation][0].type!=="first"){result[segment.relation].unshift(makeFirstAtom())}const offset=Math.min(segment.offset,result[segment.relation].length-1);result=result[segment.relation][offset]}}return result};EditableMathlist.prototype.anchor=function(){if(this.parent().array){return arrayCell(this.parent().array,this.relation())[this.anchorOffset()]}const siblings=this.siblings();return siblings[Math.min(siblings.length-1,this.anchorOffset())]};EditableMathlist.prototype.parent=function(){return this.ancestor(1)};EditableMathlist.prototype.relation=function(){return this.path.length>0?this.path[this.path.length-1].relation:""};EditableMathlist.prototype.anchorOffset=function(){return this.path.length>0?this.path[this.path.length-1].offset:0};EditableMathlist.prototype.focusOffset=function(){return this.path.length>0?this.path[this.path.length-1].offset+this.extent:0};EditableMathlist.prototype.startOffset=function(){return Math.min(this.focusOffset(),this.anchorOffset())};EditableMathlist.prototype.endOffset=function(){return Math.max(this.focusOffset(),this.anchorOffset())};EditableMathlist.prototype.insertFirstAtom=function(){this.siblings()};EditableMathlist.prototype.siblings=function(){if(this.path.length===0)return[];let siblings;if(this.parent().array){siblings=arrayCell(this.parent().array,this.relation())}else{siblings=this.parent()[this.relation()]||[];if(typeof siblings==="string")siblings=[]}if(siblings.length===0||siblings[0].type!=="first"){siblings.unshift(makeFirstAtom())}return siblings};EditableMathlist.prototype.sibling=function(offset){return this.siblings()[this.startOffset()+offset]};EditableMathlist.prototype.isCollapsed=function(){return this.extent===0};EditableMathlist.prototype.setExtent=function(extent){this.extent=extent};EditableMathlist.prototype.collapseForward=function(){if(this.extent===0)return false;this.setSelection(this.endOffset());return true};EditableMathlist.prototype.collapseBackward=function(){if(this.extent===0)return false;this.setSelection(this.startOffset());return true};function isNumber(atom){if(!atom)return false;return atom.type==="mord"&&/[0-9.]/.test(atom.body)||atom.type==="mpunct"&&atom.body===","}EditableMathlist.prototype.selectGroup_=function(){const siblings=this.siblings();if(this.anchorMode()==="text"){let start=this.startOffset();let end=this.endOffset();while(siblings[start]&&siblings[start].mode==="text"&&Definitions.LETTER_AND_DIGITS.test(siblings[start].body)){start-=1}while(siblings[end]&&siblings[end].mode==="text"&&Definitions.LETTER_AND_DIGITS.test(siblings[end].body)){end+=1}end-=1;if(start>=end){this.setSelection(this.endOffset()-1,1);return}this.setSelection(start,end-start)}else{if(this.sibling(0).type==="mord"&&/[0-9,.]/.test(this.sibling(0).body)){let start=this.startOffset();let end=this.endOffset();while(isNumber(siblings[start]))start-=1;while(isNumber(siblings[end]))end+=1;end-=1;this.setSelection(start,end-start)}else{this.setSelection(0,"end")}}};EditableMathlist.prototype.selectAll_=function(){this.path=[{relation:"body",offset:0}];this.setSelection(0,"end")};EditableMathlist.prototype.deleteAll_=function(){this.selectAll_();this.delete_()};function atomContains(atom,target){if(!atom)return false;if(Array.isArray(atom)){for(const child of atom){if(atomContains(child,target))return true}}else{if(atom===target)return true;if(["body","numer","denom","index","subscript","superscript","underscript","overscript"].some(function(value){return value===target||atomContains(atom[value],target)}))return true;if(atom.array){for(let i=arrayCellCount(atom.array);i>=0;i--){if(atomContains(arrayCell(atom.array,i),target)){return true}}}}return false}EditableMathlist.prototype.contains=function(atom){if(this.isCollapsed())return false;const siblings=this.siblings();const firstOffset=this.startOffset();const lastOffset=this.endOffset();for(let i=firstOffset;i<lastOffset;i++){if(atomContains(siblings[i],atom))return true}return false};EditableMathlist.prototype.getSelectedAtoms=function(){if(this.isCollapsed())return null;const result=[];const siblings=this.siblings();const firstOffset=this.startOffset()+1;const lastOffset=this.endOffset()+1;for(let i=firstOffset;i<lastOffset;i++){if(siblings[i]&&siblings[i].type!=="first")result.push(siblings[i])}return result};EditableMathlist.prototype.commandOffsets=function(){const siblings=this.siblings();if(siblings.length<=1)return null;let start=Math.min(this.endOffset(),siblings.length-1);if(siblings[start].type!=="command")return null;while(start>0&&siblings[start].type==="command")start-=1;let end=this.startOffset()+1;while(end<=siblings.length-1&&siblings[end].type==="command")end+=1;if(end>start){return{start:start+1,end:end}}return null};EditableMathlist.prototype.extractCommandStringAroundInsertionPoint=function(beforeInsertionPointOnly){let result="";const command=this.commandOffsets();if(command){const end=beforeInsertionPointOnly?this.anchorOffset()+1:command.end;const siblings=this.siblings();for(let i=command.start;i<end;i++){result+=siblings[i].body||""}}return result};EditableMathlist.prototype.decorateCommandStringAroundInsertionPoint=function(value){const command=this.commandOffsets();if(command){const siblings=this.siblings();for(let i=command.start;i<command.end;i++){siblings[i].error=value}}};EditableMathlist.prototype.commitCommandStringBeforeInsertionPoint=function(){const command=this.commandOffsets();if(command){const siblings=this.siblings();const anchorOffset=this.anchorOffset()+1;for(let i=command.start;i<anchorOffset;i++){if(siblings[i]){siblings[i].suggestion=false}}}};EditableMathlist.prototype.spliceCommandStringAroundInsertionPoint=function(mathlist){const command=this.commandOffsets();if(command){this.contentWillChange();if(!mathlist){this.siblings().splice(command.start,command.end-command.start);this.setSelection(command.start-1,0)}else{Array.prototype.splice.apply(this.siblings(),[command.start,command.end-command.start].concat(mathlist));let newPlaceholders=[];for(const atom of mathlist){newPlaceholders=newPlaceholders.concat(atom.filter(atom=>atom.type==="placeholder"))}this.setExtent(0);this.path[this.path.length-1].offset=command.start-1;if(newPlaceholders.length===0||!this.leap(+1,false)){this.setSelection(command.start+mathlist.length-1)}}this.contentDidChange()}};function removeCommandStringFromAtom(atom){if(!atom)return;if(Array.isArray(atom)){for(let i=atom.length-1;i>=0;i--){if(atom[i].type==="command"){atom.splice(i,1)}else{removeCommandStringFromAtom(atom[i])}}return}removeCommandStringFromAtom(atom.body);removeCommandStringFromAtom(atom.superscript);removeCommandStringFromAtom(atom.subscript);removeCommandStringFromAtom(atom.underscript);removeCommandStringFromAtom(atom.overscript);removeCommandStringFromAtom(atom.numer);removeCommandStringFromAtom(atom.denom);removeCommandStringFromAtom(atom.index);if(atom.array){for(let j=arrayCellCount(atom.array);j>=0;j--){removeCommandStringFromAtom(arrayCell(atom.array,j))}}}EditableMathlist.prototype.removeCommandString=function(){this.contentWillChange();const contentWasChanging=this.suppressChangeNotifications;this.suppressChangeNotifications=true;removeCommandStringFromAtom(this.root.body);this.suppressChangeNotifications=contentWasChanging;this.contentDidChange()};EditableMathlist.prototype.extractArgBeforeInsertionPoint=function(){const siblings=this.siblings();if(siblings.length<=1)return[];const result=[];let i=this.startOffset();if(siblings[i].mode==="text"){while(i>=1&&siblings[i].mode==="text"){result.unshift(siblings[i]);i--}}else{while(i>=1&&/^(mord|surd|msubsup|leftright|mop|variable)$/.test(siblings[i].type)){result.unshift(siblings[i]);i--}}return result};EditableMathlist.prototype.setSelection=function(offset,extent,relation){offset=offset||0;extent=extent||0;const oldRelation=this.path[this.path.length-1].relation;if(!relation)relation=oldRelation;const parent=this.parent();if(!parent&&relation!=="body")return false;const arrayRelation=relation.startsWith("cell");if(!arrayRelation&&!parent[relation]||arrayRelation&&!parent.array)return false;const relationChanged=relation!==oldRelation;this.path[this.path.length-1].relation=relation;const siblings=this.siblings();const siblingsCount=siblings.length;this.path[this.path.length-1].relation=oldRelation;const oldExtent=this.extent;if(extent==="end"){extent=siblingsCount-offset-1}else if(extent==="start"){extent=-offset}this.setExtent(extent);const extentChanged=this.extent!==oldExtent;this.setExtent(oldExtent);if(offset<0){offset=siblingsCount+offset}offset=Math.max(0,Math.min(offset,siblingsCount-1));const oldOffset=this.path[this.path.length-1].offset;const offsetChanged=oldOffset!==offset;if(relationChanged||offsetChanged||extentChanged){if(relationChanged){this.adjustPlaceholder()}this.selectionWillChange();this.path[this.path.length-1].relation=relation;this.path[this.path.length-1].offset=offset;this.setExtent(extent);this.selectionDidChange()}return true};EditableMathlist.prototype.next=function(options){options=options||{};const NEXT_RELATION={body:"numer",numer:"denom",denom:"index",index:"overscript",overscript:"underscript",underscript:"subscript",subscript:"superscript"};if(this.anchorOffset()===this.siblings().length-1){this.adjustPlaceholder();let relation=NEXT_RELATION[this.relation()];const parent=this.parent();while(relation&&!parent[relation]){relation=NEXT_RELATION[relation]}if(relation){this.setSelection(0,0,relation);return}if(this.parent().array){const maxCellCount=arrayCellCount(this.parent().array);let cellIndex=parseInt(this.relation().match(/cell([0-9]*)$/)[1])+1;while(cellIndex<maxCellCount){const cell=arrayCell(this.parent().array,cellIndex);if(cell&&this.setSelection(0,0,"cell"+cellIndex)){this.selectionDidChange();return}cellIndex+=1}}if(this.path.length===1){if(this.suppressChangeNotifications||!this.config.onMoveOutOf||this.config.onMoveOutOf(this,"forward")){this.path[0].offset=0}}else{const skip=!options.iterateAll&&this.parent().skipBoundary;this.path.pop();if(skip){this.next(options)}}this.selectionDidChange();return}this.setSelection(this.anchorOffset()+1);const anchor=this.anchor();if(anchor&&!anchor.captureSelection){let relation;if(anchor.array){let cellIndex=0;relation="";const maxCellCount=arrayCellCount(anchor.array);while(!relation&&cellIndex<maxCellCount){if(arrayCell(anchor.array,cellIndex)){relation="cell"+cellIndex.toString()}cellIndex+=1}console.assert(relation);this.path.push({relation:relation,offset:0});this.setSelection(0,0,relation);return}relation="body";while(relation){if(Array.isArray(anchor[relation])){this.path.push({relation:relation,offset:0});this.insertFirstAtom();if(!options.iterateAll&&anchor.skipBoundary)this.next(options);return}relation=NEXT_RELATION[relation]}}};EditableMathlist.prototype.previous=function(options){options=options||{};const PREVIOUS_RELATION={numer:"body",denom:"numer",index:"denom",overscript:"index",underscript:"overscript",subscript:"underscript",superscript:"subscript"};if(!options.iterateAll&&this.anchorOffset()===1&&this.parent()&&this.parent().skipBoundary){this.setSelection(0)}if(this.anchorOffset()<1){let relation=PREVIOUS_RELATION[this.relation()];while(relation&&!this.setSelection(-1,0,relation)){relation=PREVIOUS_RELATION[relation]}const parentType=this.parent()?this.parent().type:"none";if(relation==="body"&&(parentType==="msubsup"||parentType==="mop")){relation=null}if(relation)return;this.adjustPlaceholder();this.selectionWillChange();if(this.relation().startsWith("cell")){let cellIndex=parseInt(this.relation().match(/cell([0-9]*)$/)[1])-1;while(cellIndex>=0){const cell=arrayCell(this.parent().array,cellIndex);if(cell&&this.setSelection(-1,0,"cell"+cellIndex)){this.selectionDidChange();return}cellIndex-=1}}if(this.path.length===1){if(this.suppressChangeNotifications||!this.config.onMoveOutOf||this.config.onMoveOutOf.bind(this)(-1)){this.path[0].offset=this.root.body.length-1}}else{this.path.pop();this.setSelection(this.anchorOffset()-1)}this.selectionDidChange();return}const anchor=this.anchor();if(!anchor.captureSelection){let relation;if(anchor.array){relation="";const maxCellCount=arrayCellCount(anchor.array);let cellIndex=maxCellCount-1;while(!relation&&cellIndex<maxCellCount){if(arrayCell(anchor.array,cellIndex)){relation="cell"+cellIndex.toString()}cellIndex-=1}cellIndex+=1;console.assert(relation);this.path.push({relation:relation,offset:arrayCell(anchor.array,cellIndex).length-1});this.setSelection(-1,0,relation);return}relation="superscript";while(relation){if(Array.isArray(anchor[relation])){this.path.push({relation:relation,offset:anchor[relation].length-1});this.setSelection(-1,0,relation);return}relation=PREVIOUS_RELATION[relation]}}this.setSelection(this.anchorOffset()-1);if(!options.iterateAll&&this.sibling(0)&&this.sibling(0).skipBoundary){this.previous(options)}};EditableMathlist.prototype.move=function(dist,options){options=options||{extend:false};const extend=options.extend||false;this.removeSuggestion();if(extend){this.extend(dist,options)}else{const oldPath=clone$1(this);if(dist>0){if(this.collapseForward())dist--;while(dist>0){this.next();dist--}}else if(dist<0){if(this.collapseBackward())dist++;while(dist!==0){this.previous();dist++}}this._announce("move",oldPath)}};EditableMathlist.prototype.up=function(options){options=options||{extend:false};const extend=options.extend||false;this.collapseBackward();const relation=this.relation();if(relation==="denom"){if(extend){this.selectionWillChange();this.path.pop();this.path[this.path.length-1].offset-=1;this.setExtent(1);this.selectionDidChange()}else{this.setSelection(this.anchorOffset(),0,"numer")}this._announce("moveUp")}else if(this.parent().array){let colRow=arrayColRow(this.parent().array,relation);colRow=arrayAdjustRow(this.parent().array,colRow,-1);if(colRow&&arrayCell(colRow)){this.path[this.path.length-1].relation="cell"+arrayIndex(this.parent().array,colRow);this.setSelection(this.anchorOffset());this._announce("moveUp")}else{this.move(-1,options)}}else{this._announce("line")}};EditableMathlist.prototype.down=function(options){options=options||{extend:false};const extend=options.extend||false;this.collapseForward();const relation=this.relation();if(relation==="numer"){if(extend){this.selectionWillChange();this.path.pop();this.path[this.path.length-1].offset-=1;this.setExtent(1);this.selectionDidChange()}else{this.setSelection(this.anchorOffset(),0,"denom")}this._announce("moveDown")}else if(this.parent().array){let colRow=arrayColRow(this.parent().array,relation);colRow=arrayAdjustRow(this.parent().array,colRow,+1);if(colRow&&arrayCell(colRow)){this.path[this.path.length-1].relation="cell"+arrayIndex(this.parent().array,colRow);this.setSelection(this.anchorOffset());this._announce("moveDown")}else{this.move(+1,options)}}else{this._announce("line")}};EditableMathlist.prototype.extend=function(dist){let offset=this.path[this.path.length-1].offset;let extent=0;const oldPath=clone$1(this);extent=this.extent+dist;const newFocusOffset=offset+extent;if(newFocusOffset<0&&extent!==0){if(this.path.length>1){this.selectionWillChange();this.path.pop();this.setExtent(-1);this.selectionDidChange();this._announce("move",oldPath);return}offset=this.path[this.path.length-1].offset;extent=this.extent}else if(newFocusOffset>=this.siblings().length){if(this.path.length>1){this.selectionWillChange();this.path.pop();this.path[this.path.length-1].offset-=1;this.setExtent(1);this.selectionDidChange();this._announce("move",oldPath);return}if(this.isCollapsed()){offset-=1}extent-=1}this.setSelection(offset,extent);this._announce("move",oldPath)};EditableMathlist.prototype.skip=function(dir,options){options=options||{extend:false};const extend=options.extend||false;dir=dir<0?-1:+1;const oldPath=clone$1(this);const siblings=this.siblings();const focus=this.focusOffset();let offset=focus+dir;if(extend)offset=Math.min(Math.max(0,offset),siblings.length-1);if(offset<0||offset>=siblings.length){this.move(dir,options);return}if(siblings[offset]&&siblings[offset].mode==="text"){offset=this.wordBoundaryOffset(offset,dir);if(offset<0&&!extend){this.setSelection(0);return}if(offset>siblings.length){this.setSelection(siblings.length-1);this.move(dir,options);return}}else{const type=siblings[offset]?siblings[offset].type:"";if(type==="mopen"&&dir>0||type==="mclose"&&dir<0){let level=type==="mopen"?1:-1;offset+=dir>0?1:-1;while(offset>=0&&offset<siblings.length&&level!==0){if(siblings[offset].type==="mopen"){level+=1}else if(siblings[offset].type==="mclose"){level-=1}offset+=dir}if(level!==0){offset=focus+dir}if(dir>0)offset=offset-1}else{while(siblings[offset]&&siblings[offset].mode==="math"&&siblings[offset].type===type){offset+=dir}offset-=dir>0?1:0}}if(extend){const anchor=this.anchorOffset();this.setSelection(anchor,offset-anchor)}else{this.setSelection(offset)}this._announce("move",oldPath)};EditableMathlist.prototype.jump=function(dir,options){options=options||{extend:false};const extend=options.extend||false;dir=dir<0?-1:+1;const siblings=this.siblings();let focus=this.focusOffset();if(dir>0)focus=Math.min(focus+1,siblings.length-1);const offset=dir<0?0:siblings.length-1;if(extend){this.extend(offset-focus)}else{this.move(offset-focus)}};EditableMathlist.prototype.jumpToMathFieldBoundary=function(dir,options){options=options||{extend:false};const extend=options.extend||false;dir=dir||+1;dir=dir<0?-1:+1;const oldPath=clone$1(this);const path=[{relation:"body",offset:this.path[0].offset}];let extent;if(!extend){path[0].offset=dir<0?0:this.root.body.length-1;extent=0}else{if(dir<0){if(path[0].offset>0){extent=-path[0].offset}}else{if(path[0].offset<this.siblings().length-1){extent=this.siblings().length-1-path[0].offset}}}this.setPath(path,extent);this._announce("move",oldPath)};EditableMathlist.prototype.leap=function(dir,callHandler){dir=dir||+1;dir=dir<0?-1:+1;callHandler=callHandler||true;const savedSuppressChangeNotifications=this.suppressChangeNotifications;this.suppressChangeNotifications=true;const oldPath=clone$1(this);const oldExtent=this.extent;this.move(dir);if(this.anchor().type==="placeholder"){this.move(dir)}const placeholders=this.filter((path,atom)=>atom.type==="placeholder"||path.length>1&&this.siblings().length===1,dir);if(placeholders.length===0){this.setPath(oldPath,oldExtent);if(callHandler){if(this.config.onTabOutOf){this.config.onTabOutOf(this.target,dir>0?"forward":"backward")}else if(document.activeElement){const focussableElements=`a[href]:not([disabled]),\n                    button:not([disabled]),\n                    textarea:not([disabled]),\n                    input[type=text]:not([disabled]),\n                    select:not([disabled]),\n                    [contentEditable="true"],\n                    [tabindex]:not([disabled]):not([tabindex="-1"])`;const focussable=Array.prototype.filter.call(document.querySelectorAll(focussableElements),element=>(element.offsetWidth>0||element.offsetHeight>0)&&!element.contains(document.activeElement)||element===document.activeElement);let index=focussable.indexOf(document.activeElement)+dir;if(index<0)index=focussable.length-1;if(index>=focussable.length)index=0;focussable[index].focus()}}this.suppressChangeNotifications=savedSuppressChangeNotifications;return false}this.selectionWillChange();this.setPath(placeholders[0]);if(this.anchor().type==="placeholder")this.setExtent(-1);this._announce("move",oldPath);this.selectionDidChange();this.suppressChangeNotifications=savedSuppressChangeNotifications;return true};EditableMathlist.prototype.anchorMode=function(){const anchor=this.isCollapsed()?this.anchor():this.sibling(1);let result;if(anchor){if(anchor.type==="commandliteral"||anchor.type==="command")return"command";result=anchor.mode}let i=1;let ancestor=this.ancestor(i);while(!result&&ancestor){if(ancestor)result=ancestor.mode;i+=1;ancestor=this.ancestor(i)}return result};EditableMathlist.prototype.anchorStyle=function(){const anchor=this.isCollapsed()?this.anchor():this.sibling(1);let result;if(anchor&&anchor.type!=="first"){if(anchor.type==="commandliteral"||anchor.type==="command")return{};result={color:anchor.color,backgroundColor:anchor.backgroundColor,fontFamily:anchor.fontFamily,fontShape:anchor.fontShape,fontSeries:anchor.fontSeries,fontSize:anchor.fontSize}}let i=1;let ancestor=this.ancestor(i);while(!result&&ancestor){if(ancestor){result={color:ancestor.color,backgroundColor:ancestor.backgroundColor,fontFamily:ancestor.fontFamily,fontShape:ancestor.fontShape,fontSeries:ancestor.fontSeries,fontSize:ancestor.fontSize}}i+=1;ancestor=this.ancestor(i)}return result};function removeParen(list){if(!list)return undefined;if(list.length===1&&list[0].type==="leftright"&&list[0].leftDelim==="("){list=list[0].body}return list}EditableMathlist.prototype.simplifyParen=function(atoms){if(atoms&&this.config.removeExtraneousParentheses){for(let i=0;atoms[i];i++){if(atoms[i].type==="leftright"&&atoms[i].leftDelim==="("){if(Array.isArray(atoms[i].body)){let genFracCount=0;let genFracIndex=0;let nonGenFracCount=0;for(let j=0;atoms[i].body[j];j++){if(atoms[i].body[j].type==="genfrac"){genFracCount++;genFracIndex=j}if(atoms[i].body[j].type!=="first")nonGenFracCount++}if(nonGenFracCount===0&&genFracCount===1){atoms[i]=atoms[i].body[genFracIndex]}}}}atoms.forEach(atom=>{if(atom.type==="genfrac"){this.simplifyParen(atom.numer);this.simplifyParen(atom.denom);atom.numer=removeParen(atom.numer);atom.denom=removeParen(atom.denom)}if(atom.superscript){this.simplifyParen(atom.superscript);atom.superscript=removeParen(atom.superscript)}if(atom.subscript){this.simplifyParen(atom.subscript);atom.subscript=removeParen(atom.subscript)}if(atom.underscript){this.simplifyParen(atom.underscript);atom.underscript=removeParen(atom.underscript)}if(atom.overscript){this.simplifyParen(atom.overscript);atom.overscript=removeParen(atom.overscript)}if(atom.index){this.simplifyParen(atom.index);atom.index=removeParen(atom.index)}if(atom.type==="surd"){this.simplifyParen(atom.body);atom.body=removeParen(atom.body)}else if(atom.body&&Array.isArray(atom.body)){this.simplifyParen(atom.body)}if(atom.array){for(let i=arrayCellCount(atom.array);i>=0;i--){this.simplifyParen(arrayCell(atom.array,i))}}})}};function applyStyleToUnstyledAtoms(atom,style){if(!atom||!style)return;if(Array.isArray(atom)){atom.forEach(x=>applyStyleToUnstyledAtoms(x,style))}else if(typeof atom==="object"){if(!atom.color&&!atom.backgroundColor&&!atom.fontFamily&&!atom.fontShape&&!atom.fontSeries&&!atom.fontSize){atom.applyStyle(style);applyStyleToUnstyledAtoms(atom.body,style);applyStyleToUnstyledAtoms(atom.numer,style);applyStyleToUnstyledAtoms(atom.denom,style);applyStyleToUnstyledAtoms(atom.index,style);applyStyleToUnstyledAtoms(atom.overscript,style);applyStyleToUnstyledAtoms(atom.underscript,style);applyStyleToUnstyledAtoms(atom.subscript,style);applyStyleToUnstyledAtoms(atom.superscript,style)}}}EditableMathlist.prototype.insert=function(s,options){options=options||{};if(options.smartFence&&this._insertSmartFence(s,options.style)){return}const suppressChangeNotifications=this.suppressChangeNotifications;if(options.suppressChangeNotifications){this.suppressChangeNotifications=true}this.contentWillChange();const contentWasChanging=this.suppressChangeNotifications;this.suppressChangeNotifications=true;if(!options.insertionMode)options.insertionMode="replaceSelection";if(!options.selectionMode)options.selectionMode="placeholder";if(!options.format)options.format="auto";options.macros=options.macros||this.config.macros;const anchorMode=options.mode||this.anchorMode();let mathlist;const args=[this.getSelectedAtoms()];if(options.placeholder!==undefined){args["?"]=options.placeholder}if(options.insertionMode==="replaceSelection"&&!this.isCollapsed()){this.delete_()}else if(options.insertionMode==="replaceAll"){this.root.body.splice(1);this.path=[{relation:"body",offset:0}];this.extent=0}else if(options.insertionMode==="insertBefore"){this.collapseBackward()}else if(options.insertionMode==="insertAfter"){this.collapseForward()}const siblings=this.siblings();const firstOffset=this.startOffset();if(firstOffset+1<siblings.length&&siblings[firstOffset+1]&&siblings[firstOffset+1].type==="placeholder"){this.delete_(1)}else if(firstOffset>0&&siblings[firstOffset]&&siblings[firstOffset].type==="placeholder"){this.delete_(-1)}if(anchorMode==="math"&&options.format==="ASCIIMath"){s=parseMathString(s,{...this.config,format:"ASCIIMath"});mathlist=ParserModule.parseTokens(Lexer$1.tokenize(s),"math",null,options.macros,false);this.simplifyParen(mathlist)}else if(anchorMode!=="text"&&options.format==="auto"){if(anchorMode==="command"){mathlist=[];for(const c of s){if(Definitions.COMMAND_MODE_CHARACTERS.test(c)){mathlist.push(new MathAtom$1.MathAtom("command","command",c))}}}else if(s===""){mathlist=[new MathAtom$1.MathAtom("command","command","\\")]}else{s=parseMathString(s,this.config);if(args[0]){s=s.replace(/(^|[^\\])#@/g,"$1#0")}else if(/(^|[^\\])#@/.test(s)){s=s.replace(/(^|[^\\])#@/g,"$1#0");args[0]=this.extractArgBeforeInsertionPoint();this._deleteAtoms(-args[0].length);if(Array.isArray(args[0])&&args[0].length===0)args[0]=undefined}else{s=s.replace(/(^|[^\\])#@/g,"$1#?")}mathlist=ParserModule.parseTokens(Lexer$1.tokenize(s),anchorMode,args,options.macros,options.smartFence);this.simplifyParen(mathlist)}}else if(options.format==="latex"){mathlist=ParserModule.parseTokens(Lexer$1.tokenize(s),anchorMode,args,options.macros,options.smartFence)}else if(anchorMode==="text"||options.format==="text"){s=s.replace(/\\/g,"\\textbackslash ");s=s.replace(/#/g,"\\#");s=s.replace(/\$/g,"\\$");s=s.replace(/%/g,"\\%");s=s.replace(/&/g,"\\&");s=s.replace(/_/g,"\\_");s=s.replace(/{/g,"\\textbraceleft ");s=s.replace(/}/g,"\\textbraceright ");s=s.replace(/\^/g,"\\textasciicircum ");s=s.replace(/~/g,"\\textasciitilde ");s=s.replace(/£/g,"\\textsterling ");mathlist=ParserModule.parseTokens(Lexer$1.tokenize(s),"text",args,options.macros,false)}applyStyleToUnstyledAtoms(mathlist,options.style);const parent=this.parent();if(this.config.removeExtraneousParentheses&&parent&&parent.type==="leftright"&&parent.leftDelim==="("&&isEmptyMathlist(parent.body)&&mathlist&&mathlist.length===1&&mathlist[0].type==="genfrac"){this.path.pop();this.siblings()[this.anchorOffset()]=mathlist[0]}else{Array.prototype.splice.apply(this.siblings(),[this.anchorOffset()+1,0].concat(mathlist))}this.insertFirstAtom();this.suppressChangeNotifications=contentWasChanging;if(options.selectionMode==="placeholder"){let newPlaceholders=[];for(const atom of mathlist){newPlaceholders=newPlaceholders.concat(atom.filter(atom=>atom.type==="placeholder"))}if(newPlaceholders.length===0||!this.leap(+1,false)){this.setSelection(this.anchorOffset()+mathlist.length)}else{this._announce("move")}}else if(options.selectionMode==="before");else if(options.selectionMode==="after"){this.setSelection(this.anchorOffset()+mathlist.length)}else if(options.selectionMode==="item"){this.setSelection(this.anchorOffset(),mathlist.length)}this.contentDidChange();this.suppressChangeNotifications=suppressChangeNotifications};EditableMathlist.prototype._insertSmartFence=function(fence,style){const parent=this.parent();if(fence==="{"||fence==="\\{")fence="\\lbrace";if(fence==="}"||fence==="\\}")fence="\\rbrace";if(fence==="["||fence==="\\[")fence="\\lbrack";if(fence==="]"||fence==="\\]")fence="\\rbrack";const rDelim=Definitions.RIGHT_DELIM[fence];if(rDelim&&!(parent.type==="leftright"&&parent.leftDelim==="|")){let s="";const collapsed=this.isCollapsed()||this.anchor().type==="placeholder";if(this.sibling(0).isFunction){s="\\mleft"+fence+"\\mright"}else{s="\\left"+fence+"\\right"}s+=collapsed?"?":rDelim;let content=[];if(collapsed){content=this.siblings().splice(this.anchorOffset()+1,this.siblings().length)}this.insert(s,{mode:"math",format:"latex",style:style});if(collapsed){this.sibling(0).body=content;this.move(-1)}return true}let lDelim;Object.keys(Definitions.RIGHT_DELIM).forEach(delim=>{if(fence===Definitions.RIGHT_DELIM[delim])lDelim=delim});if(lDelim){if(parent&&parent.type==="leftright"&&this.endOffset()===this.siblings().length-1){this.contentWillChange();parent.rightDelim=fence;this.move(+1);this.contentDidChange();return true}const siblings=this.siblings();let i;for(i=this.endOffset();i>=0;i--){if(siblings[i].type==="leftright"&&siblings[i].rightDelim==="?")break}if(i>=0){this.contentWillChange();siblings[i].rightDelim=fence;siblings[i].body=siblings[i].body.concat(siblings.slice(i+1,this.endOffset()+1));siblings.splice(i+1,this.endOffset()-i);this.setSelection(i);this.contentDidChange();return true}if(parent&&parent.type==="leftright"&&parent.rightDelim==="?"){this.contentWillChange();parent.rightDelim=fence;const tail=siblings.slice(this.endOffset()+1);siblings.splice(this.endOffset()+1);this.path.pop();Array.prototype.splice.apply(this.siblings(),[this.endOffset()+1,0].concat(tail));this.contentDidChange();return true}const grandparent=this.ancestor(2);if(grandparent&&grandparent.type==="leftright"&&grandparent.rightDelim==="?"&&this.endOffset()===siblings.length-1){this.move(1);return this._insertSmartFence(fence,style)}this.insert(fence,{mode:"math",format:"latex",style:style});return true}return false};EditableMathlist.prototype.positionInsertionPointAfterCommitedCommand=function(){const siblings=this.siblings();const command=this.commandOffsets();let i=command.start;while(i<command.end&&!siblings[i].suggestion){i++}this.setSelection(i-1)};EditableMathlist.prototype.removeSuggestion=function(){const siblings=this.siblings();for(let i=siblings.length-1;i>=0;i--){if(siblings[i].suggestion){siblings.splice(i,1)}}};EditableMathlist.prototype.insertSuggestion=function(s,l){this.removeSuggestion();const mathlist=[];const subs=s.substr(l);for(const c of subs){const atom=new MathAtom$1.MathAtom("command","command",c);atom.suggestion=true;mathlist.push(atom)}Array.prototype.splice.apply(this.siblings(),[this.anchorOffset()+1,0].concat(mathlist))};EditableMathlist.prototype._deleteAtoms=function(count){if(count>0){this.siblings().splice(this.anchorOffset()+1,count)}else{this.siblings().splice(this.anchorOffset()+count+1,-count);this.setSelection(this.anchorOffset()+count)}};EditableMathlist.prototype.delete=function(count){count=count||0;if(count===0){this.delete_(0)}else if(count>0){while(count>0){this.delete_(+1);count--}}else{while(count<0){this.delete_(-1);count++}}};EditableMathlist.prototype.delete_=function(dir){this.contentWillChange();this.selectionWillChange();const contentWasChanging=this.suppressChangeNotifications;this.suppressChangeNotifications=true;dir=dir||0;dir=dir<0?-1:dir>0?+1:dir;this.removeSuggestion();if(this.parent().array){if(dir<0&&this.startOffset()===0){const array=this.parent().array;if(arrayFirstCellByRow(array)===this.relation()){const atoms=arrayJoinRows(array);this.path.pop();this.siblings().splice(this.anchorOffset(),1,...atoms);this.setSelection(this.anchorOffset()-1,atoms.length)}else{const colRow=arrayColRow(array,this.relation());if(colRow.col===0){const dest=arrayAdjustRow(array,colRow,-1);dest.col=array[dest.row].length-1;this.path[this.path.length-1].relation="cell"+arrayIndex(array,dest);const destLength=array[dest.row][dest.col].length;const atoms=arrayJoinColumns(array[colRow.row]);array[dest.row][dest.col]=array[dest.row][dest.col].concat(atoms);this.setSelection(destLength-1,atoms.length);arrayRemoveRow(array,colRow.row)}else{if(arrayColumnCellCount(array,colRow.col)===0){arrayRemoveColumn(array,colRow.col);colRow.col-=1;this.path[this.path.length-1].relation="cell"+arrayIndex(array,colRow);const destCell=array[colRow.row][colRow.col];this.setSelection(destCell.length-1,0)}}}this.suppressChangeNotifications=contentWasChanging;this.selectionDidChange();this.contentDidChange();return}}const siblings=this.siblings();const parent=this.parent();if(!this.isCollapsed()){const first=this.startOffset()+1;const last=this.endOffset()+1;this._announce("deleted",null,siblings.slice(first,last));siblings.splice(first,last-first);this.setSelection(first-1)}else{const anchorOffset=this.anchorOffset();if(dir<0){if(anchorOffset!==0){const sibling=this.sibling(0);if(sibling.type==="leftright"){sibling.rightDelim="?";this.move(-1)}else if(!sibling.captureSelection&&/^(group|array|genfrac|surd|leftright|overlap|overunder|box|mathstyle|sizing)$/.test(sibling.type)){this.move(-1)}else{this._announce("delete",null,siblings.slice(anchorOffset,anchorOffset+1));siblings.splice(anchorOffset,1);this.setSelection(anchorOffset-1)}}else{const relation=this.relation();if(relation==="superscript"||relation==="subscript"){const supsub=this.parent()[relation].filter(atom=>atom.type!=="placeholder"&&atom.type!=="first");this.parent()[relation]=null;this.path.pop();Array.prototype.splice.apply(this.siblings(),[this.anchorOffset(),0].concat(supsub));this.setSelection(this.anchorOffset()-1);this._announce("deleted: "+relation)}else if(relation==="denom"){const numer=this.parent().numer.filter(atom=>atom.type!=="placeholder"&&atom.type!=="first");const denom=this.parent().denom.filter(atom=>atom.type!=="placeholder"&&atom.type!=="first");this.path.pop();Array.prototype.splice.apply(this.siblings(),[this.anchorOffset(),1].concat(denom));Array.prototype.splice.apply(this.siblings(),[this.anchorOffset(),0].concat(numer));this.setSelection(this.anchorOffset()+numer.length-1);this._announce("deleted: denominator")}else if(relation==="body"){const body=this.siblings().filter(atom=>atom.type!=="placeholder");if(this.path.length>1){body.shift();this.path.pop();Array.prototype.splice.apply(this.siblings(),[this.anchorOffset(),1].concat(body));this.setSelection(this.anchorOffset()-1);this._announce("deleted: root")}}else{this.move(-1);this.delete(-1)}}}else if(dir>0){if(anchorOffset!==siblings.length-1){if(/^(group|array|genfrac|surd|leftright|overlap|overunder|box|mathstyle|sizing)$/.test(this.sibling(1).type)){this.move(+1)}else{this._announce("delete",null,siblings.slice(anchorOffset+1,anchorOffset+2));siblings.splice(anchorOffset+1,1)}}else{const relation=this.relation();if(parent.type==="root"&&parent.body.length===1){this.suppressChangeNotifications=contentWasChanging;return}else if(relation==="numer"){const numer=this.parent().numer.filter(atom=>atom.type!=="placeholder"&&atom.type!=="first");const denom=this.parent().denom.filter(atom=>atom.type!=="placeholder"&&atom.type!=="first");this.path.pop();Array.prototype.splice.apply(this.siblings(),[this.anchorOffset(),1].concat(denom));Array.prototype.splice.apply(this.siblings(),[this.anchorOffset(),0].concat(numer));this.setSelection(this.anchorOffset()+numer.length-1);this._announce("deleted: numerator")}else{this.move(1);this.delete(1)}}}}this.suppressChangeNotifications=contentWasChanging;this.selectionDidChange();this.contentDidChange()};EditableMathlist.prototype.moveToNextPlaceholder_=function(){this.leap(+1)};EditableMathlist.prototype.moveToPreviousPlaceholder_=function(){this.leap(-1)};EditableMathlist.prototype.moveToNextChar_=function(){this.move(+1)};EditableMathlist.prototype.moveToPreviousChar_=function(){this.move(-1)};EditableMathlist.prototype.moveUp_=function(){this.up()};EditableMathlist.prototype.moveDown_=function(){this.down()};EditableMathlist.prototype.moveToNextWord_=function(){this.skip(+1)};EditableMathlist.prototype.moveToPreviousWord_=function(){this.skip(-1)};EditableMathlist.prototype.moveToGroupStart_=function(){this.setSelection(0)};EditableMathlist.prototype.moveToGroupEnd_=function(){this.setSelection(-1)};EditableMathlist.prototype.moveToMathFieldStart_=function(){this.jumpToMathFieldBoundary(-1)};EditableMathlist.prototype.moveToMathFieldEnd_=function(){this.jumpToMathFieldBoundary(+1)};EditableMathlist.prototype.deleteNextChar_=function(){this.delete_(+1)};EditableMathlist.prototype.deletePreviousChar_=function(){this.delete_(-1)};EditableMathlist.prototype.deleteNextWord_=function(){this.extendToNextBoundary();this.delete_()};EditableMathlist.prototype.deletePreviousWord_=function(){this.extendToPreviousBoundary();this.delete_()};EditableMathlist.prototype.deleteToGroupStart_=function(){this.extendToGroupStart();this.delete_()};EditableMathlist.prototype.deleteToGroupEnd_=function(){this.extendToMathFieldStart();this.delete_()};EditableMathlist.prototype.deleteToMathFieldEnd_=function(){this.extendToMathFieldEnd();this.delete_()};EditableMathlist.prototype.transpose_=function(){};EditableMathlist.prototype.extendToNextChar_=function(){this.extend(+1)};EditableMathlist.prototype.extendToPreviousChar_=function(){this.extend(-1)};EditableMathlist.prototype.extendToNextWord_=function(){this.skip(+1,{extend:true})};EditableMathlist.prototype.extendToPreviousWord_=function(){this.skip(-1,{extend:true})};EditableMathlist.prototype.extendUp_=function(){this.up({extend:true})};EditableMathlist.prototype.extendDown_=function(){this.down({extend:true})};EditableMathlist.prototype.extendToNextBoundary_=function(){this.skip(+1,{extend:true})};EditableMathlist.prototype.extendToPreviousBoundary_=function(){this.skip(-1,{extend:true})};EditableMathlist.prototype.extendToGroupStart_=function(){this.setExtent(-this.anchorOffset())};EditableMathlist.prototype.extendToGroupEnd_=function(){this.setExtent(this.siblings().length-this.anchorOffset())};EditableMathlist.prototype.extendToMathFieldStart_=function(){this.jumpToMathFieldBoundary(-1,{extend:true})};EditableMathlist.prototype.extendToMathFieldEnd_=function(){this.jumpToMathFieldBoundary(+1,{extend:true})};EditableMathlist.prototype.moveToSuperscript_=function(){this.collapseForward();if(!this.anchor().superscript){if(this.anchor().subscript){this.anchor().superscript=[makeFirstAtom()]}else{const sibling=this.sibling(1);if(sibling&&sibling.superscript){this.path[this.path.length-1].offset+=1}else if(sibling&&sibling.subscript){this.path[this.path.length-1].offset+=1;this.anchor().superscript=[makeFirstAtom()]}else{if(this.anchor().limits!=="limits"){this.siblings().splice(this.anchorOffset()+1,0,new MathAtom$1.MathAtom(this.parent().anchorMode,"msubsup","​",this.anchorStyle()));this.path[this.path.length-1].offset+=1}this.anchor().superscript=[makeFirstAtom()]}}}this.path.push({relation:"superscript",offset:0});this.selectGroup_()};EditableMathlist.prototype.moveToSubscript_=function(){this.collapseForward();if(!this.anchor().subscript){if(this.anchor().superscript){this.anchor().subscript=[makeFirstAtom()]}else{const sibling=this.sibling(1);if(sibling&&sibling.subscript){this.path[this.path.length-1].offset+=1}else if(sibling&&sibling.superscript){this.path[this.path.length-1].offset+=1;this.anchor().subscript=[makeFirstAtom()]}else{if(this.anchor().limits!=="limits"){this.siblings().splice(this.anchorOffset()+1,0,new MathAtom$1.MathAtom(this.parent().anchorMode,"msubsup","​",this.anchorStyle()));this.path[this.path.length-1].offset+=1}this.anchor().subscript=[makeFirstAtom()]}}}this.path.push({relation:"subscript",offset:0});this.selectGroup_()};EditableMathlist.prototype.moveToOpposite_=function(){const OPPOSITE_RELATIONS={superscript:"subscript",subscript:"superscript",denom:"numer",numer:"denom"};const oppositeRelation=OPPOSITE_RELATIONS[this.relation()];if(!oppositeRelation){this.moveToSuperscript_()}if(!this.parent()[oppositeRelation]){this.parent()[oppositeRelation]=[makeFirstAtom()]}this.setSelection(0,"end",oppositeRelation)};EditableMathlist.prototype.moveBeforeParent_=function(){if(this.path.length>1){this.path.pop();this.setSelection(this.anchorOffset()-1)}else{this._announce("plonk")}};EditableMathlist.prototype.moveAfterParent_=function(){if(this.path.length>1){const oldPath=clone$1(this);this.path.pop();this.setExtent(0);this._announce("move",oldPath)}else{this._announce("plonk")}};EditableMathlist.prototype._addCell=function(where){const parent=this.parent();if(parent&&parent.type==="array"&&Array.isArray(parent.array)){const relation=this.relation();if(parent.array){const colRow=arrayColRow(parent.array,relation);if(where==="after row"||where==="before row"){colRow.col=0;colRow.row=colRow.row+(where==="after row"?1:0);parent.array.splice(colRow.row,0,[[]])}else{colRow.col+=where==="after column"?1:0;parent.array[colRow.row].splice(colRow.col,0,[])}const cellIndex=arrayIndex(parent.array,colRow);this.path.pop();this.path.push({relation:"cell"+cellIndex.toString(),offset:0});this.insertFirstAtom()}}};EditableMathlist.prototype.convertParentToArray=function(){const parent=this.parent();if(parent.type==="leftright"){parent.type="array";const envName={"(":"pmatrix","\\lbrack":"bmatrix","\\lbrace":"cases"}[parent.leftDelim]||"matrix";const env=Definitions.getEnvironmentInfo(envName);const array=[[parent.body]];if(env.parser){Object.assign(parent,env.parser(envName,[],array))}parent.tabularMode=env.tabular;parent.parseMode=this.anchorMode();parent.env={...env};parent.env.name=envName;parent.array=array;parent.rowGaps=[0];delete parent.body;this.path[this.path.length-1].relation="cell0"}};EditableMathlist.prototype.addRowAfter_=function(){this.contentWillChange();this.convertParentToArray();this._addCell("after row");this.contentDidChange()};EditableMathlist.prototype.addRowBefore_=function(){this.contentWillChange();this.convertParentToArray();this._addCell("before row");this.contentDidChange()};EditableMathlist.prototype.addColumnAfter_=function(){this.contentWillChange();this.convertParentToArray();this._addCell("after column");this.contentDidChange()};EditableMathlist.prototype.addColumnBefore_=function(){this.contentWillChange();this.convertParentToArray();this._addCell("before column");this.contentDidChange()};EditableMathlist.prototype.applyStyle_=function(style){if(this.isCollapsed())return;const that=this;function everyStyle(property,value){let result=true;that.forEachSelected(x=>{result=result&&x[property]===value},{recursive:true});return result}if(style.color&&everyStyle("color",style.color)){style.color="none"}if(style.backgroundColor&&everyStyle("backgroundColor",style.backgroundColor)){style.backgroundColor="none"}if(style.fontFamily&&everyStyle("fontFamily",style.fontFamily)){style.fontFamily="none"}if(style.series)style.fontSeries=style.series;if(style.fontSeries&&everyStyle("fontSeries",style.fontSeries)){style.fontSeries="auto"}if(style.shape)style.fontShape=style.shape;if(style.fontShape&&everyStyle("fontShape",style.fontShape)){style.fontShape="auto"}if(style.size)style.fontSize=style.size;if(style.fontSize&&everyStyle("fontSize",style.fontSize)){style.fontSize="size5"}this.contentWillChange();this.forEachSelected(x=>x.applyStyle(style),{recursive:true});this.contentDidChange()};function parseMathString(s,config){if(!s)return"";if(s.length<=1)return s;if(!config||config.format!=="ASCIIMath"){s=s.replace(/\\\\([^\s\n])/g,"\\$1")}if((!config||config.format!=="ASCIIMath")&&/\\/.test(s)){return s}s=s.replace(/\u2061/gu,"");s=s.replace(/\u3016/gu,"{");s=s.replace(/\u3017/gu,"}");s=s.replace(/([^\\])sinx/g,"$1\\sin x");s=s.replace(/([^\\])cosx/g,"$1\\cos x ");s=s.replace(/\u2013/g,"-");return parseMathExpression(s,config)}function parseMathExpression(s,config){if(!s)return"";let done=false;let m;if(!done&&(s[0]==="^"||s[0]==="_")){m=parseMathArgument(s.substr(1),{...config,noWrap:true});s=s[0]+"{"+m.match+"}";s+=parseMathExpression(m.rest,config);done=true}if(!done){m=s.match(/^(sqrt|\u221a)(.*)/);if(m){m=parseMathArgument(m[2],{...config,noWrap:true});s="\\sqrt{"+m.match+"}";s+=parseMathExpression(m.rest,config);done=true}}if(!done){m=s.match(/^(\\cbrt|\u221b)(.*)/);if(m){m=parseMathArgument(m[2],{...config,noWrap:true});s="\\sqrt[3]{"+m.match+"}";s+=parseMathExpression(m.rest,config);done=true}}if(!done){m=s.match(/^abs(.*)/);if(m){m=parseMathArgument(m[1],{...config,noWrap:true});s="\\left|"+m.match+"\\right|";s+=parseMathExpression(m.rest,config);done=true}}if(!done){m=s.match(/^["”“](.*?)["”“](.*)/);if(m){s="\\text{"+m[1]+"}";s+=parseMathExpression(m[2],config);done=true}}if(!done){m=s.match(/^([^a-zA-Z({[_^\\\s"]+)(.*)/);if(m){s=paddedShortcut(m[1],config);s+=parseMathExpression(m[2],config);done=true}}if(!done&&/^(f|g|h)[^a-zA-Z]/.test(s)){m=parseMathArgument(s.substring(1),config);s=s[0];s+=m.match;s+=parseMathExpression(m.rest,config);done=true}if(!done){m=s.match(/^([a-zA-Z]+)(.*)/);if(m){s=paddedShortcut(m[1],config);s+=parseMathExpression(m[2],config);done=true}}if(!done){m=parseMathArgument(s,{...config,noWrap:true});if(m.match&&m.rest[0]==="/"){const m2=parseMathArgument(m.rest.substr(1),{...config,noWrap:true});if(m2.match){s="\\frac{"+m.match+"}{"+m2.match+"}"+parseMathExpression(m2.rest,config)}done=true}else if(m.match&&/^(\(|\{|\[)$/.test(s[0])){s="\\left"+s[0]+m.match+"\\right"+{"(":")","{":"}","[":"]"}[s[0]]+parseMathExpression(m.rest,config);done=true}else if(m.match){s=m.match;s+=parseMathExpression(m.rest,config);done=true}}if(!done){m=s.match(/^(\s+)(.*)$/);if(m){s=" "+parseMathExpression(m[2],config);done=true}}return s}function parseMathArgument(s,config){let match="";s=s.trim();let rest=s;const lFence=s.charAt(0);const rFence={"(":")","{":"}","[":"]"}[lFence];if(rFence){let level=1;let i=1;while(i<s.length&&level>0){if(s[i]===lFence)level++;if(s[i]===rFence)level--;i++}if(level===0){if(config.noWrap&&lFence==="("&&rFence===")"){match=parseMathExpression(s.substring(1,i-1),config)}else{match="\\mleft"+lFence+parseMathExpression(s.substring(1,i-1),config)+"\\mright"+rFence}rest=s.substring(i)}else{match=s.substring(1,i);rest=""}}else{let m=s.match(/^([a-zA-Z]+)/);if(m){let shortcut=Shortcuts.forString("math",null,s,config);if(shortcut){shortcut=shortcut.replace("_{#?}","");shortcut=shortcut.replace("^{#?}","");return{match:shortcut,rest:s.substring(shortcut.length)}}}m=s.match(/^([a-zA-Z])/);if(m){return{match:m[1],rest:s.substring(1)}}m=s.match(/^(-)?\d+(\.\d*)?/);if(m){return{match:m[0],rest:s.substring(m[0].length)}}if(!/^\\(left|right)/.test(s)){m=s.match(/^(\\[a-zA-Z]+)/);if(m){rest=s.substring(m[1].length);match=m[1]}}}return{match:match,rest:rest}}function paddedShortcut(s,config){let result=Shortcuts.forString("math",null,s,config);if(result){result=result.replace("_{#?}","");result=result.replace("^{#?}","");result+=" "}else{result=s}return result}function makeFirstAtom(){return new MathAtom$1.MathAtom("","first")}var EditableMathlist$1={EditableMathlist:EditableMathlist,parseMathString:parseMathString};const INTL_KEY={"#":"#","|":"|","[":"BracketLeft","]":"BracketRight","-":"Minus","+":"Plus","=":"Equal","/":"Slash","\\":"Backslash"};const KEY_NAMES={Space:"Spacebar"," ":"Spacebar",Escape:"Esc",ArrowLeft:"Left",ArrowUp:"Up",ArrowRight:"Right",ArrowDown:"Down",Delete:"Del"};const VIRTUAL_KEY_NAMES={q:"KeyQ",w:"KeyW",e:"KeyE",r:"KeyR",t:"KeyT",y:"KeyY",u:"KeyU",i:"KeyI",o:"KeyO",p:"KeyP",a:"KeyA",s:"KeyS",d:"KeyD",f:"KeyF",g:"KeyG",h:"KeyH",j:"KeyJ",k:"KeyK",l:"KeyL",z:"KeyZ",x:"KeyX",c:"KeyC",v:"KeyV",b:"KeyB",n:"KeyN",m:"KeyM",1:"Digit1",2:"Digit2",3:"Digit3",4:"Digit4",5:"Digit5",6:"Digit6",7:"Digit7",8:"Digit8",9:"Digit9",0:"Digit0","!":"Shift-Digit1","@":"Shift-Digit2","#":"Shift-Digit3",$:"Shift-Digit4","%":"Shift-Digit5","^":"Shift-Digit6","&":"Shift-Digit7","*":"Shift-Digit8","(":"Shift-Digit9",")":"Shift-Digit0","-":"Minus",_:"Shift-Minus","/":"Slash","\\":"Backslash","|":"Shift-Backslash","?":"Shift-Slash"," ":"Spacebar"};function keyboardEventToString(evt){let keyname;let useModifiers=true;if(evt.key==="Unidentified"){if(evt.target){keyname=VIRTUAL_KEY_NAMES[evt.target.value]||evt.target.value}}if(!keyname){if(INTL_KEY[evt.key]){keyname=INTL_KEY[evt.key];useModifiers=false}else{keyname=KEY_NAMES[evt.key]}if(!keyname){keyname=VIRTUAL_KEY_NAMES[evt.key.toLowerCase()]||evt.key}}if(!keyname&&evt.code){keyname=KEY_NAMES[evt.code]||evt.code}const modifiers=[];if(evt.ctrlKey)modifiers.push("Ctrl");if(evt.metaKey)modifiers.push("Meta");if(useModifiers&&evt.altKey)modifiers.push("Alt");if(useModifiers&&evt.shiftKey)modifiers.push("Shift");if(modifiers.length===0)return keyname;modifiers.push(keyname);return modifiers.join("-")}function delegateKeyboardEvents(textarea,handlers){let keydownEvent=null;let keypressEvent=null;let compositionInProgress=false;let deadKey=false;let callbackTimeoutID;function defer(cb){if(callbackTimeoutID){clearTimeout(callbackTimeoutID)}callbackTimeoutID=setTimeout(function(){clearTimeout(callbackTimeoutID);cb()})}function handleTypedText(){if(hasSelection(textarea))return;const text=textarea.value;textarea.value="";if(text.length>0)handlers.typedText(text)}function onKeydown(e){const allowDeadKey=typeof handlers.allowDeadKey==="function"&&handlers.allowDeadKey();if(!allowDeadKey&&(e.key==="Dead"||e.key==="Unidentified"||e.keyCode===229)){deadKey=true;compositionInProgress=false;const savedBlur=handlers.blur;const savedFocus=handlers.focus;handlers.blur=null;handlers.focus=null;textarea.blur();textarea.focus();handlers.blur=savedBlur;handlers.focus=savedFocus}else{deadKey=false}if(!compositionInProgress&&e.code!=="CapsLock"&&!/(Control|Meta|Alt|Shift)(Right|Left)/.test(e.code)){keydownEvent=e;keypressEvent=null;return handlers.keystroke(keyboardEventToString(e),e)}return true}function onKeypress(e){if(!compositionInProgress){if(keydownEvent&&keypressEvent){handlers.keystroke(keyboardEventToString(keydownEvent),keydownEvent)}keypressEvent=e;defer(handleTypedText)}}function onKeyup(){if(!compositionInProgress&&keydownEvent&&!keypressEvent){handleTypedText()}}function onPaste(){textarea.focus();const text=textarea.value;textarea.value="";if(text.length>0)handlers.paste(text)}function onCopy(e){if(handlers.copy)handlers.copy(e)}function onCut(e){if(handlers.cut)handlers.cut(e)}function onBlur(){keydownEvent=null;keypressEvent=null;if(handlers.blur)handlers.blur()}function onFocus(){if(handlers.focus){handlers.focus()}}function onCompositionStart(){compositionInProgress=true}function onCompositionEnd(){compositionInProgress=false;defer(handleTypedText)}function inputEventListener(){if(deadKey){const savedBlur=handlers.blur;const savedFocus=handlers.focus;handlers.blur=null;handlers.focus=null;textarea.blur();textarea.focus();handlers.blur=savedBlur;handlers.focus=savedFocus;deadKey=false;compositionInProgress=false;defer(handleTypedText)}else if(!compositionInProgress){defer(handleTypedText)}}const target=textarea||handlers.container;target.addEventListener("keydown",onKeydown,true);target.addEventListener("keypress",onKeypress,true);target.addEventListener("keyup",onKeyup,true);target.addEventListener("paste",onPaste,true);target.addEventListener("copy",onCopy,true);target.addEventListener("cut",onCut,true);target.addEventListener("blur",onBlur,true);target.addEventListener("focus",onFocus,true);target.addEventListener("compositionstart",onCompositionStart,true);target.addEventListener("compositionend",onCompositionEnd,true);target.addEventListener("input",inputEventListener);function removeDelegatedKeyboardEvents(){if(callbackTimeoutID){clearTimeout(callbackTimeoutID)}target.removeEventListener("keydown",onKeydown,true);target.removeEventListener("keypress",onKeypress,true);target.removeEventListener("keyup",onKeyup,true);target.removeEventListener("paste",onPaste,true);target.removeEventListener("copy",onCopy,true);target.removeEventListener("cut",onCut,true);target.removeEventListener("blur",onBlur,true);target.removeEventListener("focus",onFocus,true);target.removeEventListener("compositionstart",onCompositionStart,true);target.removeEventListener("compositionend",onCompositionEnd,true);target.removeEventListener("input",inputEventListener)}return removeDelegatedKeyboardEvents}function hasSelection(textarea){return textarea.selectionStart!==textarea.selectionEnd}function eventToChar(evt){if(!evt)return"";let result;if(evt.key==="Unidentified"){if(evt.target){result=evt.target.value}}result=result||evt.key||evt.code;if(/^(Return|Enter|Tab|Escape|Delete|PageUp|PageDown|Home|End|Help|ArrowLeft|ArrowRight|ArrowUp|ArrowDown)$/.test(result)){result=""}return result}function charToEvent(c){const result={key:c,metaKey:false,ctrlKey:false,altKey:false,shiftKey:false};return result}var Keyboard={delegateKeyboardEvents:delegateKeyboardEvents,select:delegateKeyboardEvents.select,keyboardEventToString:keyboardEventToString,eventToChar:eventToChar,charToEvent:charToEvent};class UndoManager{constructor(mathlist){this.mathlist=mathlist;this.maximumDepth=1e3;this.record=false;this.canCoalesce=false;this.reset()}reset(){this.stack=[];this.index=-1}startRecording(){this.record=true}canUndo(){return this.index>0}canRedo(){return this.index!==this.stack.length-1}undo(options){if(this.canUndo()){if(options&&typeof options.onUndoStateWillChange==="function"){options.onUndoStateWillChange(this.mathlist.target,"undo")}this.restore(this.stack[this.index-1],options);this.index-=1;if(options&&typeof options.onUndoStateDidChange==="function"){options.onUndoStateDidChange(this.mathlist.target,"undo")}this.canCoalesce=false}}redo(options){if(this.canRedo()){if(options&&options.onUndoStateWillChange==="function"){options.onUndoStateWillChange(this.mathlist.target,"redo")}this.index+=1;this.restore(this.stack[this.index],options);if(options&&typeof options.onUndoStateDidChange==="function"){options.onUndoStateDidChange(this.mathlist.target,"redo")}this.canCoalesce=false}}pop(){if(this.canUndo()){this.index-=1;this.stack.pop()}}snapshot(options){if(!this.record)return;if(options&&options.onUndoStateWillChange==="function"){options.onUndoStateWillChange(this.mathlist.target,"snapshot")}this.stack.splice(this.index+1,this.stack.length-this.index-1);this.stack.push({latex:this.mathlist.root.toLatex(),selection:this.mathlist.toString()});this.index++;if(this.stack.length>this.maximumDepth){this.stack.shift()}if(options&&typeof options.onUndoStateDidChange==="function"){options.onUndoStateDidChange(this.mathlist.target,"snapshot")}this.canCoalesce=false}snapshotAndCoalesce(options){if(this.canCoalesce){this.pop()}this.snapshot(options);this.canCoalesce=true}save(){return{latex:this.mathlist.root.toLatex(),selection:this.mathlist.toString()}}restore(state,options){const wasSuppressing=this.mathlist.suppressChangeNotifications;if(options.suppressChangeNotifications!==undefined){this.mathlist.suppressChangeNotifications=options.suppressChangeNotifications}this.mathlist.insert(state?state.latex:"",{mode:"math",insertionMode:"replaceAll",selectionMode:"after",format:"latex",...options});this.mathlist.setPath(state?state.selection:[{relation:"body",offset:0}]);this.mathlist.suppressChangeNotifications=wasSuppressing}}var Undo={UndoManager:UndoManager};const SAMPLES={"\\mathrm":"\\mathrm{x=+3.14, x\\in A}","\\mathbf":"\\mathbf{x=+3.14, x\\in A}","\\bf":"\\bf{x=+3.14, x\\in A}","\\bm":"\\bm{x=+3.14, x\\in A}","\\bold":"\\bold{x=+3.14, x\\in A}","\\mathit":"\\mathbb{x=+3.14}","\\mathbb":"\\mathbb{ABCD}","\\Bbb":"\\mathbb{ABCD}","\\frak":"\\frak{ABCD}","\\mathfrak":"\\mathfrak{ABCD}","\\mathscr":"\\mathscr{ABCD}","\\mathsf":"\\mathsf{ABab01}","\\mathtt":"\\mathtt{x=+3.14, x\\in A}","\\mathcal":"\\mathcal{ABCD}","\\boldsymbol":"\\boldsymbol{ABab01+=}","\\text":"\\text{ABC abc}","\\textrm":"\\textrm{ABC abc}","\\textnormal":"\\textnormal{ABC abc}","\\textit":"\\textit{ABC abc}","\\textbf":"\\textbf{ABC abc}","\\texttt":"\\texttt{ABC abc}","\\textsf":"\\textsf{ABC abc}","\\textcolor":`{\\textcolor{m0}A}{\\textcolor{m1}B}{\\textcolor{m2}C }{\\textcolor{m3}a}{\\textcolor{m4}b}{\\textcolor{m5}c}{\\textcolor{m6}8}`,"\\color":`{\\color{m0}A}{\\color{m1}B}{\\color{m2}C}{\\color{m3}a}{\\color{m4}b}{\\color{m5}c}{\\color{m6}8}`,"\\underline":'\\underline{\\unicode{"2B1A}}',"\\overline":'\\overline{\\unicode{"2B1A}}',"\\vec":'\\vec{\\unicode{"25CC}}',"\\check":'\\check{\\unicode{"25CC}}',"\\acute":'\\acute{\\unicode{"25CC}}',"\\breve":'\\breve{\\unicode{"25CC}}',"\\tilde":'\\tilde{\\unicode{"25CC}}',"\\hat":'\\hat{\\unicode{"25CC}}',"\\ddot":'\\ddot{\\unicode{"25CC}}',"\\dot":'\\dot{\\unicode{"25CC}}',"\\bar":'\\bar{\\unicode{"25CC}}',"\\!":'\\unicode{"203A}\\!\\unicode{"2039}',"\\,":'\\unicode{"203A}\\,\\unicode{"2039}',"\\:":'\\unicode{"203A}\\:\\unicode{"2039}',"\\;":'\\unicode{"203A}\\;\\unicode{"2039}',"\\quad":'\\unicode{"203A}\\quad\\unicode{"2039}',"\\qquad":'\\unicode{"203A}\\qquad\\unicode{"2039}',"\\enskip":'\\unicode{"203A}\\enskip\\unicode{"2039}',"\\space":'\\unicode{"203A}\\space\\unicode{"2039}',"\\frac":'\\frac{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\dfrac":'\\dfrac{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\cfrac":'\\cfrac{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\tfrac":'\\tfrac{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\dbinom":'\\dbinom{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\tbinom":'\\tbinom{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\binom":'\\binom{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\pdiff":'\\pdiff{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\in":"n\\in\\N","\\notin":"n\\notin\\N","\\not":"B \\not A","\\ni":"N\\in n","\\owns":"N\\owns n","\\subset":"A\\subset B","\\supset":"B\\supset A","\\subseteq":"A\\subseteq B","\\supseteq":"B\\supseteq A","\\nsubseteq":"A\\nsubseteq B","\\nsupseteq":"B\\nsupseteq A","\\subsetneq":"A\\subsetneq B","\\supsetneq":"B\\supsetneq A","\\varsubsetneq":"A\\varsubsetneq B","\\varsupsetneq":"B\\varsupsetneq A","\\nsubseteqq":"A\\varsupsetneq B","\\subsetneqq":"A\\subsetneqq B","\\varsubsetneqq":"A\\varsubsetneqq B","\\nsubset":"A\\nsubset B","\\nsupset":"B\\nsupset A","\\complement":"A^\\complement","\\bigcup":'\\bigcup_{\\unicode{"2B1A}}',"\\bigcap":'\\bigcap_{\\unicode{"2B1A}}',"\\sqrt":'\\sqrt{\\unicode{"2B1A}}',"\\prod":'\\prod_{\\unicode{"2B1A}}^{\\unicode{"2B1A}}',"\\sum":'\\sum_{\\unicode{"2B1A}}^{\\unicode{"2B1A}}',"\\int":'\\int_{\\unicode{"2B1A}}^{\\unicode{"2B1A}}',"\\stackrel":'\\stackrel{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\stackbin":'\\stackbin{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\underset":'\\underset{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\overset":'\\overset{\\unicode{"2B1A}}{\\unicode{"2B1A}}',"\\prime":'\\unicode{"2B1A}^{\\prime}',"\\boxed":'\\boxed{\\unicode{"2B1A}}',"\\colorbox":'\\colorbox{#fbc0bd}{\\unicode{"2B1A}}',"\\bbox":'\\bbox[#ffd400, solid 2px #ffd400]{\\unicode{"2B1A}}',"\\enclose":'\\enclose{updiagonalstrike,roundedbox}[1px solid red, mathbackground="#fbc0bd"]{23+45}',"\\fcolorbox":'\\fcolorbox{#cd0030}{#ffd400}{\\unicode{"2B1A}}',"\\ ":'\\char"2423',"\\top":"{\\color{red}P}\\top","\\bot":"{\\color{#0F0}P}\\bot","\\mid":"P(p\\mid q)","\\rlap":"\\rlap{x}o","\\llap":"o\\llap{/}","\\variable":"\\variable{x}"};const NOTES={"\\text":"roman text","\\textrm":"roman text","\\textnormal":"roman text","\\textit":"italic text","\\textbf":"bold text","\\texttt":"monospaced text","\\textsf":"sans-serif text","\\mathrm":["roman","(upright)"],"\\mathbf":"bold","\\bf":"bold","\\bold":"bold","\\mathit":"italic","\\mathbb":"blackboard","\\Bbb":"blackboard","\\mathscr":"script","\\mathtt":["typewriter","(monospaced)"],"\\mathsf":"sans-serif","\\mathcal":"caligraphic","\\frak":["fraktur","(gothic)"],"\\mathfrak":["fraktur","(gothic)"],"\\textcolor":"text color","\\color":"color","\\forall":"for all","\\exists":"there exists","\\nexists":"there does not exist","\\frac":"fraction","\\dfrac":"display fraction","\\cfrac":"continuous fraction","\\tfrac":"text fraction","\\binom":"binomial coefficient","\\dbinom":"display binomial coefficient","\\tbinom":"text binomial coefficient","\\pdiff":"partial differential","\\vec":"vector","\\check":"caron","\\acute":"acute","\\breve":"breve","\\tilde":"tilde","\\dot":"dot","\\hat":["hat","circumflex"],"\\ddot":"double dot","\\bar":"bar","\\prime":"prime","\\doubleprime":"double prime","\\varnothing":"empty set","\\emptyset":"empty set","\\subseteq":"subset of or <br>equal to","\\supseteq":"superset of or <br>equal to","\\supset":"superset of","\\subset":"subset of","\\partial":"partial derivative","\\bigcup":"union","\\bigcap":"intersection","\\approx":"approximately equal to","\\notin":"not an element of","\\in":["element of","included in"],"\\infty":"infinity","\\land":"logical and","\\sqrt":"square root","\\prod":"product","\\sum":"summation","\\amalg":["amalgamation","coproduct","free product","disjoint union"],"\\cup":"union with","\\cap":"intersection with","\\int":"integral","\\iint":"surface integral","\\oint":"curve integral","\\iiint":"volume integral","\\iff":"if and only if","\\ln":"natural logarithm","\\boldsymbol":"bold","\\setminus":"set subtraction","\\stackrel":"relation with symbol above","\\stackbin":"operator with symbol above","\\underset":"symbol with annotation below","\\overset":"symbol with annotation above","\\hslash":["h-bar","Planck constant"],"\\gtrsim":"greater than or <br>similar to","\\propto":"proportional to","\\equiv":"equivalent to","\\!":["negative thin space","(-3 mu)"],"\\ ":["space","(6 mu)"],"\\,":["thin space","(3 mu)"],"\\:":["medium space","(4 mu)"],"\\;":["thick space","(5 mu)"],"\\quad":["1 em space","(18 mu)"],"\\qquad":["2 em space","(36 mu)"],"\\enskip":["&#189; em space","(9 mu)"],"\\mp":"minus or plus","\\pm":"plus or minus","\\Im":"Imaginary part of","\\Re":"Real part of","\\gothicCapitalR":"Real part of","\\gothicCapitalI":"Imaginary part part of","\\differentialD":"differential d","\\aleph":["aleph","infinite cardinal",'<a target="_blank" href="https://en.wikipedia.org/wiki/Cardinal_number">Wikipedia <big>&#x203A;</big></a>'],"\\beth":["beth","beth number",'<a target="_blank" href="https://en.wikipedia.org/wiki/Beth_number">Wikipedia <big>&#x203A;</big></a>'],"\\gimel":["gimel","gimel function",'<a target="_blank" href="https://en.wikipedia.org/wiki/Gimel_function">Wikipedia <big>&#x203A;</big></a>'],"\\O":"empty set","\\N":"set of <br>natural numbers","\\Z":"set of <br>integers","\\Q":"set of <br>rational numbers","\\C":"set of <br>complex numbers","\\R":"set of <br>real numbers","\\P":"set of <br>prime numbers","\\lesseqqgtr":"less than, equal to or<br> greater than","\\gnapprox":"greater than and <br>not approximately","\\lnapprox":"lesser than and <br>not approximately","\\j":"dotless j","\\i":"dotless i","\\cdot":"centered dot","\\lmoustache":"left moustache","\\rmoustache":"right moustache","\\nabla":["nabla","del","differential vector operator"],"\\square":["square","d’Alembert operator",'<a target="_blank" href="https://en.wikipedia.org/wiki/D%27Alembert_operator">Wikipedia <big>&#x203A;</big></a>'],"\\blacksquare":["black square","end of proof","tombstone","Halmos symbol"],"\\Box":"end of proof","\\colon":["such that","ratio"],"\\coloneq":["is defined by","is assigned"],"\\Colon":["is defined by","as"],"\\_":["underbar","underscore"],"\\ll":"much less than","\\gg":"much greater than","\\doteq":"approximately equal to","\\Doteq":"approximately equal to","\\doteqdot":"approximately equal to","\\cong":["isomorphism of","(for algebras, modules...)"],"\\det":["determinant of","(of a matrix)"],"\\dotplus":"Cartesian product algebra","\\otimes":["tensor product","(of algebras)","Kronecker product","(of matrices)"],"\\oplus":["direct sum","(of modules)"],"\\lb":"base-2 logarithm","\\lg":"base-10 logarithm","\\wp":["Weierstrass P",'<a target="_blank" href="https://en.wikipedia.org/wiki/Weierstrass%27s_elliptic_functions">Wikipedia <big>&#x203A;</big></a>'],"\\wr":["wreath product",'<a target="_blank" href="https://en.wikipedia.org/wiki/Wreath_product">Wikipedia <big>&#x203A;</big></a>'],"\\top":["tautology","Proposition P is universally true"],"\\bot":["contradiction","Proposition P is contradictory"],"\\mid":["probability","of event A given B"],"\\mho":["Siemens","electrical conductance in SI unit",'<a target="_blank" href="https://en.wikipedia.org/wiki/Siemens_(unit)">Wikipedia <big>&#x203A;</big></a>'],"\\Longrightarrow":"implies","\\Longleftrightarrow":"if, and only if,","\\prec":"precedes","\\preceq":"precedes or is equal to","\\succ":"succeedes","\\succeq":"succeedes or is equal to","\\perp":["is perpendicular to","is independent of"],"\\models":["entails","double-turnstyle, models","is a semantic consequence of",'<a target="_blank" href="https://en.wikipedia.org/wiki/Double_turnstile">Wikipedia <big>&#x203A;</big></a>'],"\\vdash":["satisfies","turnstyle, assertion sign","syntactic inference",'<a target="_blank" href="https://en.wikipedia.org/wiki/Turnstile_(symbol)">Wikipedia <big>&#x203A;</big></a>'],"\\implies":["implies","logical consequence"],"\\impliedby":["implied by","logical consequence"],"\\surd":["surd","root of","checkmark"],"\\ltimes":["semi direct product",'<a target="_blank" href="https://en.wikipedia.org/wiki/Semidirect_product">Wikipedia <big>&#x203A;</big></a>'],"\\rtimes":["semi direct product",'<a target="_blank" href="https://en.wikipedia.org/wiki/Semidirect_product">Wikipedia <big>&#x203A;</big></a>'],"\\leftthreetimes":["semi direct product",'<a target="_blank" href="https://en.wikipedia.org/wiki/Semidirect_product">Wikipedia <big>&#x203A;</big></a>'],"\\rightthreetimes":["semi direct product",'<a target="_blank" href="https://en.wikipedia.org/wiki/Semidirect_product">Wikipedia <big>&#x203A;</big></a>'],"\\divideontimes":["divide on times"],"\\curlywedge":"nor","\\curlyvee":"nand","\\simeq":"is group isomorphic with","\\vartriangleleft":["is a normal subgroup of","is an ideal ring of"],"\\circ":["circle","ring","function composition"],"\\rlap":["overlap right","\\rlap{x}o"],"\\llap":["overlap left","o\\llap{/}"],"\\colorbox":["color box","\\colorbox{#fbc0bd}{...}"],"\\ast":["asterisk","reflexive closure (as a superscript)"],"\\bullet":"bullet","\\lim":"limit","\\variable":"variable"};function getNote(symbol){let result=NOTES[symbol]||"";if(Array.isArray(result)){result=result.join("<br>")}return result}function latexToMarkup(latex,mf){const parse=ParserModule.parseTokens(Lexer$1.tokenize(latex),"math",null,mf.config.macros);const spans=MathAtom$1.decompose({mathstyle:"displaystyle",macros:mf.config.macros},parse);const base=Span$1.makeSpan(spans,"ML__base");const topStrut=Span$1.makeSpan("","ML__strut");topStrut.setStyle("height",base.height,"em");const bottomStrut=Span$1.makeSpan("","ML__strut--bottom");bottomStrut.setStyle("height",base.height+base.depth,"em");bottomStrut.setStyle("vertical-align",-base.depth,"em");const wrapper=Span$1.makeSpan([topStrut,bottomStrut,base],"ML__mathlive");return wrapper.toMarkup()}function showPopoverWithLatex(mf,latex,displayArrows){if(!latex||latex.length===0){hidePopover(mf);return}const command=latex;const command_markup=latexToMarkup(SAMPLES[command]||latex,mf);const command_note=getNote(command);const command_shortcuts=Shortcuts.forCommand(command);let template=displayArrows?'<div class="ML__popover__prev-shortcut" role="button" aria-label="Previous suggestion"><span><span>&#x25B2;</span></span></div>':"";template+='<span class="ML__popover__content" role="button">';template+='<div class="ML__popover__command">'+command_markup+"</div>";if(command_note){template+='<div class="ML__popover__note">'+command_note+"</div>"}if(command_shortcuts){template+='<div class="ML__popover__shortcut">'+command_shortcuts+"</div>"}template+="</span>";template+=displayArrows?'<div class="ML__popover__next-shortcut" role="button" aria-label="Next suggestion"><span><span>&#x25BC;</span></span></div>':"";showPopover(mf,template);let el=mf.popover.getElementsByClassName("ML__popover__content");if(el&&el.length>0){mf._attachButtonHandlers(el[0],["complete",{acceptSuggestion:true}])}el=mf.popover.getElementsByClassName("ML__popover__prev-shortcut");if(el&&el.length>0){mf._attachButtonHandlers(el[0],"previousSuggestion")}el=mf.popover.getElementsByClassName("ML__popover__next-shortcut");if(el&&el.length>0){mf._attachButtonHandlers(el[0],"nextSuggestion")}}function updatePopoverPosition(mf,options){if(mf.popover.classList.contains("is-visible")){if(options&&options.deferred){window.requestAnimationFrame(()=>updatePopoverPosition(mf))}else{if(!mf.mathlist.anchor()||mf.mathlist.anchor().type!=="command"){hidePopover(mf)}else{const position=mf._getCaretPosition();if(position){mf.popover.style.left=position.x-mf.popover.offsetWidth/2+"px";mf.popover.style.top=position.y+5+"px"}}}}}function showPopover(mf,markup){mf.popover.innerHTML=markup;const position=mf._getCaretPosition();if(position){mf.popover.style.left=position.x-mf.popover.offsetWidth/2+"px";mf.popover.style.top=position.y+5+"px"}mf.popover.classList.add("is-visible")}function hidePopover(mf){mf.popover.classList.remove("is-visible")}var Popover={getNote:getNote,SAMPLES:SAMPLES,NOTES:NOTES,showPopoverWithLatex:showPopoverWithLatex,showPopover:showPopover,hidePopover:hidePopover,updatePopoverPosition:updatePopoverPosition};function findLongestRun(atoms,property,value){let i=0;if(property==="fontFamily"){while(atoms[i]){if(atoms[i].type!=="mop"&&(atoms[i].fontFamily||atoms[i].baseFontFamily)!==value)break;i++}}else{while(atoms[i]){if(atoms[i].type!=="mop"&&atoms[i][property]!==value)break;i++}}return i}function latexifyArray(parent,properties,atoms,options,targetProperty=0){if(atoms.length===0){return""}if(targetProperty>properties.length-1){return atoms.map(x=>x.toLatex(options)).join("")}let result="";let prefix="";let suffix="";const prop=properties[targetProperty];const atom=atoms[0];const propValue=prop==="fontFamily"?atom.fontFamily||atom.baseFontFamily:atom[prop];const i=findLongestRun(atoms,prop,propValue);const isDefaultFontFamily=atom.autoFontFamily==="cmr"&&!atom.fontFamily&&!atom.baseFontFamily&&atom.fontSeries==="m"&&atom.fontShape==="n"||atom.autoFontFamily==="math"&&!atom.fontFamily&&!atom.baseFontFamily&&atom.fontSeries==="m"&&atom.fontShape==="it";if(propValue||prop==="mode"){if(atom.mode==="text"){if(prop==="mode"){let allAtomsHaveShapeOrSeriesOrFontFamily=true;for(let j=0;j<i;j++){if(!atoms[j].fontSeries&&!atoms[j].fontShape&&!atoms[j].fontFamily&&!atoms[j].baseFontFamily){allAtomsHaveShapeOrSeriesOrFontFamily=false;break}}if(!allAtomsHaveShapeOrSeriesOrFontFamily){prefix="\\text{";suffix="}"}}else if(prop==="fontShape"){if(propValue==="it"){prefix="\\textit{"}else if(propValue==="sl"){prefix="\\textsl{"}else if(propValue==="sc"){prefix="\\textsc{"}else if(propValue==="n"){prefix="\\textup{"}else{prefix="\\text{\\fontshape{"+propValue+"}"}suffix="}"}else if(prop==="fontSeries"){if(propValue==="b"){prefix="\\textbf{"}else if(propValue==="l"){prefix="\\textlf{"}else if(propValue==="m"){prefix="\\textmd{"}else{prefix="\\text{\\fontseries{"+propValue+"}"}suffix="}"}else if(prop==="fontFamily"){const command={cmr:"textrm",cmtt:"texttt",cmss:"textsf"}[propValue]||"";if(!command){prefix+="{\\fontfamily{"+propValue+"}";suffix="}"}else{prefix="\\"+command+"{";suffix="}"}}}else if(atom.mode==="math"){if(prop==="fontFamily"&&!/^(math|main)$/.test(propValue)){const command={cal:"mathcal",frak:"mathfrak",bb:"mathbb",scr:"mathscr",cmr:"mathrm",cmtt:"mathtt",cmss:"mathsf"}[propValue]||"";if(!command){prefix+="{\\fontfamily{"+propValue+"}";suffix="}"}else{if(/^\\operatorname{/.test(atom.latex)){return atom.latex+latexifyArray(parent,properties,atoms.slice(i),options)}if(!atom.isFunction){prefix="\\"+command+"{";suffix="}"}}}else if(prop==="fontShape"&&(propValue!=="n"||atom.autoFontFamily==="math"&&!atom.fontFamily&&!atom.baseFontFamily||atom.type==="variable")&&!isDefaultFontFamily){prefix="{\\fontshape{"+propValue+"}";suffix="}"}else if(prop==="fontSeries"&&propValue!=="n"&&propValue!=="m"&&!isDefaultFontFamily){prefix="{\\fontseries{"+propValue+"}";suffix="}"}}if(prop==="fontSize"&&propValue&&propValue!=="size5"){const command={size1:"tiny",size2:"scriptsize",size3:"footnotesize",size4:"small",size6:"large",size7:"Large",size8:"LARGE",size9:"huge",size10:"Huge"}[propValue]||"";prefix="{\\"+command+" ";suffix="}"}if(prop==="color"&&propValue&&propValue!=="none"&&(!parent||parent.color!==propValue)){prefix="\\textcolor{"+Color.colorToString(propValue)+"}{";suffix="}"}if(prop==="backgroundColor"&&propValue&&propValue!=="none"&&(!parent||parent.backgroundColor!==propValue)){prefix="\\colorbox{"+Color.colorToString(propValue)+"}{";suffix="}"}}const atomsInRun=atoms.slice(0,i);const atomsAfterRun=atoms.slice(i);console.log("latexifyArray",atom.body,prop,propValue,prefix,suffix,atomsInRun);result+=prefix;result+=latexifyArray(parent,properties,atomsInRun,options,targetProperty+1);result+=suffix;if(atomsAfterRun.length>0){result+=latexifyArray(parent,properties,atomsAfterRun,options,targetProperty)}return result}function latexify(parent,value,options){let result="";if(Array.isArray(value)&&value.length>0){if(value[0].type==="first"){value=value.slice(1);if(value.length===0)return""}let properties=["mode","color","backgroundColor","fontSize","fontFamily","fontShape","fontSeries"];if(!options.outputStyles){properties=properties.slice(0,1)}result=latexifyArray(parent,properties,value,options)}else if(typeof value==="number"||typeof value==="boolean"){result=value.toString()}else if(typeof value==="string"){result=value.replace(/\s/g,"~")}else if(value&&typeof value.toLatex==="function"){result=value.toLatex(options)}return result}MathAtom$1.MathAtom.prototype.toLatex=function(options){options=options||{expandMacro:false,outputStyles:true};let result="";let col,row=0;let i=0;const m=!this.latex?null:this.latex.match(/^(\\[^{\s0-9]+)/);const command=m?m[1]:null;switch(this.type){case"group":result+=this.latexOpen||((this.cssId||this.cssClass)&&options.outputStyles?"":"{");if(this.cssId&&options.outputStyles)result+="\\cssId{"+this.cssId+"}{";if(this.cssClass==="ML__emph"&&options.outputStyles){result+="\\emph{"+latexify(this,this.body,options)+"}"}else{if(this.cssClass&&options.outputStyles)result+="\\class{"+this.cssClass+"}{";result+=options.expandMacro?latexify(this,this.body,options):this.latex||latexify(this,this.body,options);if(this.cssClass)result+="}"}if(this.cssId&&options.outputStyles)result+="}";result+=this.latexClose||((this.cssId||this.cssClass)&&options.outputStyles?"":"}");break;case"array":result+="\\begin{"+this.env.name+"}";if(this.env.name==="array"){result+="{";if(this.colFormat){for(i=0;i<this.colFormat.length;i++){if(this.colFormat[i].align){result+=this.colFormat[i].align}else if(this.colFormat[i].rule){result+="|"}}}result+="}"}for(row=0;row<this.array.length;row++){for(col=0;col<this.array[row].length;col++){if(col>0)result+=" & ";result+=latexify(this,this.array[row][col],options)}if(row<this.array.length-1){result+=" \\\\ "}}result+="\\end{"+this.env.name+"}";break;case"root":result=latexify(this,this.body,options);break;case"genfrac":if(/^(choose|atop|over)$/.test(this.body)){result+="{";result+=latexify(this,this.numer,options);result+="\\"+this.body+" ";result+=latexify(this,this.denom,options);result+="}"}else{result+=command;result+=`{${latexify(this,this.numer,options)}}{${latexify(this,this.denom,options)}}`}break;case"surd":result+="\\sqrt";if(this.index){result+="[";result+=latexify(this,this.index,options);result+="]"}result+=`{${latexify(this,this.body,options)}}`;break;case"leftright":if(this.inner){result+="\\left"+(this.leftDelim||".");if(this.leftDelim&&this.leftDelim.length>1)result+=" ";result+=latexify(this,this.body,options);result+="\\right"+(this.rightDelim||".");if(this.rightDelim&&this.rightDelim.length>1)result+=" "}else{result+=this.leftDelim==="."?"":"\\mleft"+(this.leftDelim||".");if(this.leftDelim&&this.leftDelim.length>1)result+=" ";result+=latexify(this,this.body,options);result+=!this.rightDelim||this.rightDelim==="."?"":"\\mright"+(this.rightDelim||".");if(this.rightDelim&&this.rightDelim.length>1)result+=" "}break;case"delim":case"sizeddelim":result+=command+"{"+this.delim+"}";break;case"rule":result+=command;if(this.shift){result+=`[${latexify(this,this.shift,options)}em]`}result+=`{${latexify(this,this.width,options)}em}{${latexify(this,this.height,options)}em}`;break;case"line":case"overlap":case"accent":result+=`${command}{${latexify(this,this.body,options)}}`;break;case"overunder":result+=`${command}{${latexify(this,this.overscript||this.underscript,options)}}{${latexify(parent,this.body,options)}}`;break;case"mord":case"minner":case"mbin":case"mrel":case"mpunct":case"mopen":case"mclose":case"textord":case"":if(/^\\(mathbin|mathrel|mathopen|mathclose|mathpunct|mathord|mathinner)/.test(command)){result+=command+"{"+latexify(this,this.body,options)+"}"}else if(command==='\\char"'){result+=this.latex+" "}else if(command==="\\unicode"){result+='\\unicode{"';result+=("000000"+this.body.charCodeAt(0).toString(16)).toUpperCase().substr(-6);result+="}"}else if(this.latex||typeof this.body==="string"){if(this.latex&&this.latex[0]==="\\"){result+=this.latex;if(/[a-zA-Z0-9]$/.test(this.latex)){result+=" "}}else if(command){result+=command}else{result+=this.body!=="​"?this.latex||this.body:""}}break;case"mop":if(this.body!=="​"){if(command==="\\mathop"){result+=command+"{"+latexify(this,this.body,options)+"}"}else if(command==="\\operatorname"){result+=command+"{"+this.body+"}"}else{if(this.latex&&this.latex[0]==="\\"){result+=this.latex;if(/[a-zA-Z0-9]$/.test(this.latex)){result+=" "}}else if(command){result+=command}else{result+=this.body!=="​"?this.latex||this.body:""}}}if(this.explicitLimits){if(this.limits==="limits")result+="\\limits ";if(this.limits==="nolimits")result+="\\nolimits "}break;case"box":if(command==="\\bbox"){result+=command;if(isFinite(this.padding)||typeof this.border!=="undefined"||typeof this.backgroundcolor!=="undefined"){const bboxParams=[];if(isFinite(this.padding)){bboxParams.push(Math.floor(100*this.padding)/100+"em")}if(this.border){bboxParams.push("border:"+this.border)}if(this.backgroundcolor){bboxParams.push(Color.colorToString(this.backgroundcolor))}result+=`[${bboxParams.join(",")}]`}result+=`{${latexify(this,this.body,options)}}`}else if(command==="\\boxed"){result+=`\\boxed{${latexify(this,this.body,options)}}`}else{result+=command;if(this.framecolor){result+=`{${Color.colorToString(this.framecolor)}}`}if(this.backgroundcolor){result+=`{${Color.colorToString(this.backgroundcolor)}}`}result+=`{${latexify(this,this.body,options)}}`}break;case"spacing":result+=command;if(command==="\\hspace"||command==="\\hspace*"){result+="{";if(this.width){result+=this.width+"em"}else{result+="0em"}result+="}"}else{result+=" ";if(this.width){result+=this.width+"em "}}break;case"enclose":result+=command;if(command==="\\enclose"){result+="{";let sep="";for(const notation in this.notation){if(Object.prototype.hasOwnProperty.call(this.notation,notation)&&this.notation[notation]){result+=sep+notation;sep=" "}}result+="}";let style="";sep="";if(this.backgroundcolor&&this.backgroundcolor!=="transparent"){style+=sep+'mathbackground="'+Color.colorToString(this.backgroundcolor)+'"';sep=","}if(this.shadow&&this.shadow!=="auto"){style+=sep+'shadow="'+this.shadow+'"';sep=","}if(this.strokeWidth!==1||this.strokeStyle!=="solid"){style+=sep+this.borderStyle;sep=","}else if(this.strokeColor&&this.strokeColor!=="currentColor"){style+=sep+'mathcolor="'+Color.colorToString(this.strokeColor)+'"';sep=","}if(style){result+=`[${style}]`}}result+=`{${latexify(this,this.body,options)}}`;break;case"mathstyle":result+="\\"+this.mathstyle+" ";break;case"space":result+=this.latex;break;case"placeholder":result+="\\placeholder{"+(this.value||"")+"}";break;case"first":case"command":case"msubsup":break;case"variable":result+=`\\variable{${latexify(this,this.body,{...options,outputStyles:false})}}`;break;case"error":result+=this.latex;break;default:console.warn('Unexpected atom type "'+this.type+'" in "'+(this.latex||this.value)+'"');break}if(this.superscript){let sup=latexify(this,this.superscript,options);if(sup==="′"){sup="\\prime "}else if(sup==="″"){sup="\\doubleprime "}result+="^{"+sup+"}"}if(this.subscript){const sub=latexify(this,this.subscript,options);result+="_{"+sub+"}"}return result};function l10n(s){const language=l10n.locale.substring(0,2);let result="";if(l10n.strings[l10n.locale])result=l10n.strings[l10n.locale][s];if(!result&&l10n.strings[language])result=l10n.strings[language][s];if(!result)result=l10n.strings["en"][s];if(!result)result=s;return result}l10n.plural=function(value,s,options){options=options||{};options.type=options.type||"cardinal";const language=l10n.locale.substring(0,2);const rules=options.type==="ordinal"?l10n.ordinal:l10n.cardinal;let rule=options.type==="ordinal"?l10n._ordinalPluralCategories.indexOf(rules.select(value)):l10n._cardinalPluralCategories.indexOf(rules.select(value));let result;if(l10n.strings[l10n.locale])result=l10n.strings[l10n.locale][s];if(!result&&l10n.strings[language])result=l10n.strings[language][s];if(!result){result=l10n.strings["en"][s];if(!result)result=s;if(options.type==="ordinal"){rule=l10n._ordinalPluralCategories.indexOf(l10n._ordinalEnglish.select(value))}else{rule=l10n._cardinalPluralCategories.indexOf(l10n._cardinalEnglish.select(value))}}return result.split(";")[rule]||result.split(";")[0]};l10n.merge=function(locale,strings){if(locale&&strings){const savedLocale=l10n._locale;l10n.locale=locale;l10n.strings[locale]={...l10n.strings[locale],...strings};l10n.locale=savedLocale}else if(locale&&!strings){strings=locale;Object.keys(strings).forEach(l=>l10n.merge(l,strings[l]))}};Object.defineProperty(l10n,"locale",{set(locale){l10n._locale=locale;l10n._ordinal=null;l10n._cardinal=null},get(){if(!l10n._locale){l10n._locale=typeof navigator==="undefined"?"en":navigator.language.slice(0,5)}return l10n._locale}});Object.defineProperty(l10n,"ordinal",{get(){if(!l10n._ordinal){l10n._ordinalEnglish=new Intl.PluralRules("en",{type:"ordinal"});l10n._ordinalEnglishPluralCategories=l10n._ordinalEnglish.resolvedOptions().pluralCategories;l10n._ordinal=new Intl.PluralRules(l10n.locale,{type:"ordinal"});l10n._ordinalPluralCategories=l10n._ordinal.resolvedOptions().pluralCategories}return l10n._ordinal}});Object.defineProperty(l10n,"cardinal",{get(){if(!l10n._cardinal){l10n._cardinalEnglish=new Intl.PluralRules("en",{type:"cardinal"});l10n._cardinalEnglishPluralCategories=l10n._cardinalEnglish.resolvedOptions().pluralCategories;l10n._cardinal=new Intl.PluralRules(l10n.locale,{type:"cardinal"});l10n._cardinaPluralCategories=l10n._ordinal.resolvedOptions().pluralCategories}return l10n._cardinal}});l10n.strings={en:{"keyboard.tooltip.functions":"Functions","keyboard.tooltip.greek":"Greek Letters","keyboard.tooltip.command":"LaTeX Command Mode","keyboard.tooltip.numeric":"Numeric","keyboard.tooltip.roman":"Symbols and Roman Letters","tooltip.copy to clipboard":"Copy to Clipboard","tooltip.redo":"Redo","tooltip.toggle virtual keyboard":"Toggle Virtual Keyboard","tooltip.undo":"Undo"},ar:{"keyboard.tooltip.functions":"مهام","keyboard.tooltip.greek":"حروف يونانية","keyboard.tooltip.command":"حالة تلقي الأوامر اللاتك","keyboard.tooltip.numeric":"الرقمية","keyboard.tooltip.roman":"رموز الاحرف الرومانية","tooltip.copy to clipboard":"نسخ إلى الحافظة","tooltip.redo":"الإعادة","tooltip.toggle virtual keyboard":"تبديل لوحة المفاتيح الإفتراضية","tooltip.undo":"إلغاء"},de:{"keyboard.tooltip.functions":"Funktionen","keyboard.tooltip.greek":"Griechische Buchstaben","keyboard.tooltip.command":"LaTeX-Befehlsmodus","keyboard.tooltip.numeric":"Numerisch","keyboard.tooltip.roman":"Symbole und römische Buchstaben","tooltip.copy to clipboard":"In die Zwischenablage kopieren","tooltip.redo":"Wiederholen","tooltip.toggle virtual keyboard":"Virtuelle Tastatur umschalten","tooltip.undo":"Widerrufen"},el:{"keyboard.tooltip.functions":"συναρτήσεις","keyboard.tooltip.greek":"ελληνικά γράμματα","keyboard.tooltip.command":"Λειτουργία εντολών LaTeX","keyboard.tooltip.numeric":"Αριθμητικός","keyboard.tooltip.roman":"Σύμβολα και ρωμαϊκά γράμματα","tooltip.copy to clipboard":"Αντιγραφή στο πρόχειρο","tooltip.redo":"Ξανακάνω","tooltip.toggle virtual keyboard":"Εναλλαγή εικονικού πληκτρολογίου","tooltip.undo":"Ξεκάνω"},es:{"keyboard.tooltip.functions":"Funciones","keyboard.tooltip.greek":"Letras griegas","keyboard.tooltip.command":"Modo Comando LaTeX","keyboard.tooltip.numeric":"Numérico","keyboard.tooltip.roman":"Símbolos y letras romanas","tooltip.copy to clipboard":"Copiar al portapapeles","tooltip.redo":"Rehacer","tooltip.toggle virtual keyboard":"Alternar teclado virtual","tooltip.undo":"Deshacer"},fa:{"keyboard.tooltip.functions":"توابع","keyboard.tooltip.greek":"حروف یونانی","keyboard.tooltip.command":"حالت دستور لاتک","keyboard.tooltip.numeric":"عددی","keyboard.tooltip.roman":"علائم و حروف لاتین","tooltip.copy to clipboard":"کپی به کلیپبورد","tooltip.redo":"بازگشت به بعد","tooltip.toggle virtual keyboard":"نمایش/نهفتن کیبورد مجازی","tooltip.undo":"بازگشت به قبل"},fr:{"keyboard.tooltip.functions":"Fonctions","keyboard.tooltip.greek":"Lettres grecques","keyboard.tooltip.command":"Mode de commandes LaTeX","keyboard.tooltip.numeric":"Numérique","keyboard.tooltip.roman":"Lettres et symboles romains","tooltip.copy to clipboard":"Copier dans le presse-papiers","tooltip.redo":"Rétablir","tooltip.toggle virtual keyboard":"Afficher/Masquer le clavier virtuel","tooltip.undo":"Annuler"},it:{"keyboard.tooltip.functions":"Funzioni","keyboard.tooltip.greek":"Lettere greche","keyboard.tooltip.command":"Modalità di comando LaTeX","keyboard.tooltip.numeric":"Numerico","keyboard.tooltip.roman":"Simboli e lettere romane","tooltip.copy to clipboard":"Copia negli appunti","tooltip.redo":"Rifare","tooltip.toggle virtual keyboard":"Attiva / disattiva la tastiera virtuale","tooltip.undo":"Disfare"},ja:{"keyboard.tooltip.functions":"関数","keyboard.tooltip.greek":"ギリシャ文字","keyboard.tooltip.command":"LaTeXコマンドモード","keyboard.tooltip.numeric":"数値","keyboard.tooltip.roman":"記号とローマ字","tooltip.copy to clipboard":"クリップボードにコピー","tooltip.redo":"やり直し","tooltip.toggle virtual keyboard":"仮想キーボードの切り替え","tooltip.undo":"元に戻す"},pl:{"keyboard.tooltip.functions":"Funkcje","keyboard.tooltip.greek":"Litery greckie","keyboard.tooltip.command":"Tryb poleceń LaTeX","keyboard.tooltip.numeric":"Numeryczne","keyboard.tooltip.roman":"Symbole i litery rzymskie","tooltip.copy to clipboard":"Kopiuj do Schowka","tooltip.redo":"Przywróć","tooltip.toggle virtual keyboard":"Przełącz wirtualną klawiaturę","tooltip.undo":"Cofnij"},ru:{"keyboard.tooltip.functions":"Функции","keyboard.tooltip.greek":"Греческие буквы","keyboard.tooltip.command":"Режим командной строки LaTeX","keyboard.tooltip.numeric":"числовой","keyboard.tooltip.roman":"Символы и римские буквы","tooltip.copy to clipboard":"Скопировать в буфер обмена","tooltip.redo":"переделывать","tooltip.toggle virtual keyboard":"Переключить виртуальную клавиатуру","tooltip.undo":"расстегивать"}};const KEYBOARDS={numeric:{tooltip:"keyboard.tooltip.numeric",layer:"math",label:"123",layers:["math"]},roman:{tooltip:"keyboard.tooltip.roman",layer:"lower-roman",label:"ABC",layers:["lower-roman","upper-roman","symbols"]},greek:{tooltip:"keyboard.tooltip.greek",layer:"lower-greek",label:"&alpha;&beta;&gamma;",classes:"tex-math",layers:["lower-greek","upper-greek"]},functions:{tooltip:"keyboard.tooltip.functions",layer:"functions",label:"<i>f</i>&thinsp;()",classes:"tex",layers:["functions"]},command:{tooltip:"keyboard.tooltip.command",command:"enterCommandMode",label:`<svg><use xlink:href='#svg-command' /></svg>`,layers:["lower-command","upper-command","symbols-command"]},style:{tooltip:"keyboard.tooltip.style",layer:"style",label:"<b>b</b><i>i</i>𝔹"}};const SHIFTED_KEYS={"\\varphi ":{label:"&Phi;",insert:"\\Phi "},"\\varsigma ":{label:"&Sigma;",insert:"\\Sigma "},"\\epsilon ":{label:"&#x0190;",insert:'\\char"0190'},"\\rho ":{label:"&#x3A1",insert:'\\char"3A1'},"\\tau ":{label:"&#x3A4;",insert:'\\char"3A4'},"\\upsilon ":{label:"&Upsilon;",insert:"\\Upsilon "},"\\theta ":{label:"&Theta;",insert:"\\Theta "},"\\iota ":{label:"&Iota;",insert:'\\char"399'},"\\omicron ":{label:"&#x039F;",insert:'\\char"39F'},"\\pi ":{label:"&Pi;",insert:"\\Pi "},"\\alpha ":{label:"&Alpha;",insert:'\\char"391'},"\\sigma ":{label:"&Sigma;",insert:"\\Sigma "},"\\delta ":{label:"&Delta;",insert:"\\Delta "},"\\phi ":{label:"&#x03a6;",insert:"\\Phi "},"\\gamma ":{label:"&Gamma;",insert:"\\Gamma "},"\\eta ":{label:"&Eta;",insert:'\\char"397'},"\\xi ":{label:"&Xi;",insert:"\\Xi "},"\\kappa ":{label:"&Kappa;",insert:'\\char"39A'},"\\lambda ":{label:"&Lambda;",insert:"\\Lambda "},"\\zeta ":{label:"&Zeta;",insert:'\\char"396'},"\\chi ":{label:"&Chi;",insert:'\\char"3A7'},"\\psi ":{label:"&Psi;",insert:"\\Psi "},"\\omega ":{label:"&Omega;",insert:"\\Omega "},"\\beta ":{label:"&Beta;",insert:'\\char"392'},"\\nu ":{label:"&Nu;",insert:'\\char"39D'},"\\mu ":{label:"&Mu;",insert:'\\char"39C'}};const ALT_KEYS_BASE={0:["\\emptyset","\\varnothing","\\infty",{latex:"#?_0",insert:"#@_0"},"\\circ","\\bigcirc","\\bullet"],2:["\\frac{1}{2}",{latex:"#?^2",insert:"#@^2"}],3:["\\frac{1}{3}",{latex:"#?^3",insert:"#@^3"}],".":[",",";","\\colon",{latex:":",aside:"ratio"},{latex:"\\cdotp",aside:"center dot",classes:"box"},{latex:"\\cdots",aside:"center ellipsis",classes:"box"},{latex:"\\ldotp",aside:"low dot",classes:"box"},{latex:"\\ldots",aside:"low ellipsis",classes:"box"},{latex:"\\vdots",aside:"",classes:"box"},{latex:"\\ddots",aside:"",classes:"box"},"\\odot","\\oslash","\\circledcirc"],"*":["\\cdot","\\ast","\\star","\\bigstar","\\ltimes","\\rtimes","\\rightthreetimes","\\leftthreetimes","\\intercal","\\prod",{latex:"\\prod_{n\\mathop=0}^{\\infty}",classes:"small"}],"+":["\\pm","\\mp","\\sum",{latex:"\\sum_{n\\mathop=0}^{\\infty}",classes:"small"},"\\dotplus","\\oplus"],"-":["\\pm","\\mp","\\ominus","\\vert #0  \\vert"],"/":["\\divideontimes","/","\\div"],"(":["\\left( #0\\right)","\\left[ #0\\right]","\\left\\{ #0\\right\\}","\\left\\langle #0\\right\\rangle","\\lfloor","\\llcorner","(","\\lbrack","\\lvert","\\lVert","\\lgroup","\\langle","\\lceil","\\ulcorner","\\lmoustache","\\lbrace"],")":["\\rfloor","\\lrcorner",")","\\rbrack","\\rvert","\\rVert","\\rgroup","\\rangle","\\rceil","\\urcorner","\\rmoustache","\\rbrace"],"=":["\\cong","\\asymp","\\equiv","\\differencedelta","\\varpropto","\\thickapprox","\\approxeq","\\thicksim","\\backsim","\\eqsim","\\simeq","\\Bumpeq","\\bumpeq","\\doteq","\\Doteq","\\fallingdotseq","\\risingdotseq","\\coloneq","\\eqcirc","\\circeq","\\triangleq","\\between"],"!=":["\\neq","\\ncong","","\\nsim"],"<":["\\leq","\\leqq","\\lneqq","\\ll","\\nless","\\nleq","\\precsim","\\lesssim","\\lessgtr","\\prec","\\preccurlyeq","\\lessdot","\\nprec"],">":["\\geq","\\geqq","\\gneqq","\\gg","\\ngtr","\\ngeq","\\succsim","\\gtrsim","\\gtrless","\\succ","\\succcurlyeq","\\gtrdot","\\nsucc"],set:["\\in","\\owns","\\subset","\\nsubset","\\supset","\\nsupset"],"!set":["\\notin","\\backepsilon"],subset:[],supset:[],infinity:["\\aleph_0","\\aleph_1","\\omega","\\mathfrak{m}"],"numeric-pi":["\\prod","\\theta","\\rho","\\sin","\\cos","\\tan"],ee:["\\times 10^{#?}","\\ln","\\log_{10}","\\log"],"^":["_{#?}"],int:[{latex:"\\int_{#?}^{#?}",classes:"small"},{latex:"\\int",classes:"small"},{latex:"\\smallint",classes:"small"},{latex:"\\iint",classes:"small"},{latex:"\\iiint",classes:"small"},{latex:"\\oint",classes:"small"},{latex:"\\dfrac{\\rd}{\\rd x}",classes:"small"},{latex:"\\frac{\\partial}{\\partial x}",classes:"small"},"\\capitalDifferentialD","\\rd","\\partial"],nabla:["\\nabla\\times","\\nabla\\cdot","\\nabla^{2}"],"!":["!!","\\Gamma","\\Pi"],accents:["\\bar{#@}","\\vec{#@}","\\hat{#@}","\\check{#@}","\\dot{#@}","\\ddot{#@}","\\mathring{#@}","\\breve{#@}","\\acute{#@}","\\tilde{#@}","\\grave{#@}"],A:[{latex:"\\aleph",aside:"aleph"},{latex:"\\forall",aside:"for all"}],a:[{latex:"\\aleph",aside:"aleph"},{latex:"\\forall",aside:"for all"}],b:[{latex:"\\beth",aside:"beth"}],B:[{latex:"\\beth",aside:"beth"}],c:[{latex:"\\C",aside:"set of complex numbers"}],d:[{latex:"\\daleth",aside:"daleth"}],D:[{latex:"\\daleth",aside:"daleth"}],e:[{latex:"\\exponentialE",aside:"exponential e"},{latex:"\\exists",aside:"there is"},{latex:"\\nexists",aside:"there isn’t"}],g:[{latex:"\\gimel",aside:"gimel"}],G:[{latex:"\\gimel",aside:"gimel"}],h:[{latex:"\\hbar",aside:"h bar"},{latex:"\\hslash",aside:"h slash"}],i:[{latex:"\\imaginaryI",aside:"imaginary i"}],j:[{latex:"\\imaginaryJ",aside:"imaginary j"}],l:[{latex:"\\ell",aside:"ell"}],n:[{latex:"\\N",aside:"set of natural numbers"}],p:[{latex:"\\P",aside:"set of primes"}],q:[{latex:"\\Q",aside:"set of rational numbers"}],r:[{latex:"\\R",aside:"set of real numbers"}],z:[{latex:"\\Z",aside:"set of integers"}],"x-var":["y","z","t","r",{latex:"f(#?)",classes:"small"},{latex:"g(#?)",classes:"small"},"x^2","x^n","x_n","x_{n+1}","x_i","x_{i+1}"],"n-var":["i","j","p","k","a","u"],ii:["\\Re","\\Im","\\imaginaryJ","\\Vert #0 \\Vert"],logic:[{latex:"\\exists",aside:"there is"},{latex:"\\nexists",aside:"there isn’t"},{latex:"\\ni",aside:"such that"},{latex:"\\Colon",aside:"such that"},{latex:"\\implies",aside:"implies"},{latex:"\\impliedby",aside:"implied by"},{latex:"\\iff",aside:"if and only if"},{latex:"\\land",aside:"and"},{latex:"\\lor",aside:"or"},{latex:"\\oplus",aside:"xor"},{latex:"\\lnot",aside:"not"},{latex:"\\downarrow",aside:"nor"},{latex:"\\uparrow",aside:"nand"},{latex:"\\curlywedge",aside:"nor"},{latex:"\\bar\\curlywedge",aside:"nand"},{latex:"\\therefore",aside:"therefore"},{latex:"\\because",aside:"because"},{latex:"^\\biconditional",aside:"biconditional"},"\\leftrightarrow","\\Leftrightarrow","\\to","\\models","\\vdash","\\gets","\\dashv","\\roundimplies"],"set-operators":["\\cap","\\cup","\\setminus","\\smallsetminus","\\complement"],"set-relations":["\\in","\\notin","\\ni","\\owns","\\subset","\\supset","\\subseteq","\\supseteq","\\subsetneq","\\supsetneq","\\varsubsetneq","\\subsetneqq","\\nsubset","\\nsupset","\\nsubseteq","\\nsupseteq"],space:[{latex:'\\char"203A\\!\\char"2039',insert:"\\!",aside:"negative thin space<br>⁻³⧸₁₈ em"},{latex:'\\unicode{"203A}\\,\\unicode{"2039}',insert:"\\,",aside:"thin space<br>³⧸₁₈ em"},{latex:'\\unicode{"203A}\\:\\unicode{"2039}',insert:"\\:",aside:"medium space<br>⁴⧸₁₈ em"},{latex:'\\unicode{"203A}\\;\\unicode{"2039}',insert:"\\;",aside:"thick space<br>⁵⧸₁₈ em"},{latex:'\\unicode{"203A}\\ \\unicode{"2039}',insert:"\\ ",aside:"⅓ em"},{latex:'\\unicode{"203A}\\enspace\\unicode{"2039}',insert:"\\enspace",aside:"½ em"},{latex:'\\unicode{"203A}\\quad\\unicode{"2039}',insert:"\\quad",aside:"1 em"},{latex:'\\unicode{"203A}\\qquad\\unicode{"2039}',insert:"\\qquad",aside:"2 em"}],delete:[{label:'<span class="warning"><svg><use xlink:href="#svg-trash" /></svg></span>',command:'"deleteAll"'}],"->|":[]};let ALT_KEYS={};const LAYERS={math:`\n        <div class='rows'>\n            <ul>\n                <li class='keycap tex' data-alt-keys='x-var'><i>x</i></li>\n                <li class='keycap tex' data-alt-keys='n-var'><i>n</i></li>\n                <li class='separator w5'></li>\n                <row name='numpad-1'/>\n                <li class='separator w5'></li>\n                <li class='keycap tex' data-key='ee' data-alt-keys='ee'>e</li>\n                <li class='keycap tex' data-key='ii' data-alt-keys='ii'>i</li>\n                <li class='keycap tex' data-latex='\\pi' data-alt-keys='numeric-pi'></li>\n            </ul>\n            <ul>\n                <li class='keycap tex' data-key='<' data-alt-keys='<'>&lt;</li>\n                <li class='keycap tex' data-key='>' data-alt-keys='>'>&gt;</li>\n                <li class='separator w5'></li>\n                <row name='numpad-2'/>\n                <li class='separator w5'></li>\n                <li class='keycap tex' data-alt-keys='x2' data-insert='#@^{2}'><span><i>x</i>&thinsp;²</span></li>\n                <li class='keycap tex' data-alt-keys='^' data-insert='#@^{#?}'><span><i>x</i><sup>&thinsp;<small>&#x2b1a;</small></sup></span></li>\n                <li class='keycap tex' data-alt-keys='sqrt' data-insert='\\sqrt{#0}' data-latex='\\sqrt{#0}'></li>\n            </ul>\n            <ul>\n                <li class='keycap tex' data-alt-keys='(' >(</li>\n                <li class='keycap tex' data-alt-keys=')' >)</li>\n                <li class='separator w5'></li>\n                <row name='numpad-3'/>\n                <li class='separator w5'></li>\n                <li class='keycap tex small' data-alt-keys='int' data-latex='\\int_0^\\infty'><span></span></li>\n                <li class='keycap tex' data-latex='\\forall' data-alt-keys='logic' ></li>\n                <li class='action font-glyph bottom right' data-alt-keys='delete' data-command='["performWithFeedback","deletePreviousChar"]'>&#x232b;</li></ul>\n            </ul>\n            <ul>\n                <li class='keycap' data-alt-keys='foreground-color' data-command='["applyStyle",{"color":"#cc2428"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428; box-sizing: border-box'></span></li>\n                <li class='keycap' data-alt-keys='background-color' data-command='["applyStyle",{"backgroundColor":"#fff590"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590; box-sizing: border-box'></span></li>\n                <li class='separator w5'></li>\n                <row name='numpad-4'/>\n                <li class='separator w5'></li>\n                <arrows/>\n            </ul>\n        </div>\n    `,"lower-roman":`\n        <div class='rows'>\n            <ul>\n                <row name='numpad-1' class='if-wide'/>\n                <row name='lower-1' shift-layer='upper-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-2' class='if-wide'/>\n                <row name='lower-2'  shift-layer='upper-roman''/>\n            </ul>\n            <ul>\n                <row name='numpad-3' class='if-wide'/>\n                <row name='lower-3'  shift-layer='upper-roman''/>\n            </ul>\n            <ul>\n                <row name='numpad-4' class='if-wide'/>\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols'>&infin;≠</li>\n                <li class='keycap' data-alt-keys=','>,</li>\n                <li class='keycap w50' data-key=' ' data-alt-keys='space'>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,"upper-roman":`\n        <div class='rows'>\n            <ul>\n                <row name='numpad-1' class='if-wide'/>\n                <row name='upper-1'  shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-2' class='if-wide'/>\n                <row name='upper-2' shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-3' class='if-wide'/>\n                <row name='upper-3' shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-4' class='if-wide'/>\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols'>&infin;≠</li>\n                <li class='keycap' data-alt-keys='.'>;</li>\n                <li class='keycap w50' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,symbols:`\n        <div class='rows'>\n            <ul>\n                <row name='numpad-1' class='if-wide'/>\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\lbrace '>{</li>\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\rbrace '>}</li>\n                <li class='separator w5'></li>\n                <li class='keycap tex' data-alt-keys='set' data-insert='\\in '>&#x2208;</li>\n                <li class='keycap tex' data-alt-keys='!set' data-insert='\\notin '>&#x2209;</li>\n                <li class='keycap tex' data-insert='\\Re '>&#x211c;<aside>Real</aside></li>\n                <li class='keycap tex' data-insert='\\Im '>&#x2111;<aside>Imaginary</aside></li>\n                <li class='keycap w15' data-insert='\\ulcorner#0\\urcorner '><span><sup>&#x250c;</sup><span><span style='color:#ddd'>o</span><sup>&#x2510;</sup></span><aside>ceil</aside></li>\n                <li class='keycap tex' data-alt-keys='nabla' data-insert='\\nabla '>&#x2207;<aside>nabla</aside></li>\n                <li class='keycap tex' data-alt-keys='infinity' data-insert='\\infty '>&#x221e;</li>\n\n            </ul>\n            <ul>\n                <row name='numpad-2' class='if-wide'/>\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\lbrack '>[</li>\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\rbrack '>]</li>\n                <li class='separator w5'></li>\n                <li class='keycap tex' data-alt-keys='subset' data-insert='\\subset '>&#x2282;</li>\n                <li class='keycap tex' data-alt-keys='supset' data-insert='\\supset '>&#x2283;</li>\n                <li class='keycap tex' data-key='!' data-alt-keys='!'>!<aside>factorial</aside></li>\n                <li class='keycap' data-insert='^{\\prime} '><span><sup><span><span style='color:#ddd'>o</span>&#x2032</sup></span><aside>prime</aside></li>\n                <li class='keycap w15' data-insert='\\llcorner#0\\lrcorner '><span><sub>&#x2514;</sub><span style='color:#ddd'>o</span><sub>&#x2518;</sub></span><aside>floor</aside></li>\n                <li class='keycap tex' data-insert='\\partial '>&#x2202;<aside>partial<br>derivative</aside></li>\n                <li class='keycap tex' data-insert='\\emptyset '>&#x2205;<aside>empty set</aside></li>\n\n            </ul>\n            <ul>\n                <row name='numpad-3' class='if-wide'/>\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\langle '>&#x27e8;</li>\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\rangle '>&#x27e9;</li>\n                <li class='separator w5'></li>\n                <li class='keycap tex' data-insert='\\subseteq '>&#x2286;</li>\n                <li class='keycap tex' data-insert='\\supseteq '>&#x2287;</li>\n                <li class='keycap tex' data-alt-keys='accents' data-insert='\\vec{#@}' data-latex='\\vec{#?}' data-aside='vector'></li>\n                <li class='keycap tex' data-alt-keys='accents' data-insert='\\bar{#@}' data-latex='\\bar{#?}' data-aside='bar'></li>\n                <li class='keycap tex' data-alt-keys='absnorm' data-insert='\\lvert #@ \\rvert ' data-latex='\\lvert #? \\rvert' data-aside='abs'></li>\n                <li class='keycap tex' data-insert='\\ast '>&#x2217;<aside>asterisk</aside></li>\n\n                <li class='action font-glyph bottom right w15'\n                    data-shifted='<span class="warning"><svg><use xlink:href="#svg-trash" /></svg></span>'\n                    data-shifted-command='"deleteAll"'\n                    data-alt-keys='delete' data-command='["performWithFeedback","deletePreviousChar"]'\n                >&#x232b;</li>\n            </ul>\n            <ul>\n                <row name='numpad-4' class='if-wide'/>\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='lower-roman'>abc</li>\n                <li class='keycap tex' data-insert='\\cdot '>&#x22c5;<aside>centered dot</aside></li>\n                <li class='keycap tex' data-insert='\\colon '>:<aside>colon</aside></li>\n                <li class='keycap tex' data-insert='\\circ '>&#x2218;<aside>circle</aside></li>\n                <li class='keycap tex' data-insert='\\approx '>&#x2248;<aside>approx.</aside></li>\n                <li class='keycap tex' data-insert='\\ne '>&#x2260;</li>\n                <li class='keycap tex' data-insert='\\pm '>&#x00b1;</li>\n                <arrows/>\n            </ul>\n        </div>`,"lower-greek":`\n        <div class='rows'>\n            <ul><li class='keycap tex' data-insert='\\varphi '><i>&#x03c6;</i><aside>phi var.</aside></li>\n                <li class='keycap tex' data-insert='\\varsigma '><i>&#x03c2;</i><aside>sigma var.</aside></li>\n                <li class='keycap tex' data-insert='\\epsilon '><i>&#x03f5;</i></li>\n                <li class='keycap tex' data-insert='\\rho '><i>&rho;</i></li>\n                <li class='keycap tex' data-insert='\\tau '><i>&tau;</i></li>\n                <li class='keycap tex' data-insert='\\upsilon '><i>&upsilon;</i></li>\n                <li class='keycap tex' data-insert='\\theta '><i>&theta;</i></li>\n                <li class='keycap tex' data-insert='\\iota '><i>&iota;</i></li>\n                <li class='keycap tex' data-insert='\\omicron '>&omicron;</i></li>\n                <li class='keycap tex' data-insert='\\pi '><i>&pi;</i></li>\n            </ul>\n            <ul><li class='keycap tex' data-insert='\\alpha ' data-shifted='&Alpha;' data-shifted-command='["insert","{\\\\char\\"391}"]'><i>&alpha;</i></li>\n                <li class='keycap tex' data-insert='\\sigma '><i>&sigma;</i></li>\n                <li class='keycap tex' data-insert='\\delta '><i>&delta;</i></li>\n                <li class='keycap tex' data-insert='\\phi '><i>&#x03d5;</i></i></li>\n                <li class='keycap tex' data-insert='\\gamma '><i>&gamma;</i></li>\n                <li class='keycap tex' data-insert='\\eta '><i>&eta;</i></li>\n                <li class='keycap tex' data-insert='\\xi '><i>&xi;</i></li>\n                <li class='keycap tex' data-insert='\\kappa '><i>&kappa;</i></li>\n                <li class='keycap tex' data-insert='\\lambda '><i>&lambda;</i></li>\n            </ul>\n            <ul><li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='upper-greek'>&#x21e7;</li>\n                <li class='keycap tex' data-insert='\\zeta '><i>&zeta;</i></li>\n                <li class='keycap tex' data-insert='\\chi '><i>&chi;</i></li>\n                <li class='keycap tex' data-insert='\\psi '><i>&psi;</i></li>\n                <li class='keycap tex' data-insert='\\omega '><i>&omega;</i></li>\n                <li class='keycap tex' data-insert='\\beta '><i>&beta;</i></li>\n                <li class='keycap tex' data-insert='\\nu '><i>&nu;</i></li>\n                <li class='keycap tex' data-insert='\\mu '><i>&mu;</i></li>\n                <li class='action font-glyph bottom right w15'\n                    data-shifted='<span class="warning"><svg><use xlink:href="#svg-trash" /></svg></span>'\n                    data-shifted-command='"deleteAll"'\n                    data-alt-keys='delete' data-command='["performWithFeedback","deletePreviousChar"]'\n                >&#x232b;</li>\n            </ul>\n            <ul>\n                <li class='keycap ' data-key=' '>&nbsp;</li>\n                <li class='keycap'>,</li>\n                <li class='keycap tex' data-insert='\\varepsilon '><i>&#x03b5;</i><aside>epsilon var.</aside></li>\n                <li class='keycap tex' data-insert='\\vartheta '><i>&#x03d1;</i><aside>theta var.</aside></li>\n                <li class='keycap tex' data-insert='\\varkappa '><i>&#x3f0;</i><aside>kappa var.</aside></li>\n                <li class='keycap tex' data-insert='\\varpi '><i>&#x03d6;<aside>pi var.</aside></i></li>\n                <li class='keycap tex' data-insert='\\varrho '><i>&#x03f1;</i><aside>rho var.</aside></li>\n                <arrows/>\n            </ul>\n        </div>`,"upper-greek":`\n        <div class='rows'>\n            <ul><li class='keycap tex' data-insert='\\Phi '>&Phi;<aside>phi</aside></li>\n                <li class='keycap tex' data-insert='\\Sigma '>&Sigma;<aside>sigma</aside></li>\n                <li class='keycap tex' data-insert='\\char"0190'>&#x0190;<aside>epsilon</aside></li>\n                <li class='keycap tex' data-insert='\\char"3A1'>&#x3A1;<aside>rho</aside></li>\n                <li class='keycap tex' data-insert='\\char"3A4'>&#x3A4;<aside>tau</aside></li>\n                <li class='keycap tex' data-insert='\\Upsilon '>&Upsilon;<aside>upsilon</aside></li>\n                <li class='keycap tex' data-insert='\\Theta '>&Theta;<aside>theta</aside></li>\n                <li class='keycap tex' data-insert='\\char"399'>&Iota;<aside>iota</aside></li>\n                <li class='keycap tex' data-insert='\\char"39F'>&#x039F;<aside>omicron</aside></li>\n                <li class='keycap tex' data-insert='\\Pi '>&Pi;<aside>pi</aside></li></ul>\n            <ul><li class='keycap tex' data-insert='\\char"391'>&#x391;<aside>alpha</aside></li>\n                <li class='keycap tex' data-insert='\\Sigma '>&Sigma;<aside>sigma</aside></li>\n                <li class='keycap tex' data-insert='\\Delta '>&Delta;<aside>delta</aside></li>\n                <li class='keycap tex' data-insert='\\Phi '>&#x03a6;<aside>phi</aside></li>\n                <li class='keycap tex' data-insert='\\Gamma '>&Gamma;<aside>gamma</aside></li>\n                <li class='keycap tex' data-insert='\\char"397'>&Eta;<aside>eta</aside></li>\n                <li class='keycap tex' data-insert='\\Xi '>&Xi;<aside>xi</aside></li>\n                <li class='keycap tex' data-insert='\\char"39A'>&Kappa;<aside>kappa</aside></li>\n                <li class='keycap tex' data-insert='\\Lambda '>&Lambda;<aside>lambda</aside></li></ul>\n            <ul><li class='shift modifier font-glyph bottom left selected w15 layer-switch' data-layer='lower-greek'>&#x21e7;</li>\n                <li class='keycap tex' data-insert='\\char"396'>&Zeta;<aside>zeta</aside></li>\n                <li class='keycap tex' data-insert='\\char"3A7'>&Chi;<aside>chi</aside></li>\n                <li class='keycap tex' data-insert='\\Psi '>&Psi;<aside>psi</aside></li>\n                <li class='keycap tex' data-insert='\\Omega '>&Omega;<aside>omega</aside></li>\n                <li class='keycap tex' data-insert='\\char"392'>&Beta;<aside>beta</aside></li>\n                <li class='keycap tex' data-insert='\\char"39D'>&Nu;<aside>nu</aside></li>\n                <li class='keycap tex' data-insert='\\char"39C'>&Mu;<aside>mu</aside></li>\n                <li class='action font-glyph bottom right w15' data-command='["performWithFeedback","deletePreviousChar"]'>&#x232b;</li></ul>\n            <ul>\n                <li class='separator w10'>&nbsp;</li>\n                <li class='keycap'>.</li>\n                <li class='keycap w50' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,"lower-command":`\n        <div class='rows'>\n            <ul><row name='lower-1' class='tt' shift-layer='upper-command'/></ul>\n            <ul><row name='lower-2' class='tt' shift-layer='upper-command'/></ul>\n            <ul><row name='lower-3' class='tt' shift-layer='upper-command'/></ul>\n            <ul>\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols-command'>01#</li>\n                <li class='keycap tt' data-shifted='[' data-shifted-command='["insertAndUnshiftKeyboardLayer", "["]'>{</li>\n                <li class='keycap tt' data-shifted=']' data-shifted-command='["insertAndUnshiftKeyboardLayer", "]"]'>}</li>\n                <li class='keycap tt' data-shifted='(' data-shifted-command='["insertAndUnshiftKeyboardLayer", "("]'>^</li>\n                <li class='keycap tt' data-shifted=')' data-shifted-command='["insertAndUnshiftKeyboardLayer", ")"]'>_</li>\n                <li class='keycap w20' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,"upper-command":`\n        <div class='rows'>\n            <ul><row name='upper-1' class='tt' shift-layer='lower-command'/></ul>\n            <ul><row name='upper-2' class='tt' shift-layer='lower-command'/></ul>\n            <ul><row name='upper-3' class='tt' shift-layer='lower-command'/></ul>\n            <ul>\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols-command'01#</li>\n                <li class='keycap tt'>[</li>\n                <li class='keycap tt'>]</li>\n                <li class='keycap tt'>(</li>\n                <li class='keycap tt'>)</li>\n                <li class='keycap w20' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,"symbols-command":`\n        <div class='rows'>\n            <ul><li class='keycap tt'>1</li><li class='keycap tt'>2</li><li class='keycap tt'>3</li><li class='keycap tt'>4</li><li class='keycap tt'>5</li><li class='keycap tt'>6</li><li class='keycap tt'>7</li><li class='keycap tt'>8</li><li class='keycap tt'>9</li><li class='keycap tt'>0</li></ul>\n            <ul><li class='keycap tt'>!</li><li class='keycap tt'>@</li><li class='keycap tt'>#</li><li class='keycap tt'>$</li><li class='keycap tt'>%</li><li class='keycap tt'>^</li><li class='keycap tt'>&</li><li class='keycap tt'>*</li><li class='keycap tt'>+</li><li class='keycap tt'>=</li></ul>\n            <ul>\n                <li class='keycap tt'>\\</li>\n                <li class='keycap tt'>|</li>\n                <li class='keycap tt'>/</li>\n                <li class='keycap tt'>\`</li>\n                <li class='keycap tt'>;</li>\n                <li class='keycap tt'>:</li>\n                <li class='keycap tt'>?</li>\n                <li class='keycap tt'>'</li>\n                <li class='keycap tt'>"</li>\n                <li class='action font-glyph bottom right'\n                    data-shifted='<span class="warning"><svg><use xlink:href="#svg-trash" /></svg></span>'\n                    data-shifted-command='"deleteAll"'\n                    data-alt-keys='delete' data-command='["performWithFeedback","deletePreviousChar"]'\n                >&#x232b;</li>\n            </ul>\n            <ul>\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='lower-command'>abc</li>\n                <li class='keycap tt'>&lt;</li>\n                <li class='keycap tt'>&gt;</li>\n                <li class='keycap tt'>~</li>\n                <li class='keycap tt'>,</li>\n                <li class='keycap tt'>.</li>\n                <li class='keycap' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,functions:`\n        <div class='rows'>\n            <ul><li class='separator'></li>\n                <li class='fnbutton' data-insert='\\sin'></li>\n                <li class='fnbutton' data-insert='\\sin^{-1}'></li>\n                <li class='fnbutton' data-insert='\\ln'></li>\n                <li class='fnbutton' data-insert='\\exponentialE^{#?}'></li>\n                <li class='bigfnbutton' data-insert='\\operatorname{lcm}(#?)' data-latex='\\operatorname{lcm}()'></li>\n                <li class='bigfnbutton' data-insert='\\operatorname{ceil}(#?)' data-latex='\\operatorname{ceil}()'></li>\n                <li class='bigfnbutton' data-insert='\\lim_{n\\to\\infty}'></li>\n                <li class='bigfnbutton' data-insert='\\int'></li>\n                <li class='bigfnbutton' data-insert='\\operatorname{abs}(#?)' data-latex='\\operatorname{abs}()'></li>\n            </ul>\n            <ul><li class='separator'></li>\n                <li class='fnbutton' data-insert='\\cos'></li>\n                <li class='fnbutton' data-insert='\\cos^{-1}'></li>\n                <li class='fnbutton' data-insert='\\log_{10}'></li>\n                <li class='fnbutton' data-insert='10^{#?}'></li>\n                <li class='bigfnbutton' data-insert='\\operatorname{gcd}(#?)' data-latex='\\operatorname{gcd}()'></li>\n                <li class='bigfnbutton' data-insert='\\operatorname{floor}(#?)' data-latex='\\operatorname{floor}()'></li>\n                <li class='bigfnbutton' data-insert='\\sum_{n\\mathop=0}^{\\infty}'></li>\n                <li class='bigfnbutton' data-insert='\\int_{0}^{\\infty}'></li>\n                <li class='bigfnbutton' data-insert='\\operatorname{sign}(#?)' data-latex='\\operatorname{sign}()'></li>\n            </ul>\n            <ul><li class='separator'></li>\n                <li class='fnbutton' data-insert='\\tan'></li>\n                <li class='fnbutton' data-insert='\\tan^{-1}'></li>\n                <li class='fnbutton' data-insert='\\log_{#?}'></li>\n                <li class='fnbutton' data-insert='\\sqrt[#?]{#0}'></li>\n                <li class='bigfnbutton' data-insert='#0 \\mod' data-latex='\\mod'></li>\n                <li class='bigfnbutton' data-insert='\\operatorname{round}(#?) ' data-latex='\\operatorname{round}()'></li>\n                <li class='bigfnbutton' data-insert='\\prod_{n\\mathop=0}^{\\infty}' data-latex='{\\tiny \\prod_{n=0}^{\\infty}}'></li>\n                <li class='bigfnbutton' data-insert='\\frac{\\differentialD #0}{\\differentialD x}'></li>\n                <li class='action font-glyph bottom right' data-command='["performWithFeedback","deletePreviousChar"]'>&#x232b;</li></ul>\n            <ul><li class='separator'></li>\n                <li class='fnbutton'>(</li>\n                <li class='fnbutton'>)</li>\n                <li class='fnbutton' data-insert='^{#?} ' data-latex='x^{#?} '></li>\n                <li class='fnbutton' data-insert='_{#?} ' data-latex='x_{#?} '></li>\n                <li class='keycap w20 ' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,style:`\n        <div class='rows'>\n            <ul>\n                <li class='keycap' data-alt-keys='foreground-color' data-command='["applyStyle",{"color":"#cc2428"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428'></span></li>\n                <li class='keycap' data-alt-keys='background-color' data-command='["applyStyle",{"backgroundColor":"#fff590"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590'></span></li>\n                <li class='separator w5'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontSize":"size3"}]' data-latex='\\scriptsize\\text{small}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontSize":"size5"}]' data-latex='\\scriptsize\\text{normal}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontSize":"size9"}]' data-latex='\\huge\\text{big}'></li>\n                <li class='separator w5'></li>\n                <li class='keycap' data-latex='\\langle' data-command='["insert", "\\\\langle", {"smartFence":true}]'></li>\n            </ul>\n            <ul>\n                <li class='keycap' data-command='["applyStyle",{"fontSeries":"l"}]' data-latex='\\fontseries{l}\\text{Ab}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontSeries":"m"}]' data-latex='\\fontseries{m}\\text{Ab}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontSeries":"b"}]' data-latex='\\fontseries{b}\\text{Ab}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontSeries":"bx"}]' data-latex='\\fontseries{bx}\\text{Ab}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontSeries":"sb"}]' data-latex='\\fontseries{sb}\\text{Ab}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontSeries":"c"}]' data-latex='\\fontseries{c}\\text{Ab}'></li>\n            </ul>\n            <ul>\n                <li class='keycap' data-command='["applyStyle",{"fontShape":"n"}]' data-latex='\\textup{Ab}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontShape":"it"}]' data-latex='\\textit{Ab}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontShape":"sl"}]' data-latex='\\textsl{Ab}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontShape":"sc"}]' data-latex='\\textsc{Ab}'></li>\n                <li class='separator w5'></li>\n                <li class='keycap' data-insert='\\emph{#?} ' data-latex='\\text{\\emph{emph}}'></li>\n            </ul>\n            <ul>\n                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cmr"}]' data-latex='\\textrm{Az}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cmtt"}]' data-latex='\\texttt{Az}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cmss"}]' data-latex='\\textsf{Az}'></li>\n\n                <li class='keycap' data-command='["applyStyle",{"fontFamily":"bb"}]'  data-latex='\\mathbb{Az}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontFamily":"scr"}]'  data-latex='\\mathscr{Az}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cal"}]' data-latex='\\mathcal{Az}'></li>\n                <li class='keycap' data-command='["applyStyle",{"fontFamily":"frak"}]' data-latex='\\mathfrak{Az}'></li>\n            </ul>\n        </div>`};function latexToMarkup$1(latex,arg,mf){latex=latex.replace(/(^|[^\\])#@/g,"$1#?");const parse=ParserModule.parseTokens(Lexer$1.tokenize(latex),"math",arg,mf.config.macros);const spans=MathAtom$1.decompose({mathstyle:"displaystyle",macros:mf.config.macros},parse);const base=Span$1.makeSpan(spans,"ML__base");const topStrut=Span$1.makeSpan("","ML__strut");topStrut.setStyle("height",base.height,"em");const bottomStrut=Span$1.makeSpan("","ML__strut--bottom");bottomStrut.setStyle("height",base.height+base.depth,"em");bottomStrut.setStyle("vertical-align",-base.depth,"em");const wrapper=Span$1.makeSpan([topStrut,bottomStrut,base],"ML__mathlive");return wrapper.toMarkup()}function makeKeyboardToolbar(mf,keyboardIDs,currentKeyboard){let result="<div class='left'>";const keyboardList=keyboardIDs.replace(/\s+/g," ").split(" ");if(keyboardList.length>1){const keyboards=Object.assign({},KEYBOARDS,mf.config.customVirtualKeyboards||{});for(const keyboard of keyboardList){if(!keyboards[keyboard]){console.error('Unknown virtual keyboard "'+keyboard+'"');break}result+="<div class='";if(keyboard===currentKeyboard){result+="selected "}else{if(keyboards[keyboard].command){result+="action "}else{result+="layer-switch "}}result+=(keyboards[keyboard].classes||"")+"'";if(keyboards[keyboard].tooltip){result+="data-tooltip='"+l10n(keyboards[keyboard].tooltip)+"' ";result+="data-placement='top' data-delay='1s'"}if(keyboard!==currentKeyboard){if(keyboards[keyboard].command){result+="data-command='\""+keyboards[keyboard].command+"\"'"}if(keyboards[keyboard].layer){result+="data-layer='"+keyboards[keyboard].layer+"'"}}result+=">"+keyboards[keyboard].label+"</div>"}}result+="</div>";result+=`\n        <div class='right'>\n            <div class='action'\n                data-command='"copyToClipboard"'\n                data-tooltip='${l10n("tooltip.copy to clipboard")}' data-placement='top' data-delay='1s'>\n                <svg><use xlink:href='#svg-copy' /></svg>\n            </div>\n            <div class='action disabled'\n                data-command='"undo"'\n                data-tooltip='${l10n("tooltip.undo")}' data-placement='top' data-delay='1s'>\n                <svg><use xlink:href='#svg-undo' /></svg>\n            </div>\n            <div class='action disabled'\n                data-command='"redo"'\n                data-tooltip='${l10n("tooltip.redo")}' data-placement='top' data-delay='1s'>\n                <svg><use xlink:href='#svg-redo' /></svg>\n            </div>\n        </div>\n    `;return"<div class='keyboard-toolbar' role='toolbar'>"+result+"</div>"}function makeKeycap(mf,elList,chainedCommand){for(let i=0;i<elList.length;++i){const el=elList[i];if(el.getAttribute("data-latex")){el.innerHTML=latexToMarkup$1(el.getAttribute("data-latex").replace(/&quot;/g,'"'),{"?":'{\\color{#555}{\\tiny \\char"2B1A}}'},mf)}else if(el.innerHTML===""&&el.getAttribute("data-insert")){el.innerHTML=latexToMarkup$1(el.getAttribute("data-insert").replace(/&quot;/g,'"'),{"?":'{\\color{#555}{\\tiny \\char"2B1A}}'},mf)}else if(el.getAttribute("data-content")){el.innerHTML=el.getAttribute("data-content").replace(/&quot;/g,'"')}if(el.getAttribute("data-aside")){el.innerHTML+="<aside>"+el.getAttribute("data-aside").replace(/&quot;/g,'"')+"</aside>"}if(el.getAttribute("data-classes")){el.classList.add(el.getAttribute("data-classes"))}let key=el.getAttribute("data-insert");if(key)key=key.replace(/&quot;/g,'"');if(key&&SHIFTED_KEYS[key]){el.setAttribute("data-shifted",SHIFTED_KEYS[key].label);el.setAttribute("data-shifted-command",JSON.stringify(["insertAndUnshiftKeyboardLayer",SHIFTED_KEYS[key].insert]))}let handlers;if(el.getAttribute("data-command")){handlers=JSON.parse(el.getAttribute("data-command"))}else if(el.getAttribute("data-insert")){handlers=["insert",el.getAttribute("data-insert"),{focus:true,feedback:true,mode:"math",format:"auto",resetStyle:true}]}else if(el.getAttribute("data-latex")){handlers=["insert",el.getAttribute("data-latex"),{focus:true,feedback:true,mode:"math",format:"auto",resetStyle:true}]}else{handlers=["typedText",el.getAttribute("data-key")||el.textContent,{focus:true,feedback:true,simulateKeystroke:true}]}if(chainedCommand){handlers=[chainedCommand,handlers]}const altKeysValue=el.getAttribute("data-alt-keys");if(altKeysValue){const altKeys=ALT_KEYS[altKeysValue];if(altKeys){handlers={default:handlers,pressAndHoldStart:["showAlternateKeys",altKeysValue,altKeys],pressAndHoldEnd:"hideAlternateKeys"}}else{console.warn("Unknown alt key set: ",altKeysValue)}}mf._attachButtonHandlers(el,handlers)}}function expandLayerMarkup(mf,layer){const ROWS={qwerty:{"lower-1":"qwertyuiop","lower-2":" asdfghjkl ","lower-3":"^zxcvbnm~","upper-1":"QWERTYUIOP","upper-2":" ASDFGHJKL ","upper-3":"^ZXCVBNM~","numpad-1":"789/","numpad-2":"456*","numpad-3":"123-","numpad-4":"0.=+"},azerty:{"lower-1":"azertyuiop","lower-2":"qsdfghjklm","lower-3":"^ wxcvbn ~","upper-1":"AZERTYUIOP","upper-2":"QSDFGHJKLM","upper-3":"^ WXCVBN ~"},qwertz:{"lower-1":"qwertzuiop","lower-2":" asdfghjkl ","lower-3":"^yxcvbnm~","upper-1":"QWERTZUIOP","upper-2":" ASDFGHJKL","upper-3":"^YXCVBNM~"},dvorak:{"lower-1":"^  pyfgcrl ","lower-2":"aoeuidhtns","lower-3":"qjkxbmwvz~","upper-1":"^  PYFGCRL ","upper-2":"AOEUIDHTNS","upper-3":"QJKXBMWVZ~"},colemak:{"lower-1":" qwfpgjluy ","lower-2":"arstdhneio","lower-3":"^zxcvbkm~","upper-1":" QWFPGNLUY ","upper-2":"ARSTDHNEIO","upper-3":"^ZXCVBKM~"}};const layout=ROWS[mf.config.virtualKeyboardLayout]?ROWS[mf.config.virtualKeyboardLayout]:ROWS["qwerty"];let result=layer;let row;result=result.replace(/<arrows\/>/g,`\n        <li class='action' data-command='["performWithFeedback","moveToPreviousChar"]'\n            data-shifted='<svg><use xlink:href="#svg-angle-double-left" /></svg>'\n            data-shifted-command='["performWithFeedback","extendToPreviousChar"]'>\n            <svg><use xlink:href='#svg-arrow-left' /></svg>\n        </li>\n        <li class='action' data-command='["performWithFeedback","moveToNextChar"]'\n            data-shifted='<svg><use xlink:href="#svg-angle-double-right" /></svg>'\n            data-shifted-command='["performWithFeedback","extendToNextChar"]'>\n            <svg><use xlink:href='#svg-arrow-right' /></svg>\n        </li>\n        <li class='action' data-command='["performWithFeedback","moveToNextPlaceholder"]'>\n        <svg><use xlink:href='#svg-tab' /></svg></li>`);let m=result.match(/(<row\s+)(.*)((?:<\/row|\/)>)/);while(m){row="";const attributesArray=m[2].match(/[a-zA-Z][a-zA-Z0-9-]*=(['"])(.*?)\1/g);const attributes={};for(const attribute of attributesArray){const m2=attribute.match(/([a-zA-Z][a-zA-Z0-9-]*)=(['"])(.*?)\2/);attributes[m2[1]]=m2[3]}let keys=layout[attributes["name"]];if(!keys)keys=ROWS["qwerty"][attributes["name"]];if(!keys){console.warn("Unknown roman keyboard row: "+attributes["name"])}else{for(const c of keys){let cls=attributes["class"]||"";if(cls)cls=" "+cls;if(c==="~"){row+=`<li class='action font-glyph bottom right `;row+=keys.length-(keys.match(/ /g)||[]).length/2===10?"w10":"w15";row+=`' data-shifted='<span class="warning"><svg><use xlink:href="#svg-trash" /></svg></span>'\n                        data-shifted-command='"deleteAll"'\n                        data-alt-keys='delete' data-command='["performWithFeedback","deletePreviousChar"]'\n                        >&#x232b;</li>`}else if(c===" "){row+="<li class='separator w5'></li>"}else if(c==="^"){row+=`<li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='`+attributes["shift-layer"]+`'>&#x21e7;</li>`}else if(c==="/"){row+="<li class='keycap"+cls+"' data-alt-keys='/' data-insert='\\frac{#0}{#?}'>&divide;</li>"}else if(c==="*"){row+="<li class='keycap"+cls+"' data-alt-keys='*' data-insert='\\times '>&times;</li>"}else if(c==="-"){row+="<li class='keycap"+cls+"' data-alt-keys='*' data-key='-' data-alt-keys='-'>&#x2212;</li>"}else if(/tt/.test(cls)){row+="<li class='keycap"+cls+"' data-alt-keys='"+c+"'"+` data-command='["typedText","`+c+`",{"commandMode":true, "focus":true, "feedback":true}]'`+">"+c+"</li>"}else{row+="<li class='keycap"+cls+"' data-alt-keys='"+c+"'>"+c+"</li>"}}}result=result.replace(new RegExp(m[1]+m[2]+m[3]),row);m=result.match(/(<row\s+)(.*)((?:<\/row|\/)>)/)}return result}function make(mf,theme){const svgIcons=`<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">\n\n            <symbol id="svg-command" viewBox="0 0 640 512">\n                <path d="M34.495 36.465l211.051 211.05c4.686 4.686 4.686 12.284 0 16.971L34.495 475.535c-4.686 4.686-12.284 4.686-16.97 0l-7.071-7.07c-4.686-4.686-4.686-12.284 0-16.971L205.947 256 10.454 60.506c-4.686-4.686-4.686-12.284 0-16.971l7.071-7.07c4.686-4.687 12.284-4.687 16.97 0zM640 468v-10c0-6.627-5.373-12-12-12H300c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h328c6.627 0 12-5.373 12-12z"/>\n            </symbol>\n\n            <symbol id="svg-undo" viewBox="0 0 512 512">\n                <path d="M20 8h10c6.627 0 12 5.373 12 12v110.625C85.196 57.047 165.239 7.715 256.793 8.001 393.18 8.428 504.213 120.009 504 256.396 503.786 393.181 392.834 504 256 504c-63.926 0-122.202-24.187-166.178-63.908-5.113-4.618-5.354-12.561-.482-17.433l7.069-7.069c4.503-4.503 11.749-4.714 16.482-.454C150.782 449.238 200.935 470 256 470c117.744 0 214-95.331 214-214 0-117.744-95.331-214-214-214-82.862 0-154.737 47.077-190.289 116H180c6.627 0 12 5.373 12 12v10c0 6.627-5.373 12-12 12H20c-6.627 0-12-5.373-12-12V20c0-6.627 5.373-12 12-12z"/>\n            </symbol>\n            <symbol id="svg-redo" viewBox="0 0 512 512">\n                <path d="M492 8h-10c-6.627 0-12 5.373-12 12v110.625C426.804 57.047 346.761 7.715 255.207 8.001 118.82 8.428 7.787 120.009 8 256.396 8.214 393.181 119.166 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-7.069-7.069c-4.503-4.503-11.749-4.714-16.482-.454C361.218 449.238 311.065 470 256 470c-117.744 0-214-95.331-214-214 0-117.744 95.331-214 214-214 82.862 0 154.737 47.077 190.289 116H332c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h160c6.627 0 12-5.373 12-12V20c0-6.627-5.373-12-12-12z"/>\n            </symbol>\n            <symbol id="svg-arrow-left" viewBox="0 0 192 512">\n                <path d="M25.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L64.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L25 264.5c-4.6-4.7-4.6-12.3.1-17z"/>\n            </symbol>\n            <symbol id="svg-arrow-right" viewBox="0 0 192 512">\n                    <path d="M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17z"/>\n            </symbol>\n            <symbol id="svg-tab" viewBox="0 0 448 512">\n                    <path d="M32 217.1c0-8.8 7.2-16 16-16h144v-93.9c0-7.1 8.6-10.7 13.6-5.7l143.5 143.1c6.3 6.3 6.3 16.4 0 22.7L205.6 410.4c-5 5-13.6 1.5-13.6-5.7v-93.9H48c-8.8 0-16-7.2-16-16v-77.7m-32 0v77.7c0 26.5 21.5 48 48 48h112v61.9c0 35.5 43 53.5 68.2 28.3l143.6-143c18.8-18.8 18.8-49.2 0-68L228.2 78.9c-25.1-25.1-68.2-7.3-68.2 28.3v61.9H48c-26.5 0-48 21.6-48 48zM436 64h-8c-6.6 0-12 5.4-12 12v360c0 6.6 5.4 12 12 12h8c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12z"/>\n            </symbol>\n            <symbol id="svg-copy" viewBox="0 0 448 512">\n                <path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM352 32.491a15.88 15.88 0 0 1 7.431 4.195l51.882 51.883A15.885 15.885 0 0 1 415.508 96H352V32.491zM288 464c0 8.822-7.178 16-16 16H48c-8.822 0-16-7.178-16-16V144c0-8.822 7.178-16 16-16h80v240c0 26.51 21.49 48 48 48h112v48zm128-96c0 8.822-7.178 16-16 16H176c-8.822 0-16-7.178-16-16V48c0-8.822 7.178-16 16-16h144v72c0 13.2 10.8 24 24 24h72v240z"/>\n            </symbol>\n            <symbol id="svg-angle-double-right" viewBox="0 0 320 512">\n                <path d="M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17zm128-17l-117.8-116c-4.7-4.7-12.3-4.7-17 0l-7.1 7.1c-4.7 4.7-4.7 12.3 0 17L255.3 256 153.1 356.4c-4.7 4.7-4.7 12.3 0 17l7.1 7.1c4.7 4.7 12.3 4.7 17 0l117.8-116c4.6-4.7 4.6-12.3-.1-17z"/>\n            </symbol>\n            <symbol id="svg-angle-double-left" viewBox="0 0 320 512">\n                <path d="M153.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L192.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L153 264.5c-4.6-4.7-4.6-12.3.1-17zm-128 17l117.8 116c4.7 4.7 12.3 4.7 17 0l7.1-7.1c4.7-4.7 4.7-12.3 0-17L64.7 256l102.2-100.4c4.7-4.7 4.7-12.3 0-17l-7.1-7.1c-4.7-4.7-12.3-4.7-17 0L25 247.5c-4.6 4.7-4.6 12.3.1 17z"/>\n            </symbol>\n            <symbol id="svg-trash" viewBox="0 0 448 512">\n                <path d="M336 64l-33.6-44.8C293.3 7.1 279.1 0 264 0h-80c-15.1 0-29.3 7.1-38.4 19.2L112 64H24C10.7 64 0 74.7 0 88v2c0 3.3 2.7 6 6 6h26v368c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V96h26c3.3 0 6-2.7 6-6v-2c0-13.3-10.7-24-24-24h-88zM184 32h80c5 0 9.8 2.4 12.8 6.4L296 64H152l19.2-25.6c3-4 7.8-6.4 12.8-6.4zm200 432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V96h320v368zm-176-44V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm-80 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm160 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12z"/>\n            </symbol>\n        </svg>\n        `;let markup=svgIcons;ALT_KEYS_BASE["foreground-color"]=[];for(const color of Color.LINE_COLORS){ALT_KEYS_BASE["foreground-color"].push({classes:"small-button",content:'<span style="border-radius:50%;width:32px;height:32px; box-sizing: border-box; border: 3px solid '+color+'"></span>',command:'["applyStyle",{"color":"'+color+'"}]'})}ALT_KEYS_BASE["background-color"]=[];for(const color of Color.AREA_COLORS){ALT_KEYS_BASE["background-color"].push({classes:"small-button",content:'<span style="border-radius:50%;width:32px;height:32px; background:'+color+'"></span>',command:'["applyStyle",{"backgroundColor":"'+color+'"}]'})}ALT_KEYS={...ALT_KEYS_BASE};Object.keys(ALT_KEYS).forEach(key=>{ALT_KEYS[key]=ALT_KEYS[key].slice()});const upperAlpha="ABCDEFGHIJKLMNOPQRSTUVWXYZ";const lowerAlpha="abcdefghijklmnopqrstuvwxyz";const digits="0123456789";for(let i=0;i<26;i++){const key=upperAlpha[i];if(!ALT_KEYS[key])ALT_KEYS[key]=[];ALT_KEYS[key].unshift({latex:"\\mathbb{"+key+"}",aside:"blackboard",insert:"\\mathbb{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathbf{"+key+"}",aside:"bold",insert:"\\mathbf{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathsf{"+key+"}",aside:"sans",insert:"\\mathsf{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathtt{"+key+"}",aside:"monospace",insert:"\\mathtt{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathcal{"+key+"}",aside:"script",insert:"\\mathcal{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathfrak{"+key+"}",aside:"fraktur",insert:"\\mathfrak{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathbb{"+lowerAlpha[i]+"}",aside:"blackboard",insert:"\\mathbb{"+lowerAlpha[i]+"}"});ALT_KEYS[key].unshift({latex:"\\mathbf{"+lowerAlpha[i]+"}",aside:"bold",insert:"\\mathbf{"+lowerAlpha[i]+"}"});ALT_KEYS[key].unshift({latex:"\\mathsf{"+lowerAlpha[i]+"}",aside:"sans",insert:"\\mathsf{"+lowerAlpha[i]+"}"});ALT_KEYS[key].unshift({latex:"\\mathcal{"+lowerAlpha[i]+"}",aside:"script",insert:"\\mathcal{"+lowerAlpha[i]+"}"});ALT_KEYS[key].unshift({latex:"\\mathfrak{"+lowerAlpha[i]+"}",aside:"fraktur",insert:"\\mathfrak{"+lowerAlpha[i]+"}"})}for(let i=0;i<=26;i++){const key=lowerAlpha[i];if(!ALT_KEYS[key])ALT_KEYS[key]=[];ALT_KEYS[key].unshift({latex:"\\mathsf{"+key+"}",aside:"sans",insert:"\\mathbb{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathbf{"+key+"}",aside:"bold",insert:"\\mathbf{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathtt{"+key+"}",aside:"monospace",insert:"\\mathtt{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathfrak{"+key+"}",aside:"fraktur",insert:"\\mathfrak{"+key+"}"})}for(let i=0;i<10;i++){const key=digits[i];if(!ALT_KEYS[key])ALT_KEYS[key]=[];ALT_KEYS[key].unshift({latex:"\\mathbf{"+key+"}",aside:"bold",insert:"\\mathbf{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathsf{"+key+"}",aside:"sans",insert:"\\mathsf{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathtt{"+key+"}",aside:"monospace",insert:"\\mathtt{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathcal{"+key+"}",aside:"script",insert:"\\mathcal{"+key+"}"});ALT_KEYS[key].unshift({latex:"\\mathfrak{"+key+"}",aside:"fraktur",insert:"\\mathfrak{"+key+"}"})}let keyboardIDs=mf.config.virtualKeyboards;if(!keyboardIDs){keyboardIDs="all"}keyboardIDs=keyboardIDs.replace(/\ball\b/i,"numeric roman greek functions command");const layers=Object.assign({},LAYERS,mf.config.customVirtualKeyboardLayers||{});const keyboards=Object.assign({},KEYBOARDS,mf.config.customVirtualKeyboards||{});const keyboardList=keyboardIDs.replace(/\s+/g," ").split(" ");for(const keyboard of keyboardList){if(!keyboards[keyboard]){console.error('Unknown virtual keyboard "'+keyboard+'"');break}let keyboardLayers=keyboards[keyboard].layers||[];if(keyboards[keyboard].layer){keyboardLayers.push(keyboards[keyboard].layer)}keyboardLayers=Array.from(new Set(keyboardLayers));for(const layer of keyboardLayers){if(!layers[layer]){console.error('Unknown virtual keyboard layer: "'+layer+'"');break}if(typeof layers[layer]==="object"){let tempLayer=``;if(layers[layer].styles){tempLayer+=`<style>${layers[layer].styles}</style>`}if(layers[layer].backdrop){tempLayer+=`<div class='${layers[layer].backdrop}'>`}if(layers[layer].container){tempLayer+=`<div class='${layers[layer].container}'>`}if(layers[layer].rows){tempLayer+=`<div class='rows'>`;for(const row of layers[layer].rows){tempLayer+=`<ul>`;for(const col of row){tempLayer+=`<li`;if(col.class){tempLayer+=` class="${col.class}"`}if(col.key){tempLayer+=` data-key="${col.key}"`}if(col.command){if(typeof col.command==="string"){tempLayer+=` data-command='"${col.command}"'`}else{tempLayer+=` data-command='`;tempLayer+=JSON.stringify(col.command);tempLayer+=`'`}}if(col.insert){tempLayer+=` data-insert="${col.insert}"`}if(col.latex){tempLayer+=` data-latex="${col.latex}"`}if(col.aside){tempLayer+=` data-aside="${col.aside}"`}if(col.altKeys){tempLayer+=` data-alt-keys="${col.altKeys}"`}if(col.shifted){tempLayer+=` data-shifted="${col.shifted}"`}if(col.shiftedCommand){tempLayer+=` data-shifted-command="${col.shiftedCommand}"`}tempLayer+=`>${col.label?col.label:""}</li>`}tempLayer+=`</ul>`}tempLayer+=`</div>`;if(layers[layer].container){tempLayer+=`</div'>`}if(layers[layer].backdrop){tempLayer+=`</div'>`}}layers[layer]=tempLayer}markup+=`<div tabindex="-1" class='keyboard-layer' id='`+layer+`'>`;markup+=makeKeyboardToolbar(mf,keyboardIDs,keyboard);const layerMarkup=typeof layers[layer]==="function"?layers[layer]():layers[layer];markup+=expandLayerMarkup(mf,layerMarkup);markup+="</div>"}}const result=document.createElement("div");result.className="ML__keyboard";if(theme){result.classList.add(theme)}else if(mf.config.virtualKeyboardTheme){result.classList.add(mf.config.virtualKeyboardTheme)}else if(/android|cros/i.test(navigator.userAgent)){result.classList.add("material")}result.innerHTML=markup;makeKeycap(mf,result.querySelectorAll(".keycap, .action, .fnbutton, .bigfnbutton"));const elList=result.getElementsByClassName("layer-switch");for(let i=0;i<elList.length;++i){if(elList[i].classList.contains("shift")){mf._attachButtonHandlers(elList[i],{pressed:["shiftKeyboardLayer","shift"],default:["switchKeyboardLayer",elList[i].getAttribute("data-layer")],pressAndHoldEnd:"unshiftKeyboardLayer"})}else{mf._attachButtonHandlers(elList[i],{default:["switchKeyboardLayer",elList[i].getAttribute("data-layer")]})}}const layerElements=result.getElementsByClassName("keyboard-layer");Array.from(layerElements).forEach(x=>{x.addEventListener("mousedown",evt=>{evt.preventDefault();evt.stopPropagation()});x.addEventListener("touchstart",evt=>{evt.preventDefault();evt.stopPropagation()})});layerElements[0].classList.add("is-visible");window.addEventListener("mouseup",function(){mf.hideAlternateKeys_();mf.unshiftKeyboardLayer_()});window.addEventListener("blur",function(){mf.hideAlternateKeys_();mf.unshiftKeyboardLayer_()});window.addEventListener("touchend",function(){mf.hideAlternateKeys_();mf.unshiftKeyboardLayer_()});window.addEventListener("touchcancel",function(){mf.hideAlternateKeys_();mf.unshiftKeyboardLayer_()});return result}var VirtualKeyboard={make:make,makeKeycap:makeKeycap};const SPECIAL_IDENTIFIERS={"−":"-","-":"-","\\alpha":"alpha","\\beta":"beta","\\gamma":"gamma","\\delta":"delta","\\epsilon":"epsilon","\\varepsilon":"varepsilon","\\zeta":"zeta","\\eta":"eta","\\theta":"theta","\\vartheta":"vartheta","\\iota":"iota","\\kappa":"kappa","\\lambda":"lambda","\\mu":"mu","\\nu":"nu","\\xi":"xi","\\pi":"pi","\\rho":"rho","\\sigma":"sigma","\\tau":"tau","\\upsilon":"upsilon","\\phi":"phi","\\varphi":"varphi","\\chi":"chi","\\psi":"psi","\\omega":"omega","\\Gamma":"Gamma","\\Delta":"Delta","\\Theta":"Theta","\\Lambda":"Lambda","\\Xi":"Xi","\\Pi":"Pi","\\Sigma":"Sigma","\\Phi":"Phi","\\Psi":"Psi","\\Omega":"Omega"};const SPECIAL_OPERATORS={"\\pm":"+-","\\times":"xx","\\colon":":","\\vert":"|","\\Vert":"||","\\mid":"|","\\lbrace":"{","\\rbrace":"}","\\langle":"(:","\\rangle":":)"};function toASCIIMath(atom,options){if(!atom)return"";if(Array.isArray(atom)){let result="";if(atom.length===0)return"";if(atom[0].type==="first")atom.shift();if(atom[0].mode==="text"){let i=0;result='"';while(atom[i]&&atom[i].mode==="text"){result+=atom[i].body;i++}result+='"'+toASCIIMath(atom.slice(i))}else{let i=0;while(atom[i]&&atom[i].mode==="math"){result+=toASCIIMath(atom[i]);i++}result+=toASCIIMath(atom.slice(i))}return result.trim()}let result="";const command=atom.latex?atom.latex.trim():null;let m;switch(atom.type){case"group":case"root":result=toASCIIMath(atom.body);break;case"array":break;case"genfrac":if(atom.leftDelim||atom.rightDelim){result+=atom.leftDelim==="."||!atom.leftDelim?"{:":atom.leftDelim}if(atom.hasBarLine){result+="(";result+=toASCIIMath(atom.numer);result+=")/(";result+=toASCIIMath(atom.denom);result+=")"}else{result+="("+toASCIIMath(atom.numer)+"),";result+="("+toASCIIMath(atom.denom)+")"}if(atom.leftDelim||atom.rightDelim){result+=atom.rightDelim==="."||!atom.rightDelim?"{:":atom.rightDelim}break;case"surd":if(atom.index){result+="root("+toASCIIMath(atom.index)+")("+toASCIIMath(atom.body)+")"}else{result+="sqrt("+toASCIIMath(atom.body)+")"}break;case"leftright":result+=atom.leftDelim==="."||!atom.leftDelim?"{:":atom.leftDelim;result+=toASCIIMath(atom.body);result+=atom.rightDelim==="."||!atom.rightDelim?"{:":atom.rightDelim;break;case"sizeddelim":case"delim":break;case"accent":break;case"line":case"overlap":break;case"overunder":break;case"mord":result=SPECIAL_IDENTIFIERS[command]||command||(typeof atom.body==="string"?atom.body:"");if(result[0]==="\\")result+="";m=command?command.match(/[{]?\\char"([0-9abcdefABCDEF]*)[}]?/):null;if(m){result=String.fromCharCode(parseInt("0x"+m[1]))}else if(result.length>0&&result.charAt(0)==="\\"){if(typeof atom.body==="string"){result=atom.body.charAt(0)}else{result=atom.latex}}break;case"mbin":case"mrel":case"textord":case"minner":if(command&&SPECIAL_IDENTIFIERS[command]){result=SPECIAL_IDENTIFIERS[command]}else if(command&&SPECIAL_OPERATORS[command]){result=SPECIAL_OPERATORS[command]}else{result=atom.body}break;case"mopen":case"mclose":result+=atom.body;break;case"mpunct":result=SPECIAL_OPERATORS[command]||command;break;case"mop":if(atom.body!=="​"){result="";if(command==="\\operatorname"){result+=atom.body}else{result+=atom.body||command}result+=" "}break;case"mathstyle":break;case"box":break;case"spacing":break;case"enclose":break;case"space":result=" ";break}if(atom.subscript){result+="_";const arg=toASCIIMath(atom.subscript);if(arg.length>1&&!/^(-)?\d+(\.\d*)?$/.test(arg)){result+="("+arg+")"}else{result+=arg}}if(atom.superscript){result+="^";const arg=toASCIIMath(atom.superscript);if(arg.length>1&&!/^(-)?\d+(\.\d*)?$/.test(arg)){result+="("+arg+")"}else{result+=arg}}return result}const SPECIAL_OPERATORS$1={"\\pm":"&PlusMinus;","\\times":"&times;","\\colon":":","\\vert":"|","\\Vert":"∥","\\mid":"∣","\\lbrace":"{","\\rbrace":"}","\\langle":"⟨","\\rangle":"⟩","\\lfloor":"⌊","\\rfloor":"⌋","\\lceil":"⌈","\\rceil":"⌉","\\vec":"&#x20d7;","\\acute":"&#x00b4;","\\grave":"&#x0060;","\\dot":"&#x02d9;","\\ddot":"&#x00a8;","\\tilde":"&#x007e;","\\bar":"&#x00af;","\\breve":"&#x02d8;","\\check":"&#x02c7;","\\hat":"&#x005e;"};function xmlEscape(str){return str.replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function makeID$1(id,options){if(!id||!options.generateID)return"";return' extid="'+id+'"'}function scanIdentifier(stream,final,options){let result=false;final=final||stream.atoms.length;let mathML="";let body="";let superscript=-1;let subscript=-1;const atom=stream.atoms[stream.index];if(stream.index<final&&(atom.type==="mord"||atom.type==="textord")&&"0123456789,.".indexOf(atom.body)<0){body=atom.toMathML(options);if(atom.superscript){superscript=stream.index}if(atom.subscript){subscript=stream.index}stream.index+=1}if(body.length>0){result=true;if(isSuperscriptAtom(stream)){superscript=stream.index;stream.index+=1}if(isSubscriptAtom(stream)){subscript=stream.index;stream.index+=1}if(superscript>=0&&subscript>=0){mathML="<msubsup>"+body;mathML+=toMathML(stream.atoms[subscript].subscript,0,0,options).mathML;mathML+=toMathML(stream.atoms[superscript].superscript,0,0,options).mathML;mathML+="</msubsup>"}else if(superscript>=0){mathML="<msup>"+body;if(isSuperscriptAtom(stream)){const sup=toMathML(stream.atoms[superscript].superscript,0,0,options).mathML;const sup2=toMathML(stream.atoms[superscript+1].superscript,0,0,options).mathML;if((sup==="<mi>′</mi>"||sup==="<mi>&#x2032;</mi>")&&(sup2==="<mi>′</mi>"||sup2==="<mi>&#x2032;</mi>")){mathML+="<mi>&#x2033;</mi>"}else if(sup==="<mi>′</mi>"||sup==="<mi>&#x2032;</mi>"){mathML+="<mi>&#x2032;</mi>"}else{mathML+=sup}}else{mathML+=toMathML(stream.atoms[superscript].superscript,0,0,options).mathML}mathML+="</msup>"}else if(subscript>=0){mathML="<msub>"+body;mathML+=toMathML(stream.atoms[subscript].subscript,0,0,options).mathML;mathML+="</msub>"}else{mathML=body}if((stream.lastType==="mi"||stream.lastType==="mn"||stream.lastType==="mtext"||stream.lastType==="fence")&&!/^<mo>(.*)<\/mo>$/.test(mathML)){mathML="<mo>&InvisibleTimes;</mo>"+mathML}if(body.endsWith(">f</mi>")||body.endsWith(">g</mi>")){mathML+="<mo> &ApplyFunction; </mo>";stream.lastType="applyfunction"}else{stream.lastType=/^<mo>(.*)<\/mo>$/.test(mathML)?"mo":"mi"}stream.mathML+=mathML}return result}function isSuperscriptAtom(stream){return stream.index<stream.atoms.length&&stream.atoms[stream.index].superscript&&stream.atoms[stream.index].type==="msubsup"}function isSubscriptAtom(stream){return stream.index<stream.atoms.length&&stream.atoms[stream.index].subscript&&stream.atoms[stream.index].type==="msubsup"}function indexOfSuperscriptInNumber(stream){let result=-1;let i=stream.index;let done=false;let found=false;while(i<stream.atoms.length&&!done&&!found){done=stream.atoms[i].type!=="mord"||"0123456789,.".indexOf(stream.atoms[i].body)<0;found=!done&&stream.atoms[i].superscript;i++}if(found){result=i-1}return result}function parseSubsup(base,stream,options){let result=false;let mathML="";let atom=stream.atoms[stream.index-1];if(!atom)return false;if(!atom.superscript&&!atom.subscript){if(isSuperscriptAtom(stream)||isSubscriptAtom(stream)){atom=stream.atoms[stream.index];stream.index+=1}}if(!atom)return false;if(atom.superscript&&atom.subscript){mathML="<msubsup>"+base;mathML+=toMathML(atom.subscript,0,0,options).mathML;mathML+=toMathML(atom.superscript,0,0,options).mathML;mathML+="</msubsup>"}else if(atom.superscript){mathML="<msup>"+base;mathML+=toMathML(atom.superscript,0,0,options).mathML;mathML+="</msup>"}else if(atom.subscript){mathML="<msub>"+base;mathML+=toMathML(atom.subscript,0,0,options).mathML;mathML+="</msub>"}if(mathML.length>0){result=true;stream.mathML+=mathML;stream.lastType=""}return result}function scanText(stream,final,options){let result=false;final=final||stream.atoms.length;const initial=stream.index;let mathML="";while(stream.index<final&&stream.atoms[stream.index].mode==="text"){mathML+=stream.atoms[stream.index].body?stream.atoms[stream.index].body:" ";stream.index+=1}if(mathML.length>0){result=true;mathML="<mtext"+makeID$1(stream.atoms[initial].id,options)+">"+mathML+"</mtext>";stream.mathML+=mathML;stream.lastType="mtext"}return result}function scanNumber(stream,final,options){let result=false;final=final||stream.atoms.length;const initial=stream.index;let mathML="";let superscript=indexOfSuperscriptInNumber(stream);if(superscript>=0&&superscript<final){final=superscript}while(stream.index<final&&stream.atoms[stream.index].type==="mord"&&"0123456789,.".indexOf(stream.atoms[stream.index].body)>=0){mathML+=stream.atoms[stream.index].body;stream.index+=1}if(mathML.length>0){result=true;mathML="<mn"+makeID$1(stream.atoms[initial].id,options)+">"+mathML+"</mn>";if(superscript<0&&isSuperscriptAtom(stream)){superscript=stream.index;stream.index+=1}if(superscript>=0){mathML="<msup>"+mathML;mathML+=toMathML(stream.atoms[superscript].superscript,0,0,options).mathML;mathML+="</msup>"}stream.mathML+=mathML;stream.lastType="mn"}return result}function scanFence(stream,final,options){let result=false;final=final||stream.atoms.length;let mathML="";let lastType="";if(stream.index<final&&stream.atoms[stream.index].type==="mopen"){let found=false;let depth=0;const openIndex=stream.index;let closeIndex=-1;let index=openIndex+1;while(index<final&&!found){if(stream.atoms[index].type==="mopen"){depth+=1}else if(stream.atoms[index].type==="mclose"){depth-=1}if(depth===-1){found=true;closeIndex=index}index+=1}if(found){mathML="<mrow>";mathML+=toMo(stream.atoms[openIndex],options);mathML+=toMathML(stream.atoms,openIndex+1,closeIndex,options).mathML;mathML+=toMo(stream.atoms[closeIndex],options);mathML+="</mrow>";if(stream.lastType==="mi"||stream.lastType==="mn"||stream.lastType==="mfrac"||stream.lastType==="fence"){mathML="<mo>&InvisibleTimes;</mo>"+mathML}stream.index=closeIndex+1;if(parseSubsup(mathML,stream,options)){result=true;stream.lastType="";mathML=""}lastType="fence"}}if(mathML.length>0){result=true;stream.mathML+=mathML;stream.lastType=lastType}return result}function scanOperator(stream,final,options){let result=false;final=final||stream.atoms.length;let mathML="";let lastType="";const atom=stream.atoms[stream.index];if(stream.index<final&&(atom.type==="mbin"||atom.type==="mrel")){mathML+=stream.atoms[stream.index].toMathML(options);stream.index+=1;lastType="mo"}else if(stream.index<final&&atom.type==="mop"){if(atom.limits==="limits"&&(atom.superscript||atom.subscript)){const op=toMo(atom,options);if(atom.superscript&&atom.subscript){mathML+=(atom.limits!=="nolimits"?"<munderover>":"<msubsup>")+op;mathML+=toMathML(atom.subscript,0,0,options).mathML;mathML+=toMathML(atom.superscript,0,0,options).mathML;mathML+=atom.limits!=="nolimits"?"</munderover>":"</msubsup>"}else if(atom.superscript){mathML+=(atom.limits!=="nolimits"?"<mover>":"<msup>")+op;mathML+=toMathML(atom.superscript,0,0,options).mathML;mathML+=atom.limits!=="nolimits"?"</mover>":"</msup>"}else{mathML+=(atom.limits!=="nolimits"?"<munder>":"<msub>")+op;mathML+=toMathML(atom.subscript,0,0,options).mathML;mathML+=atom.limits!=="nolimits"?"</munder>":"</msub>"}lastType="mo"}else{const atom=stream.atoms[stream.index];const isUnit=atom.latex.indexOf("\\operatorname")===0;const op=isUnit?'<mi class="MathML-Unit"'+makeID$1(atom.id,options)+">"+toString$1(atom.body)+"</mi>":toMo(atom,options);mathML+=op;stream.index+=1;if(parseSubsup(mathML,stream,options)){result=true;stream.lastType="";mathML=""}stream.index-=1;if(!isUnit&&!/^<mo>(.*)<\/mo>$/.test(op)){mathML+="<mo>&#x2061;</mo>";lastType="applyfunction"}else{lastType=isUnit?"mi":"mo"}}if((stream.lastType==="mi"||stream.lastType==="mn")&&!/^<mo>(.*)<\/mo>$/.test(mathML)){mathML="<mo>&InvisibleTimes;</mo>"+mathML}stream.index+=1}if(mathML.length>0){result=true;stream.mathML+=mathML;stream.lastType=lastType}return result}function toMathML(input,initial,final,options){const result={atoms:input,index:initial||0,mathML:"",lastType:""};final=final||(input?input.length:0);if(typeof input==="number"||typeof input==="boolean"){result.mathML=input.toString()}else if(typeof input==="string"){result.mathML=input}else if(input&&typeof input.toMathML==="function"){result.mathML=input.toMathML(options)}else if(Array.isArray(input)){let count=0;while(result.index<final){if(scanText(result,final,options)||scanNumber(result,final,options)||scanIdentifier(result,final,options)||scanOperator(result,final,options)||scanFence(result,final,options)){count+=1}else if(result.index<final){let mathML=result.atoms[result.index].toMathML(options);if(result.lastType==="mn"&&mathML.length>0&&result.atoms[result.index].type==="genfrac"){mathML="<mo>&#x2064;</mo>"+mathML}if(result.atoms[result.index].type==="genfrac"){result.lastType="mfrac"}else{result.lastType=""}if(mathML.length>0){result.mathML+=mathML;count+=1}result.index+=1}}if(count>1){result.mathML="<mrow>"+result.mathML+"</mrow>"}}return result}function toMo(atom,options){let result="";const body=toString$1(atom.body);if(body){result="<mo"+makeID$1(atom.id,options)+">"+body+"</mo>"}return result}function toString$1(atoms){if(!atoms)return"";if(typeof atoms==="string")return xmlEscape(atoms);if(!Array.isArray(atoms)&&typeof atoms.body==="string"){return xmlEscape(atoms.body)}let result="";for(const atom of atoms){if(typeof atom.body==="string"){result+=atom.body}}return xmlEscape(result)}MathAtom$1.MathAtom.prototype.toMathML=function(options){const SPECIAL_IDENTIFIERS={"\\exponentialE":"&#x02147;","\\imaginaryI":"&#x2148;","\\differentialD":"&#x2146;","\\capitalDifferentialD":"&#x2145;","\\alpha":"&#x03b1;","\\pi":"&#x03c0;","\\infty":"&#x221e;","\\forall":"&#x2200;","\\nexists":"&#x2204;","\\exists":"&#x2203;","\\hbar":"ℏ","\\cdotp":"⋅","\\ldots":"…","\\cdots":"⋯","\\ddots":"⋱","\\vdots":"⋮","\\ldotp":"."};const MATH_VARIANTS={cal:"script",frak:"fraktur",bb:"double-struck",scr:"script",cmtt:"monospace",cmss:"sans-serif"};const SPACING={"\\!":-3/18,"\\ ":6/18,"\\,":3/18,"\\:":4/18,"\\;":5/18,"\\enspace":.5,"\\quad":1,"\\qquad":2,"\\enskip":.5};let result="";let sep="";let col,row,i;let underscript,overscript,body;let variant=MATH_VARIANTS[this.fontFamily||this.font]||"";if(variant){variant=' mathvariant="'+variant+'"'}const command=this.latex?this.latex.trim():null;let m;switch(this.type){case"group":case"root":result=toMathML(this.body,0,0,options).mathML;break;case"array":if(this.lFence&&this.lFence!=="."||this.rFence&&this.rFence!=="."){result+="<mrow>";if(this.lFence&&this.lFence!=="."){result+="<mo>"+(SPECIAL_OPERATORS$1[this.lFence]||this.lFence)+"</mo>"}}result+="<mtable";if(this.colFormat){result+=' columnalign="';for(i=0;i<this.colFormat.length;i++){if(this.colFormat[i].align){result+={l:"left",c:"center",r:"right"}[this.colFormat[i].align]+" "}}result+='"'}result+=">";for(row=0;row<this.array.length;row++){result+="<mtr>";for(col=0;col<this.array[row].length;col++){result+="<mtd>"+toMathML(this.array[row][col],0,0,options).mathML+"</mtd>"}result+="</mtr>"}result+="</mtable>";if(this.lFence&&this.lFence!=="."||this.rFence&&this.rFence!=="."){if(this.rFence&&this.rFence!=="."){result+="<mo>"+(SPECIAL_OPERATORS$1[this.lFence]||this.rFence)+"</mo>"}result+="</mrow>"}break;case"genfrac":if(this.leftDelim||this.rightDelim){result+="<mrow>"}if(this.leftDelim&&this.leftDelim!=="."){result+="<mo"+makeID$1(this.id,options)+">"+(SPECIAL_OPERATORS$1[this.leftDelim]||this.leftDelim)+"</mo>"}if(this.hasBarLine){result+="<mfrac>";result+=toMathML(this.numer,0,0,options).mathML||"<mi>&nbsp;</mi>";result+=toMathML(this.denom,0,0,options).mathML||"<mi>&nbsp;</mi>";result+="</mfrac>"}else{result+="<mtable"+makeID$1(this.id,options)+">";result+="<mtr>"+toMathML(this.numer,0,0,options).mathML+"</mtr>";result+="<mtr>"+toMathML(this.denom,0,0,options).mathML+"</mtr>";result+="</mtable>"}if(this.rightDelim&&this.rightDelim!=="."){result+="<mo"+makeID$1(this.id,options)+">"+(SPECIAL_OPERATORS$1[this.rightDelim]||this.rightDelim)+"</mo>"}if(this.leftDelim||this.rightDelim){result+="</mrow>"}break;case"surd":if(this.index){result+="<mroot"+makeID$1(this.id,options)+">";result+=toMathML(this.body,0,0,options).mathML;result+=toMathML(this.index,0,0,options).mathML;result+="</mroot>"}else{result+="<msqrt"+makeID$1(this.id,options)+">";result+=toMathML(this.body,0,0,options).mathML;result+="</msqrt>"}break;case"leftright":result="<mrow>";if(this.leftDelim&&this.leftDelim!=="."){result+="<mo"+makeID$1(this.id,options)+">"+(SPECIAL_OPERATORS$1[this.leftDelim]||this.leftDelim)+"</mo>"}if(this.body)result+=toMathML(this.body,0,0,options).mathML;if(this.rightDelim&&this.rightDelim!=="."){result+="<mo"+makeID$1(this.id,options)+">"+(SPECIAL_OPERATORS$1[this.rightDelim]||this.rightDelim)+"</mo>"}result+="</mrow>";break;case"sizeddelim":case"delim":result+='<mo separator="true"'+makeID$1(this.id,options)+">"+(SPECIAL_OPERATORS$1[this.delim]||this.delim)+"</mo>";break;case"accent":result+='<mover accent="true"'+makeID$1(this.id,options)+">";result+=toMathML(this.body,0,0,options).mathML;result+="<mo>"+(SPECIAL_OPERATORS$1[command]||this.accent)+"</mo>";result+="</mover>";break;case"line":case"overlap":break;case"overunder":overscript=this.overscript;underscript=this.underscript;if(overscript&&underscript){body=this.body}else if(overscript){body=this.body;if(this.body[0]&&this.body[0].underscript){underscript=this.body[0].underscript;body=this.body[0].body}else if(this.body[0]&&this.body[0].type==="first"&&this.body[1]&&this.body[1].underscript){underscript=this.body[1].underscript;body=this.body[1].body}}else if(underscript){body=this.body;if(this.body[0]&&this.body[0].overscript){overscript=this.body[0].overscript;body=this.body[0].body}else if(this.body[0]&&this.body[0].type==="first"&&this.body[1]&&this.body[1].overscript){overscript=this.body[1].overscript;body=this.body[1].body}}if(overscript&&underscript){result+="<munderover"+variant+makeID$1(this.id,options)+">"+toMathML(body,0,0,options).mathML;result+=toMathML(underscript,0,0,options).mathML;result+=toMathML(overscript,0,0,options).mathML;result+="</munderover>"}else if(overscript){result+="<mover"+variant+makeID$1(this.id,options)+">"+toMathML(body,0,0,options).mathML;result+=toMathML(overscript,0,0,options).mathML;result+="</mover>"}else if(underscript){result+="<munder"+variant+makeID$1(this.id,options)+">"+toMathML(body,0,0,options).mathML;result+=toMathML(underscript,0,0,options).mathML;result+="</munder>"}break;case"mord":{result=SPECIAL_IDENTIFIERS[command]||command||(typeof this.body==="string"?this.body:"");m=command?command.match(/[{]?\\char"([0-9abcdefABCDEF]*)[}]?/):null;if(m){result="&#x"+m[1]+";"}else if(result.length>0&&result.charAt(0)==="\\"){if(typeof this.body==="string"&&this.body.charCodeAt(0)>255){result="&#x"+("000000"+this.body.charCodeAt(0).toString(16)).substr(-4)+";"}else if(typeof this.body==="string"){result=this.body.charAt(0)}else{result=this.body}}const tag=/\d/.test(result)?"mn":"mi";result="<"+tag+variant+makeID$1(this.id,options)+">"+xmlEscape(result)+"</"+tag+">";break}case"mbin":case"mrel":case"textord":case"minner":if(command&&SPECIAL_IDENTIFIERS[command]){result="<mi"+makeID$1(this.id,options)+">"+SPECIAL_IDENTIFIERS[command]+"</mi>"}else if(command&&SPECIAL_OPERATORS$1[command]){result="<mo"+makeID$1(this.id,options)+">"+SPECIAL_OPERATORS$1[command]+"</mo>"}else{result=toMo(this,options)}break;case"mpunct":result='<mo separator="true"'+makeID$1(this.id,options)+">"+(SPECIAL_OPERATORS$1[command]||command)+"</mo>";break;case"mop":if(this.body!=="​"){result="<mo"+makeID$1(this.id,options)+">";if(command==="\\operatorname"){result+=this.body}else{result+=command||this.body}result+="</mo>"}break;case"mathstyle":break;case"box":result='<menclose notation="box"';if(this.backgroundcolor){result+=' mathbackground="'+Color.stringToColor(this.backgroundcolor)+'"'}result+=makeID$1(this.id,options)+">"+toMathML(this.body,0,0,options).mathML+"</menclose>";break;case"spacing":result+='<mspace width="'+(SPACING[command]||0)+'em"/>';break;case"enclose":result='<menclose notation="';for(const notation in this.notation){if(Object.prototype.hasOwnProperty.call(this.notation,notation)&&this.notation[notation]){result+=sep+notation;sep=" "}}result+=makeID$1(this.id,options)+'">'+toMathML(this.body,0,0,options).mathML+"</menclose>";break;case"space":result+="&nbsp;";break;case"variable":result+=toMathML(this.body,0,0,options).mathML}return result};MathAtom$1.toMathML=function(atoms,options){return toMathML(atoms,0,0,options).mathML};const CANONICAL_NAMES={"\\imaginaryI":"ⅈ","\\imaginaryJ":"ⅉ","\\pi":"π","\\exponentialE":"ℯ","﹢":"+","＋":"+","−":"-","-":"-","﹣":"-","－":"-","\\times":"*","\\cdot":"*","⨉":"*","️✖":"*","️×":"*",".":"*","÷":"/","⁄":"/","／":"/","!":"factorial","\\mp":"minusplus","\\ne":"!=","\\neq":"!=","\\coloneq":":=","\\questeq":"?=","\\approx":"approx","\\cong":"congruent","\\sim":"similar","\\equiv":"equiv","\\pm":"plusminus","\\land":"and","\\wedge":"and","\\lor":"or","\\vee":"or","\\oplus":"xor","\\veebar":"xor","\\lnot":"not","\\neg":"not","\\exists":"exists","\\nexists":"!exists","\\forall":"forAll","\\backepsilon":"suchThat","\\therefore":"therefore","\\because":"because","\\nabla":"nabla","\\circ":"circle","\\ominus":"ominus","\\odot":"odot","\\otimes":"otimes","\\zeta":"Zeta","\\Gamma":"Gamma","\\min":"min","\\max":"max","\\mod":"mod","\\lim":"lim","\\sum":"sum","\\prod":"prod","\\int":"integral","\\iint":"integral2","\\iiint":"integral3","\\Re":"Re","\\gothicCapitalR":"Re","\\Im":"Im","\\gothicCapitalI":"Im","\\binom":"nCr","\\partial":"partial","\\differentialD":"differentialD","\\capitalDifferentialD":"capitalDifferentialD","\\Finv":"Finv","\\Game":"Game","\\wp":"wp","\\ast":"ast","\\star":"star","\\asymp":"asymp","\\to":"to","\\gets":"gets","\\rightarrow":"shortLogicalImplies","\\leftarrow":"shortLogicalImpliedBy","\\leftrightarrow":"shortLogicalEquivalent","\\longrightarrow":"logicalImplies","\\longleftarrow":"logicalImpliedBy","\\longleftrightarrow":"logicalEquivalent","\\Rightarrow":"shortImplies","\\Leftarrow":"shortImpliedBy","\\Leftrightarrow":"shortEquivalent","\\implies":"implies","\\Longrightarrow":"implies","\\impliedby":"impliedBy","\\Longleftarrow":"impliedBy","\\iff":"equivalent","\\Longleftrightarrow":"equivalent"};const OP_NAME={"+":"add","*":"multiply","-":"subtract","/":"divide","=":"equal",":=":"assign","!=":"ne","?=":"questeq",approx:"approx",congruent:"congruent",similar:"similar",equiv:"equiv","<":"lt",">":"gt","<=":"le",">=":"ge","≤":"le","≥":"ge",">>":"gg","<<":"ll","**":"pow","++":"increment","--":"decrement"};const FUNCTION_TEMPLATE={equal:"%0 = %1",ne:"%0 \\ne %1",questeq:"%0 \\questeq %1",approx:"%0 \\approx %1",congruent:"%0 \\cong %1",similar:"%0 \\sim %1",equiv:"%0 \\equiv %1",assign:"%0 := %1",lt:"%0 < %1",gt:"%0 > %1",le:"%0 \\le %1",ge:"%0 \\ge %1",sin:"\\sin%_%^ %0",cos:"\\cos%_%^ %0",tan:"\\tan%_%^ %0",cot:"\\cot%_%^ %0",sec:"\\sec%_%^ %0",csc:"\\csc%_%^ %0",sinh:"\\sinh %0",cosh:"\\cosh %0",tanh:"\\tanh %0",csch:"\\csch %0",sech:"\\sech %0",coth:"\\coth %0",arcsin:"\\arcsin %0",arccos:"\\arccos %0",arctan:"\\arctan %0",arccot:"\\arcctg %0",arcsec:"\\arcsec %0",arccsc:"\\arccsc %0",arsinh:"\\arsinh %0",arcosh:"\\arcosh %0",artanh:"\\artanh %0",arcsch:"\\arcsch %0",arsech:"\\arsech %0",arcoth:"\\arcoth %0",ln:"\\ln%_%^ %",log:"\\log%_%^ %",lg:"\\lg %",lb:"\\lb %",sum:"\\sum%_%^ %0",prod:"\\prod%_%^ %0",Zeta:"\\zeta%_%^ %",Gamma:"\\Gamma %",min:"\\min%_%^ %",max:"\\max%_%^ %",mod:"\\mod%_%^ %",lim:"\\lim%_%^ %",binom:"\\binom %",nabla:"\\nabla %",curl:"\\nabla\\times %0",div:"\\nabla\\cdot %0",floor:"\\lfloor %0 \\rfloor%_%^",ceil:"\\lceil %0 \\rceil%_%^",abs:"\\left| %0 \\right|%_%^",norm:"\\lVert %0 \\rVert%_%^",ucorner:"\\ulcorner %0 \\urcorner%_%^",lcorner:"\\llcorner %0 \\lrcorner%_%^",angle:"\\langle %0 \\rangle%_%^",group:"\\lgroup %0 \\rgroup%_%^",moustache:"\\lmoustache %0 \\rmoustache%_%^",brace:"\\lbrace %0 \\rbrace%_%^","sqrt[]":"\\sqrt[%^]{%0}",sqrt:"\\sqrt{%0}",lcm:"\\operatorname{lcm}%",gcd:"\\operatorname{gcd}%",erf:"\\operatorname{erf}%",erfc:"\\operatorname{erfc}%",randomReal:"\\operatorname{randomReal}%",randomInteger:"\\operatorname{randomInteger}%",and:"%0 \\land %1",or:"%0 \\lor %1",xor:"%0 \\oplus %1",not:"%0 \\lnot %1",circle:"%0 \\circ %1",ast:"%0 \\ast %1",star:"%0 \\star %1",asymp:"%0 \\asymp %1","/":"\\frac{%0}{%1}",Re:"\\Re{%0}",Im:"\\Im{%0}",factorial:"%0!",factorial2:"%0!!"};const OP_PRECEDENCE={degree:880,nabla:740,curl:740,partial:740,differentialD:740,capitalDifferentialD:740,"**":720,odot:710,not:680,div:660,solidus:660,"/":660,setminus:650,"%":640,otimes:410,union:350,intersection:350,"*":390,ast:390,".":390,oplus:300,ominus:300,"+":275,"-":275,"+-":275,"-+":275,circle:265,circledast:265,circledcirc:265,star:265,"..":263,to:262,in:262,"|":261,congruent:265,equiv:260,"=":260,"!=":255,"?=":255,similar:250,approx:247,"<":245,">":243,">=":242,"≥":242,"<=":241,complement:240,subset:240,superset:240,elementof:240,"!elementof":240,exists:230,"!exists":230,forall:230,and:200,xor:195,or:190,suchThat:110,":":100,assign:80,":=":80,therefore:70,because:70,shortLogicalImplies:52,shortImplies:51,logicalImplies:50,implies:49,shortLogicalImpliedBy:48,shortImpliedBy:47,logicalImpliedBy:46,impliedBy:45,shortLogicalEquivalent:44,shortEquivalent:43,logicalEquivalent:42,equivalent:41,",":40,";":30};function getArg(ast,index){return Array.isArray(ast.arg)?ast.arg[index]:undefined}function getPrecedence(canonicalName){return canonicalName?OP_PRECEDENCE[canonicalName]||-1:-1}function getAssociativity(canonicalName){if(/=|=>/.test(canonicalName)){return"right"}return"left"}function getLatexTemplateForFunction(name){let result=FUNCTION_TEMPLATE[name];if(!result){result=name.length>1?"\\operatorname{"+name+"}%^%_ %":name+"%^%_ %"}return result}function getLatexForSymbol(name){let result=FUNCTION_TEMPLATE[name];if(result){return result.replace("%1","").replace("%0","").replace("%","")}if(name.length>1){const info=Definitions.getInfo("\\"+name,"math");if(info&&(!info.fontFamily||info.fontFamily==="cmr"||info.fontFamily==="ams")){result="\\"+name}}if(!result){result=Definitions.unicodeStringToLatex("math",name)}return result}function isFunction(canonicalName){if(canonicalName==="f"||canonicalName==="g")return true;const t=FUNCTION_TEMPLATE[canonicalName];if(!t)return false;if(/%[^01_^]?/.test(t))return true;return false}function getCanonicalName(latex){latex=(latex||"").trim();let result=CANONICAL_NAMES[latex];if(!result){if(/^\\[^{}]+$/.test(latex)){const info=Definitions.getInfo(latex,"math",{});if(info){result=info.value||latex.slice(1)}else{result=latex.slice(1)}}else{result=latex}}return result}function opPrec(atom){if(!atom)return null;const name=getCanonicalName(getString(atom));const result=[getPrecedence(name),getAssociativity(name)];if(result[0]<=0)return null;return result}function isOperator(atom){return opPrec(atom)!==null}const DELIM_FUNCTION={"\\lfloor\\rfloor":"floor","\\lceil\\rceil":"ceil","\\vert\\vert":"abs","\\lvert\\rvert":"abs","||":"abs","\\Vert\\Vert":"norm","\\lVert\\rVert":"norm","\\ulcorner\\urcorner":"ucorner","\\llcorner\\lrcorner":"lcorner","\\langle\\rangle":"angle","\\lgroup\\rgroup":"group","\\lmoustache\\rmoustache":"moustache","\\lbrace\\rbrace":"brace"};const POSTFIX_FUNCTION={"!":"factorial","\\dag":"dagger","\\dagger":"dagger","\\ddagger":"dagger2","\\maltese":"maltese","\\backprime":"backprime","\\backdoubleprime":"backprime2","\\prime":"prime","\\doubleprime":"prime2","\\$":"$","\\%":"%","\\_":"_","\\degree":"degree"};const ASSOCIATIVE_FUNCTION={"+":"add","-":"add","*":"multiply","=":"equal",",":"list",";":"list2",and:"and",or:"or",xor:"xor",union:"union",shortLogicalEquivalent:"logicalEquivalent",logicalEquivalent:"logicalEquivalent",shortEquivalent:"equivalent",equivalent:"equivalent"};const SUPER_ASSOCIATIVE_FUNCTION={",":"list",";":"list2"};function getString(atom){if(Array.isArray(atom)){let result="";for(const subAtom of atom){result+=getString(subAtom)}return result}if(atom.latex&&!/^\\math(op|bin|rel|open|punct|ord|inner)/.test(atom.latex)){return atom.latex.trim()}if(atom.type==="leftright"){return""}if(typeof atom.body==="string"){return atom.body}if(Array.isArray(atom.body)){let result="";for(const subAtom of atom.body){result+=getString(subAtom)}return result}return""}function asSymbol(node){return typeof node.sym==="string"?getLatexForSymbol(node.sym)||node.sym:""}function asMachineNumber(node){return parseFloat(node.num)}function isNumber$1(node){return typeof node==="object"&&typeof node.num!=="undefined"}function numberRe(node){let result=0;if(isNumber$1(node)){if(typeof node.num==="object"){result=typeof node.num.re!=="undefined"?parseFloatToPrecision(node.num.re):0}else{result=parseFloat(node.num)}}return result}function numberIm(node){let result=0;if(isNumber$1(node)){if(typeof node.num==="object"){result=typeof node.num.im!=="undefined"?parseFloatToPrecision(node.num.im):0}}return result}function isComplexWithRealAndImaginary(node){return numberRe(node)!==0&&numberIm(node)!==0}function hasSup(node){return node&&typeof node.sup!=="undefined"}function hasSub(node){return node&&typeof node.sub!=="undefined"}function isAtom(expr,type,value){let result=false;const atom=expr.atoms[expr.index];if(atom&&atom.type===type){if(value===undefined){result=true}else{result=getString(atom)===value}}return result}function wrapFn(functionName,...params){const result={fn:functionName};if(params){const args=[];for(const arg of params){if(arg)args.push(arg)}if(args.length>0)result.arg=args}return result}function wrapNum(num){if(typeof num==="number"){return{num:num.toString()}}else if(typeof num==="string"){return{num:num}}else if(typeof num==="object"){console.assert(typeof num.re==="string"||typeof num.im==="string");return{num:num}}return undefined}function negate(node){if(isNumber$1(node)){const re=numberRe(node);const im=numberIm(node);if(im!==0){if(re!==0){node.num.re=(-re).toString()}node.num.im=(-im).toString()}else{node.num=(-re).toString()}return node}return wrapFn("negate",node)}function nextIsSupsub(expr){const atom=expr.atoms[expr.index+1];return atom&&atom.type==="msubsup"}function parseSupsub(expr,options){let atom=expr.atoms[expr.index];if(atom&&(typeof atom.superscript!=="undefined"||typeof atom.subscript!=="undefined")){expr.index+=1}else{atom=null}if(!atom){atom=expr.atoms[expr.index+1];if(!atom||atom.type!=="msubsup"||!(atom.superscript||atom.subscript)){atom=null}else{expr.index+=2}}if(atom){if(typeof atom.subscript!=="undefined"){expr.ast.sub=parse(atom.subscript,options)}if(typeof atom.superscript!=="undefined"){if(atom.type==="msubsup"){if(/['\u2032]|\\prime/.test(getString(atom.superscript))){expr.index+=1;atom=expr.atoms[expr.index+1];if(atom&&atom.type==="msubsup"&&/['\u2032]|\\prime/.test(getString(atom.superscript))){expr.ast.sup={sym:"″"}}else{expr.ast.sup={sym:"′"};expr.index-=1}}else if(/['\u2033]|\\doubleprime/.test(getString(atom.superscript))){expr.ast.sup={sym:"″"}}else if(expr.ast){expr.ast.sup=parse(atom.superscript,options)}}else{expr.ast.sup=parse(atom.superscript,options)}}}else{expr.index+=1}return expr}function parsePostfix(expr,options){const lhs=expr.ast;if(nextIsDigraph(expr,"!!")){expr.index+=1;expr.ast=wrapFn("factorial2",lhs);expr=parseSupsub(expr,options);expr=parsePostfix(expr,options);return expr}if(nextIsDigraph(expr,"++")){expr.index+=1;expr.ast=wrapFn("increment",lhs);expr=parseSupsub(expr,options);expr=parsePostfix(expr,options);return expr}if(nextIsDigraph(expr,"--")){expr.index+=1;expr.ast=wrapFn("decrement",lhs);expr=parseSupsub(expr,options);expr=parsePostfix(expr,options);return expr}const atom=expr.atoms[expr.index];if(atom&&atom.latex&&POSTFIX_FUNCTION[atom.latex.trim()]){expr.ast=wrapFn(POSTFIX_FUNCTION[atom.latex.trim()],lhs);expr=parseSupsub(expr,options);expr=parsePostfix(expr,options)}return expr}function parseDelim(expr,ldelim,rdelim,options){expr.index=expr.index||0;if(expr.atoms.length===0||expr.index>=expr.atoms.length){expr.ast=undefined;return expr}const savedPrec=expr.minPrec;expr.minPrec=0;let atom=expr.atoms[expr.index];if(!ldelim){let pairedDelim=true;if(atom.type==="mopen"){ldelim=atom.latex.trim();rdelim=Definitions.RIGHT_DELIM[ldelim]}else if(atom.type==="sizeddelim"){ldelim=atom.delim;rdelim=Definitions.RIGHT_DELIM[ldelim]}else if(atom.type==="leftright"){pairedDelim=false;ldelim=atom.leftDelim;rdelim=atom.rightDelim;if(rdelim==="?")rdelim=Definitions.RIGHT_DELIM[ldelim]}else if(atom.type==="textord"){ldelim=atom.latex.trim();rdelim=Definitions.RIGHT_DELIM[ldelim]}if(ldelim&&rdelim){if(ldelim==="|"&&rdelim==="|"){const atom=expr.atoms[expr.index+1];if(atom&&atom.type==="textord"&&atom.latex==="|"){ldelim="\\lVert";rdelim="\\rVert"}}expr=parseDelim(expr,ldelim,rdelim);if(expr){if(pairedDelim)expr.index+=1;expr.ast={fn:DELIM_FUNCTION[ldelim+rdelim]||ldelim+rdelim,arg:[expr.ast]};expr.minPrec=savedPrec;return expr}}return undefined}if(atom.type==="mopen"&&getString(atom)===ldelim){expr.index+=1;expr=parseExpression(expr,options);atom=expr.atoms[expr.index];if(atom&&atom.type==="mclose"&&getString(atom)===rdelim){if(nextIsSupsub(expr)){expr.ast={group:expr.ast}}expr=parseSupsub(expr,options);expr=parsePostfix(expr,options)}}else if(atom.type==="textord"&&getString(atom)===ldelim){expr.index+=1;expr=parseExpression(expr,options);atom=expr.atoms[expr.index];if(atom&&atom.type==="textord"&&getString(atom)===rdelim){expr.index+=1;expr=parseSupsub(expr,options);expr=parsePostfix(expr,options)}}else if(ldelim==="\\lVert"&&atom.type==="textord"&&atom.latex==="|"){atom=expr.atoms[expr.index+1];if(atom&&atom.type==="textord"&&atom.latex==="|"){expr.index+=2;expr=parseExpression(expr,options);atom=expr.atoms[expr.index];const atom2=expr.atoms[expr.index+1];if(atom&&atom.type==="textord"&&atom.latex==="|"&&atom2&&atom2.type==="textord"&&atom2.latex==="|"){expr.index+=2;expr=parseSupsub(expr,options);expr=parsePostfix(expr,options)}}}else if(atom.type==="sizeddelim"&&atom.delim===ldelim){expr.index+=1;expr=parseExpression(expr,options);atom=expr.atoms[expr.index];if(atom&&atom.type==="sizeddelim"&&atom.delim===rdelim){expr.index+=1;expr=parseSupsub(expr,options);expr=parsePostfix(expr,options)}}else if(atom.type==="leftright"&&atom.leftDelim===ldelim&&(atom.rightDelim==="?"||atom.rightDelim===rdelim)){expr.ast=parse(atom.body,options);if(nextIsSupsub(expr)){expr.ast={group:expr.ast}}expr=parseSupsub(expr,options);expr=parsePostfix(expr,options)}else{return undefined}expr.minPrec=savedPrec;return expr}function nextIsDigraph(expr,digraph){expr.index=expr.index||0;if(expr.atoms.length<=1||expr.index>=expr.atoms.length-1){return false}return digraph===getString(expr.atoms[expr.index])+getString(expr.atoms[expr.index+1])}function parseDigraph(expr){expr.index=expr.index||0;if(expr.atoms.length<=1||expr.index>=expr.atoms.length-1){return undefined}if(isAtom(expr,"textord","\\nabla")){expr.index+=1;if(isAtom(expr,"mbin","\\times")){expr.index+=1;expr.ast="curl";return expr}else if(isAtom(expr,"mbin","\\cdot")){expr.index+=1;expr.ast="div";return expr}expr.index-=1}else{const digraph=expr.atoms[expr.index].latex+expr.atoms[expr.index+1].latex;const result=/^(>=|<=|>>|<<|:=|!=|\*\*|\+\+|--)$/.test(digraph)?digraph:"";if(result){expr.index+=1}return result}return undefined}function parsePrimary(expr,options){expr.index=expr.index||0;expr.ast=undefined;if(expr.atoms.length===0||expr.index>=expr.atoms.length){return expr}let atom=expr.atoms[expr.index];const val=getCanonicalName(getString(atom));const digraph=parseDigraph(expr);if(digraph){expr.ast=wrapFn(expr.ast,parsePrimary(expr,options).ast)}else if(atom.type==="root"){expr.index=0;expr.atoms=atom.body;return parsePrimary(expr,options)}else if(atom.type==="mbin"&&val==="-"){expr.index+=1;expr=parsePrimary(expr,options);expr.ast=negate(expr.ast)}else if(atom.type==="mbin"&&val==="+"){expr.index+=1;expr=parsePrimary(expr,options);expr.ast=wrapFn("add",expr.ast)}else if(atom.type==="mord"&&/^[0-9.]$/.test(atom.latex)){let num="";let done=false;let pat=/^[0-9.eE]$/;while(expr.index<expr.atoms.length&&!done&&(isAtom(expr,"spacing")||(isAtom(expr,"mord")||isAtom(expr,"mpunct",",")||isAtom(expr,"mbin"))&&pat.test(expr.atoms[expr.index].latex))){if(expr.atoms[expr.index].type==="spacing"){expr.index+=1}else if(typeof expr.atoms[expr.index].superscript!=="undefined"||typeof expr.atoms[expr.index].subscript!=="undefined"){done=true}else{let digit=expr.atoms[expr.index].latex;if(digit==="e"||digit==="E"){if(nextIsSupsub(expr)){digit="";expr.index-=1;done=true}else{digit="E";pat=/^[0-9+-.]$/}}else if(pat===/^[0-9+-.]$/){pat=/^[0-9]$/}num+=digit===","?"":digit;expr.index+=1}}expr.ast=num?wrapNum(num):undefined;atom=expr.atoms[expr.index];if(atom&&atom.type==="genfrac"&&!isNaN(expr.ast.num)){const lhs=expr.ast;expr=parsePrimary(expr,options);expr.ast=wrapFn("add",lhs,expr.ast)}if(atom&&atom.type==="group"&&atom.latex&&atom.latex.startsWith("\\nicefrac")){const lhs=expr.ast;expr=parsePrimary(expr,options);expr.ast=wrapFn("add",lhs,expr.ast)}if(atom&&atom.type==="msubsup"){expr=parseSupsub(expr,options)}expr=parsePostfix(expr,options)}else if(atom.type==="genfrac"||atom.type==="surd"){expr.ast=atom.toAST(options);expr=parseSupsub(expr,options);expr=parsePostfix(expr,options)}else if(atom.type==="mord"||atom.type==="mbin"){if(isFunction(val)&&!isOperator(atom)){expr.ast={fn:val};expr=parseSupsub(expr,options);const fn=expr.ast;const arg=parsePrimary(expr,options).ast;if(arg&&/^(list0|list|list2)$/.test(arg.fn)){fn.arg=arg.arg}else if(arg){fn.arg=[arg]}expr.ast=fn}else{expr.ast=atom.toAST(options);if(expr.ast.sym==="ⅈ"){expr.ast=wrapNum({im:"1"})}expr=parseSupsub(expr)}expr=parsePostfix(expr,options)}else if(atom.type==="textord"){if(!isOperator(atom)){if(!Definitions.RIGHT_DELIM[atom.latex?atom.latex.trim():atom.body]){if(isFunction(val)){expr.ast={fn:val};expr=parseSupsub(expr,options);const fn=expr.ast;expr.index+=1;fn.arg=[parsePrimary(expr,options).ast];expr.ast=fn;expr=parsePostfix(expr,options)}else{expr.ast=atom.toAST(options);if(typeof atom.superscript==="undefined"){expr.index+=1}expr=parseSupsub(expr,options);expr=parsePostfix(expr,options)}}}}else if(atom.type==="mop"){if((/^\\(mathop|operatorname|operatorname\*)/.test(atom.latex)||isFunction(val))&&!isOperator(atom)){expr.ast={fn:/^\\(mathop|operatorname|operatorname\*)/.test(atom.latex)?atom.body:val};expr=parseSupsub(expr,options);if(hasSup(expr.ast)){const INVERSE_FUNCTION={sin:"arcsin",cos:"arccos",tan:"arctan",cot:"arccot",sec:"arcsec",csc:"arccsc",sinh:"arsinh",cosh:"arcosh",tanh:"artanh",csch:"arcsch",sech:"arsech",coth:"arcoth"};if(asMachineNumber(expr.ast.sup)===-1&&INVERSE_FUNCTION[val]){expr.ast=wrapFn(INVERSE_FUNCTION[val],parsePrimary(expr,options).ast)}else{const fn=expr.ast;fn.arg=[parsePrimary(expr,options).ast];expr.ast=fn}}else{const fn=expr.ast;const arg=parsePrimary(expr,options).ast;if(arg&&/^(list0|list|list2)$/.test(arg.fn)){fn.arg=arg.arg}else if(arg){fn.arg=[arg]}expr.ast=fn}}}else if(atom.type==="array"){expr.index+=1;expr.ast=atom.toAST(options)}else if(atom.type==="group"){expr.index+=1;expr.ast=atom.toAST(options)}else if(atom.type==="mclose"){return expr}else if(atom.type==="variable"){expr.ast=atom.toAST(options);expr=parseSupsub(expr,options);expr=parsePostfix(expr,options)}else if(atom.type==="error"){expr.index+=1;expr.ast={error:atom.latex};return expr}if(expr.ast===undefined){const delim=parseDelim(expr,"(",")",options)||parseDelim(expr,null,null,options);if(delim){expr=delim}else if(!isOperator(atom)){if(atom.type==="placeholder"){expr.ast=wrapNum(0)}else{expr.ast={text:"?"};expr.ast.error="Unexpected token "+"'"+atom.type+"'";if(atom.latex){expr.ast.latex=atom.latex}else if(atom.body&&atom.toLatex){expr.ast.latex=atom.toLatex()}}expr.index+=1}}atom=expr.atoms[expr.index];if(atom&&(atom.type==="mord"||atom.type==="surd"||atom.type==="mop"||atom.type==="mopen"||atom.type==="sizeddelim"||atom.type==="leftright")){if(atom.type==="sizeddelim"){for(const d in Definitions.RIGHT_DELIM){if(atom.delim===Definitions.RIGHT_DELIM[d]){expr.index+=1;return expr}}}if((atom.type==="mord"||atom.type==="textord"||atom.type==="mop")&&isOperator(atom)){return expr}const lhs=expr.ast;expr.ast={};expr=parsePrimary(expr,options);if(expr&&expr.ast&&lhs){if(isFunction(lhs.fn)&&typeof lhs.arg==="undefined"||Array.isArray(lhs.arg)&&lhs.arg.length===0){if(expr.ast.fn==="list2"||expr.ast.fn==="list"){expr.ast=wrapFn(lhs.fn,expr.ast.arg)}else{expr.ast=wrapFn("multiply",lhs,expr.ast)}}else{if(expr.ast.fn==="multiply"){expr.ast.arg.unshift(lhs)}else if(numberIm(lhs)===0&&numberRe(lhs)!==0&&numberIm(expr.ast)===1&&numberRe(expr.ast)===0){expr.ast=wrapNum({im:numberRe(lhs).toString()})}else{expr.ast=wrapFn("multiply",lhs,expr.ast)}}}else{expr.ast=lhs}}return expr}function parseExpression(expr,options){expr.index=expr.index||0;expr.ast=undefined;if(expr.atoms.length===0||expr.index>=expr.atoms.length)return expr;expr.minPrec=expr.minPrec||0;let lhs=parsePrimary(expr,options).ast;let done=false;const minPrec=expr.minPrec;while(!done){const atom=expr.atoms[expr.index];const digraph=parseDigraph(expr);done=!atom||atom.mode==="text"||!digraph&&!isOperator(atom);let prec,assoc;if(!done){[prec,assoc]=digraph?[getPrecedence(digraph),getAssociativity(digraph)]:opPrec(atom);done=prec<minPrec}if(!done){const opName=digraph||getCanonicalName(getString(atom));if(assoc==="left"){expr.minPrec=prec+1}else{expr.minPrec=prec}expr.index+=1;if(opName==="|"){if(typeof atom.subscript!=="undefined"||expr.atoms[expr.index]&&typeof expr.atoms[expr.index].subscript!=="undefined"&&expr.atoms[expr.index].type==="msubsup"){expr.ast={};const sub_arg=parseSupsub(expr,options).ast.sub;lhs=wrapFn("bind",lhs);if(sub_arg&&sub_arg.fn==="equal"&&lhs.arg){lhs.arg.push(getArg(sub_arg,0));lhs.arg.push(getArg(sub_arg,1))}else if(sub_arg&&lhs.arg&&(sub_arg.fn==="list"||sub_arg.fn==="list2")){let currentSym={sym:"x"};for(let i=0;i<sub_arg.arg.length;i++){if(sub_arg.arg[i].fn==="equal"){currentSym=getArg(sub_arg.arg[i],0);lhs.arg.push(currentSym);lhs.arg.push(getArg(sub_arg.arg[i],1))}else{lhs.arg.push(currentSym);lhs.arg.push(sub_arg.arg[i])}}}else if(sub_arg){lhs.arg.push({sym:"x"});lhs.arg.push(sub_arg)}}else{done=true}}else{const rhs=parseExpression(expr,options).ast;let fn=SUPER_ASSOCIATIVE_FUNCTION[opName];if(fn&&lhs&&lhs.fn!==fn){lhs=wrapFn(fn,lhs)}if(opName==="-"){if(lhs&&lhs.arg&&lhs.fn==="add"){if(rhs!==undefined)lhs.arg.push(negate(rhs))}else if(lhs&&lhs.fn==="subtract"){lhs=wrapFn("add",getArg(lhs,0),negate(getArg(lhs,1)),negate(rhs))}else if(isNumber$1(lhs)&&!hasSup(lhs)&&isNumber$1(rhs)&&!hasSup(rhs)&&(typeof rhs.num.re==="undefined"||rhs.num.re==="0")&&typeof rhs.num.im!=="undefined"){lhs={num:{re:lhs.num,im:(-parseFloat(rhs.num.im)).toString()}}}else{lhs=wrapFn("subtract",lhs,rhs)}}else{fn=ASSOCIATIVE_FUNCTION[opName];if(fn==="add"&&lhs&&lhs.fn==="subtract"){lhs=wrapFn("add",getArg(lhs,0),negate(getArg(lhs,1)),rhs)}else if(fn&&lhs&&lhs.fn===fn&&!hasSup(lhs)){if(typeof rhs!=="undefined"){if(rhs.fn===fn&&!hasSup(rhs)&&rhs.arg){lhs.arg=[...lhs.arg,...rhs.arg]}else if(lhs.arg){lhs.arg.push(rhs)}}}else if(fn&&rhs&&rhs.arg&&rhs.fn===fn){rhs.arg.unshift(lhs);lhs=rhs}else if(fn==="multiply"&&isNumber$1(lhs)&&!hasSup(lhs)&&rhs&&asMachineNumber(rhs)===10&&isNumber$1(rhs.sup)){lhs=wrapNum(asMachineNumber(lhs)*Math.pow(10,asMachineNumber(rhs.sup)))}else if(fn==="add"&&isNumber$1(lhs)&&!hasSup(lhs)&&rhs&&numberIm(rhs)!==0&&!hasSup(rhs)){lhs={num:{re:lhs.num,im:rhs.num.im}}}else{lhs=wrapFn(fn||OP_NAME[opName]||opName,lhs,rhs)}}}}}expr.ast=lhs;return expr}function escapeText(s){return s.replace(/[\\]/g,"\\\\").replace(/["]/g,'\\"').replace(/[\b]/g,"\\b").replace(/[\f]/g,"\\f").replace(/[\n]/g,"\\n").replace(/[\r]/g,"\\r").replace(/[\t]/g,"\\t")}MathAtom$1.MathAtom.prototype.toAST=function(options){const MATH_VARIANTS={bb:"double-struck",cal:"script",scr:"script",frak:"fraktur",cmrss:"sans-serif",cmrtt:"monospace"};let result={};let sym="";let m;let lhs,rhs;let variant=MATH_VARIANTS[this.baseFontFamily||this.fontFamily];let variantSym;let style="";if(this.fontSeries==="b")style+="bold";if(this.fontShape==="it")style+="italic";const command=this.latex?this.latex.trim():null;switch(this.type){case"root":case"group":if(this.latex&&this.latex.startsWith("\\nicefrac")){m=this.latex.slice(9).match(/({.*}|[^}])({.*}|[^}])/);if(m){if(m[1].length===1){lhs=m[1]}else{lhs=m[1].substr(1,m[1].length-2)}lhs=ParserModule.parseTokens(Lexer$1.tokenize(lhs),"math",null,options.macros);if(m[2].length===1){rhs=m[2]}else{rhs=m[2].substr(1,m[2].length-2)}rhs=ParserModule.parseTokens(Lexer$1.tokenize(rhs),"math",null,options.macros);result=wrapFn("divide",parse(lhs,options),parse(rhs,options))}else{result.fn="divide"}}else{result.group=parse(this.body,options)}break;case"genfrac":result=wrapFn("divide",parse(this.numer,options),this.denom&&this.denom[0]&&this.denom[0].type==="placeholder"?wrapNum(1):parse(this.denom,options));break;case"surd":if(this.index){result=wrapFn("pow",parse(this.body,options),wrapFn("divide",1,parse(this.index,options)))}else{result=wrapFn("sqrt",parse(this.body,options))}break;case"rule":break;case"line":case"overlap":case"accent":break;case"overunder":break;case"mord":case"textord":case"mbin":m=!command?undefined:command.match(/[{]?\\char"([0-9abcdefABCDEF]*)[}]?/);if(m){sym=String.fromCodePoint(parseInt(m[1],16))}else{sym=getCanonicalName(getString(this));if(sym.length>0&&sym.charAt(0)==="\\"){if(typeof this.body==="string"){sym=this.body}}}variantSym=escapeText(Definitions.mathVariantToUnicode(sym,variant,style));if(variantSym!==sym){result={sym:variantSym};variant="normal"}else{result={sym:sym}}break;case"minner":break;case"mop":break;case"box":result=parse(this.body,options);break;case"enclose":break;case"variable":result.variable=parse(this.body,options);break;case"array":if(this.env.name==="cardinality"){result=wrapFn("card",parse(this.array,options))}else if(/array|matrix|pmatrix|bmatrix/.test(this.env.name)){result={fn:"array",args:[]};for(const row of this.array){result.args.push(row.map(cell=>parse(cell,options)))}}else if(this.env.name==="cases"){result={fn:"cases",args:[]};for(const row of this.array){if(row[0]){const statement=[];statement.push(parse(row[0],options));let condition=parse(row[1],options);if(condition){if(condition.fn==="text"&&condition.arg){if(/^(if|when|for)$/i.test(condition.arg[0].trim())){condition=condition.arg.filter(x=>typeof x!=="string")}}}statement.push(condition||{});result.args.push(statement)}}}break;case"spacing":case"space":case"mathstyle":break;default:result=undefined;console.warn('Unhandled atom "'+this.type+'" in "'+(this.latex||this.body)+'"')}if(result&&variant&&variant!=="normal"){result.variant=variant}if(result&&typeof this.cssClass==="string"){result.class=this.cssClass}if(result&&typeof this.cssId==="string"){result.id=this.cssId}return result};function filterPresentationAtoms(atoms){if(!atoms)return[];let result;if(Array.isArray(atoms)){result=[];for(const atom of atoms){const filter=filterPresentationAtoms(atom);result=result.concat(filter)}}else{if(atoms.type==="spacing"){return[]}else if(atoms.type==="first"||atoms.type==="box"){result=filterPresentationAtoms(atoms.body)}else{if(atoms.body&&Array.isArray(atoms.body)){atoms.body=filterPresentationAtoms(atoms.body)}if(atoms.superscript&&Array.isArray(atoms.superscript)){atoms.superscript=filterPresentationAtoms(atoms.superscript)}if(atoms.subscript&&Array.isArray(atoms.subscript)){atoms.subscript=filterPresentationAtoms(atoms.subscript)}if(atoms.index&&Array.isArray(atoms.index)){atoms.index=filterPresentationAtoms(atoms.index)}if(atoms.denom&&Array.isArray(atoms.denom)){atoms.denom=filterPresentationAtoms(atoms.denom)}if(atoms.numer&&Array.isArray(atoms.numer)){atoms.numer=filterPresentationAtoms(atoms.numer)}if(atoms.array&&Array.isArray(atoms.array)){atoms.array=atoms.array.map(row=>row.map(cell=>filterPresentationAtoms(cell)))}result=[atoms]}}return result}function parseSentence(expr,options){expr.index=expr.index||0;expr.ast=undefined;const zones=[];while(expr.atoms[expr.index]){if(expr.atoms[expr.index].mode==="text"){let text="";while(expr.atoms[expr.index]&&expr.atoms[expr.index].mode==="text"){text+=expr.atoms[expr.index].body;expr.index+=1}zones.push(text)}else{const z=parseExpression(expr,options).ast;if(!z)return undefined;zones.push(z)}}if(zones.length>1){return wrapFn("text",...zones)}return zones[0]||undefined}function parse(atoms,options){return parseSentence({atoms:filterPresentationAtoms(atoms)},options)}MathAtom$1.toAST=function(atoms,options){return parse(atoms,options)};function wrapFence(fence){const args=Array.prototype.slice.call(arguments);args.shift();fence=fence||".. ";let result="";if(args.length>0){if(fence[0]!==".")result+=fence[0];let sep="";for(const arg of args){result+=sep+arg;sep=fence[2]}if(fence[1]!==".")result+=fence[1]}return result}function formatMantissa(m,config){const originalLength=m.length;m=m.substr(0,config.precision-2);for(let i=0;i<m.length-16;i++){const offset=m.substr(0,i);for(let j=0;j<17;j++){const cycle=m.substr(i,j+1);const times=Math.floor((m.length-offset.length)/cycle.length);if(times>1){if((offset+cycle.repeat(times+1)).startsWith(m)){if(cycle==="0"){return offset.replace(/(\d{3})/g,"$1"+config.groupSeparator)}return offset.replace(/(\d{3})/g,"$1"+config.groupSeparator)+config.beginRepeatingDigits+cycle.replace(/(\d{3})/g,"$1"+config.groupSeparator)+config.endRepeatingDigits}}}}if(originalLength!==m.length){m+="\\ldots"}return m.replace(/(\d{3})/g,"$1"+config.groupSeparator)}function parseFloatToPrecision(num){return parseFloat(parseFloat(num).toPrecision(15))}function numberAsLatex(num,config){let result="";if(typeof config.precision==="number"){if(typeof num==="number"){num=parseFloatToPrecision(num)}else{let sign="";let exponent="";if(num[0]==="-"){sign="-";num=num.substr(1)}else if(num[0]==="+"){num=num.substr(1)}if(num.indexOf(".")>=0){const m=num.match(/(\d*).(\d*)([e|E]([-+]?[0-9]*))?/);const base=m[1];const mantissa=m[2].substring(0,Math.min(config.precision-base.length,m[2].length));exponent=m[4]||"";if(base==="0"){let p=0;while(mantissa[p]==="0"&&p<mantissa.length){p+=1}let r="";if(p<=4){r="0"+config.decimalMarker;r+=mantissa.substr(0,p);r+=formatMantissa(num.substr(r.length),config)}else if(p+1>=config.precision){r="0";sign=""}else{r=num[p];const f=formatMantissa(num.substr(p+1),config);if(f){r+=config.decimalMarker+f}}if(r!=="0"){if(num.length-1>config.precision&&!r.endsWith("}")&&!r.endsWith("\\ldots")){r+="\\ldots"}if(p>4){r+=config.exponentProduct;if(config.exponentMarker){r+=config.exponentMarker+(1-p).toString()}else{r+="10^{"+(1-p).toString()+"}"}}}num=r}else{num=base.replace(/\B(?=(\d{3})+(?!\d))/g,config.groupSeparator);const f=formatMantissa(mantissa,config);if(f){num+=config.decimalMarker+f}}}else if(num.length>config.precision){const len=num.length;let r=num[0];const f=formatMantissa(num.substr(2),config);if(f){r+=config.decimalMarker+f;if(r[r.length-1]!=="}"){r+="\\ldots"}}if(r!=="1"){r+=config.exponentProduct}else{r=""}if(config.exponentMarker){r+=config.exponentMarker+(len-2).toString()}else{r+="10^{"+(len-2).toString()+"}"}num=r}else{num=num.replace(/\B(?=(\d{3})+(?!\d))/g,config.groupSeparator)}if(exponent){if(config.exponentMarker){exponent=config.exponentMarker+exponent}else{exponent=config.exponentProduct+" 10^{"+exponent+"}"}}return sign+num+exponent}}if(config.scientificNotation==="engineering"){if(num===0){result="0"}else{const y=Math.abs(num);let exponent=Math.round(Math.log10(y));exponent=exponent-exponent%3;if(y<1e3)exponent=0;let mantissa=y/Math.pow(10,exponent);const m=mantissa.toString().match(/^(.*)\.(.*)$/);if(m&&m[1]&&m[2]){mantissa=m[1]+config.decimalMarker+m[2]}if(config.groupSeparator){mantissa=formatMantissa(mantissa.toExponential(),config)}if(exponent===0){exponent=""}else if(config.exponentMarker){exponent=config.exponentMarker+exponent}else{exponent=config.exponentProduct+" 10^{"+exponent+"}"}result=(num<0?"-":"")+mantissa+exponent}}else{const valString=typeof num==="string"?num:num.toString();let m=valString.match(/^(.*)[e|E]([-+]?[0-9]*)$/i);let base,exponent,mantissa;base=valString;mantissa="";if(m&&m[1]&&m[2]){base=m[1];if(config.exponentMarker){exponent=config.exponentMarker+m[2]}else{exponent=config.exponentProduct+" 10^{"+m[2]+"}"}}m=base.match(/^(.*)\.(.*)$/);if(m&&m[1]&&m[2]){base=m[1];mantissa=m[2]}if(config.groupSeparator){base=base.replace(/\B(?=(\d{3})+(?!\d))/g,config.groupSeparator);mantissa=formatMantissa(mantissa,config)}if(mantissa)mantissa=config.decimalMarker+mantissa;result=base+mantissa+(exponent||"")}return result}function asLatex(ast,options){const config=Object.assign({precision:14,decimalMarker:".",groupSeparator:"\\, ",product:"\\cdot ",exponentProduct:"\\cdot ",exponentMarker:"",arcSeparator:"\\,",scientificNotation:"auto",beginRepeatingDigits:"\\overline{",endRepeatingDigits:"}"},options);let result="";if(ast===undefined)return"";if(typeof ast==="string"){ast=JSON.parse(ast)}if(ast.latex){result=ast.latex}else if(isNumber$1(ast)){const val=asMachineNumber(ast);if(val===-Infinity){result="-\\infty "}else if(val===Infinity){result="\\infty "}else if(typeof ast.num==="object"&&(typeof ast.num.re==="string"||typeof ast.num.im==="string")){const re=numberRe(ast);const im=numberIm(ast);if(isNaN(re)||isNaN(im)){result="\\text{NaN}"}else if(Math.abs(im)<=Number.EPSILON&&Math.abs(re)<=Number.EPSILON){result="0"}else{if(Math.abs(re)>Number.EPSILON){result=numberAsLatex(re,config)}if(Math.abs(im)>Number.EPSILON){if(Math.abs(re)>Number.EPSILON){result+=im>0?"+":""}result+=(Math.abs(im)!==1?numberAsLatex(im,config):"")+"\\imaginaryI "}}}else if(isNaN(val)){result="\\text{NaN}"}else{result=numberAsLatex(ast.num,config)}if(hasSup(ast))result+="^{"+asLatex(ast.sup,config)+"}";if(hasSub(ast))result+="_{"+asLatex(ast.sub,config)+"}"}else if(ast.group){result=asLatex(ast.group,config);if(!isNumber$1(ast.group)&&!asSymbol(ast.group)){result=wrapFence(ast.fence||"(),",result)}else if(numberIm(ast.group)!==0){result=wrapFence(ast.fence||"(),",result)}if(hasSup(ast))result+="^{"+asLatex(ast.sup,config)+"}";if(hasSub(ast))result+="_{"+asLatex(ast.sub,config)+"}"}else if(ast.fn){if(ast.fn==="bind"){result=asLatex(getArg(ast,0),config)+"|_{";if(ast.arg&&ast.arg.length===2){result+=asLatex(getArg(ast,1))}else{let sep="";for(let i=1;i<ast.arg.length;i+=2){result+=sep+asLatex(getArg(ast,i))+" = "+asLatex(getArg(ast,i+1));sep=", "}}result+="}"}else if(ast.fn==="divide"){result="\\frac{"+asLatex(getArg(ast,0),config)+"}{"+asLatex(getArg(ast,1),config)+"}"}else if(ast.fn==="negate"){result="-"+asLatex(getArg(ast,0),config)}else if(ast.fn==="subtract"){result=asLatex(getArg(ast,0),config)+" - "+asLatex(getArg(ast,1),config)}else if((ast.fn==="add"||ast.fn==="multiply")&&Array.isArray(ast.arg)){const a=[];for(const exp of ast.arg){if(exp.fn==="add"||exp.fn==="subtract"){a.push(wrapFence("() ",asLatex(exp,config)))}else if(isComplexWithRealAndImaginary(exp)){a.push(wrapFence("() ",asLatex(exp,config)))}else if(hasSup(ast)&&!(numberIm(exp)===0||numberIm(exp)===1)){a.push(wrapFence("() ",asLatex(exp,config)))}else{a.push(asLatex(exp,config))}}if(ast.fn==="multiply"){if(ast.arg&&ast.arg.length===2&&(isNumber$1(ast.arg[0])||ast.arg[0].fn==="divide")&&(!isNumber$1(ast.arg[1])||numberRe(ast.arg[1])===0&&numberIm(ast.arg[1])===1)){result=a[0]+a[1]}else{result=a.join(" \\times ")}}else{if(ast.arg&&ast.arg.length===1){if(ast.arg[0].fn==="negate"||isNumber$1(ast.arg[0])&&asMachineNumber(ast.arg[0])<0){result=a[0]}else{result="+"+a[0]}}else{result=a[0];for(let i=1;i<ast.arg.length;i++){if(ast.arg[i].fn==="negate"||isNumber$1(ast.arg[i])&&asMachineNumber(ast.arg[i])<0){result+=a[i]}else{result+=" + "+a[i]}}}}}else if(ast.fn==="list"||ast.fn==="list2"){const a=[];for(const exp of ast.arg){a.push(asLatex(exp,config))}result=a.join(ast.fn==="list2"?"; ":", ")}else if(ast.fn==="pow"&&Array.isArray(ast.arg)&&ast.arg.length>=2){result=asLatex(getArg(ast,0),config);if(!isNumber$1(getArg(ast,0))&&!asSymbol(getArg(ast,0))){result=wrapFence(ast.fence||"(),",result)}result+="^{"+asLatex(getArg(ast,1),config)+"}"}else if(ast.fn==="equal"&&ast.arg&&ast.arg.length>2){result=ast.arg.map(x=>asLatex(x,config)).join(" = ")}else{const fn=getLatexTemplateForFunction(ast.fn);result=fn;let argstring="";const parenRequired=/%(?![01_^])/.test(fn)&&Array.isArray(ast.arg)&&ast.arg.length>1;if(parenRequired){result+=wrapFence(ast.fence||"(),",...ast.arg.map(x=>asLatex(x,config)))}else if(Array.isArray(ast.arg)&&ast.arg.length>0){const arg0=asLatex(getArg(ast,0),config);const arg1=asLatex(getArg(ast,1),config);const argsn=[...ast.arg];if(/%0/.test(fn)){result=result.replace("%0",arg0);argsn.shift()}if(/%1/.test(fn)){result=result.replace("%1",arg1);argsn.shift()}if(argsn.length>0){argstring=wrapFence(ast.fence||"(),",...argsn.map(x=>asLatex(x,config)))}}else{argstring=wrapFence(ast.fence||"(),","")}if(hasSup(ast)){result=result.replace("%^","^{"+asLatex(ast.sup,config)+"}")}else{result=result.replace("%^","")}if(hasSub(ast)){result=result.replace("%_","_{"+asLatex(ast.sub,config)+"}")}else{result=result.replace("%_","")}result=result.replace(/%(?![01_^])/,argstring);result=result.replace("%0","").replace("%1","")}}else if(typeof ast.sym==="string"){result=asSymbol(ast);let m=result.match(/^&#x([0-9a-f]+);$/i);if(m&&m[1]){result=String.fromCodePoint(parseInt(m[1],16))}else{m=result.match(/^&#([0-9]+);$/i);if(m&&m[1]){result=String.fromCodePoint(parseInt(m[1]))}}if(typeof ast.variant==="string"){const MATH_VARIANTS={normal:"mathrm","double-struck":"mathbb",bold:"mathbf",fraktur:"mathfrak",script:"mathscr","sans-serif":"mathsf",monospace:"mathtt"};result="\\"+MATH_VARIANTS[ast.variant]+"{"+result+"}"}if(hasSup(ast))result+="^{"+asLatex(ast.sup,config)+"}";if(hasSub(ast))result+="_{"+asLatex(ast.sub,config)+"}"}else if(typeof ast.text==="string"){result="\\text{"+ast.text+"}"}if(typeof ast.error==="string"){result="\\bbox[#F56165]{"+result+"}"}return result}var Maston={asLatex:asLatex,asMachineNumber:asMachineNumber,isNumber:isNumber$1,asSymbol:asSymbol};const PRONUNCIATION={"\\alpha":"alpha ","\\mu":"mew ","\\sigma":"sigma ","\\pi":"pie ","\\imaginaryI":"imaginary eye ","\\imaginaryJ":"imaginary jay ","\\sum":"Summation ","\\prod":"Product ",a:'<phoneme alphabet="ipa" ph="eɪ">a</phoneme>',A:'capital <phoneme alphabet="ipa" ph="eɪ">A</phoneme>',"+":"plus ","-":"minus ",";":'<break time="150ms"/> semi-colon <break time="150ms"/>',",":'<break time="150ms"/> comma  <break time="150ms"/>',"|":'<break time="150ms"/>Vertical bar<break time="150ms"/>',"(":'<break time="150ms"/>Open paren. <break time="150ms"/>',")":'<break time="150ms"/> Close paren. <break time="150ms"/>',"=":"equals ","<":"is less than ","\\lt":"is less than ","<=":"is less than or equal to ","\\le":"is less than or equal to ","\\gt":"is greater than ",">":"is greater than ","\\ge":"is greater than or equal to ","\\geq":"is greater than or equal to ","\\leq":"is less than or equal to ","\\ne":"is not equal to ","\\neq":"is not equal to ","!":"factorial ","\\sin":"sine ","\\cos":"cosine ","​":"","−":"minus ",":":'<break time="150ms"/> such that <break time="200ms"/> ',"\\colon":'<break time="150ms"/> such that <break time="200ms"/> ',"\\hbar":"etch bar ","\\iff":'<break time="200ms"/>if, and only if, <break time="200ms"/>',"\\Longleftrightarrow":'<break time="200ms"/>if, and only if, <break time="200ms"/>',"\\land":"and ","\\lor":"or ","\\neg":"not ","\\div":"divided by ","\\forall":"for all ","\\exists":"there exists ","\\nexists":"there does not exists ","\\in":"element of ","\\N":'the set <break time="150ms"/><say-as interpret-as="character">n</say-as>',"\\C":'the set <break time="150ms"/><say-as interpret-as="character">c</say-as>',"\\Z":'the set <break time="150ms"/><say-as interpret-as="character">z</say-as>',"\\Q":'the set <break time="150ms"/><say-as interpret-as="character">q</say-as>',"\\infty":"infinity ","\\nabla":"nabla ","\\partial":"partial derivative of ","\\cdots":"dot dot dot ","\\Rightarrow":"implies ","\\lbrace":'<break time="150ms"/>open brace<break time="150ms"/>',"\\{":'<break time="150ms"/>open brace<break time="150ms"/>',"\\rbrace":'<break time="150ms"/>close brace<break time="150ms"/>',"\\}":'<break time="150ms"/>close brace<break time="150ms"/>',"\\langle":'<break time="150ms"/>left angle bracket<break time="150ms"/>',"\\rangle":'<break time="150ms"/>right angle bracket<break time="150ms"/>',"\\lfloor":'<break time="150ms"/>open floor<break time="150ms"/>',"\\rfloor":'<break time="150ms"/>close floor<break time="150ms"/>',"\\lceil":'<break time="150ms"/>open ceiling<break time="150ms"/>',"\\rceil":'<break time="150ms"/>close ceiling<break time="150ms"/>',"\\vert":'<break time="150ms"/>vertical bar<break time="150ms"/>',"\\mvert":'<break time="150ms"/>divides<break time="150ms"/>',"\\lvert":'<break time="150ms"/>left vertical bar<break time="150ms"/>',"\\rvert":'<break time="150ms"/>right vertical bar<break time="150ms"/>',"\\lbrack":'<break time="150ms"/> open square bracket <break time="150ms"/>',"\\rbrack":'<break time="150ms"/> close square bracket <break time="150ms"/>',mm:"millimeters",cm:"centimeters",km:"kilometers",kg:"kilograms"};function getSpokenName(latex){let result=Popover.NOTES[latex];if(!result&&latex.charAt(0)==="\\"){result=" "+latex.replace("\\","")+" "}if(Array.isArray(result)){result=result[0]}return result}function platform$1(p){let result="other";if(navigator&&navigator.platform&&navigator.userAgent){if(/^(mac)/i.test(navigator.platform)){result="mac"}else if(/^(win)/i.test(navigator.platform)){result="win"}else if(/(android)/i.test(navigator.userAgent)){result="android"}else if(/(iphone)/i.test(navigator.userAgent)||/(ipod)/i.test(navigator.userAgent)||/(ipad)/i.test(navigator.userAgent)){result="ios"}else if(/\bCrOS\b/i.test(navigator.userAgent)){result="chromeos"}}return result===p?p:"!"+p}function isAtomic(mathlist){let count=0;if(mathlist&&Array.isArray(mathlist)){for(const atom of mathlist){if(atom.type!=="first"){count+=1}}}return count===1}function atomicID(mathlist){if(mathlist&&Array.isArray(mathlist)){for(const atom of mathlist){if(atom.type!=="first"&&atom.id){return atom.id.toString()}}}return""}function atomicValue(mathlist){let result="";if(mathlist&&Array.isArray(mathlist)){for(const atom of mathlist){if(atom.type!=="first"&&typeof atom.body==="string"){result+=atom.body}}}return result}MathAtom$1.toSpeakableFragment=function(atom,options){function letter(c){let result="";if(!options.textToSpeechMarkup){if(/[a-z]/.test(c)){result+=" '"+c.toUpperCase()+"'"}else if(/[A-Z]/.test(c)){result+=" 'capital "+c.toUpperCase()+"'"}else{result+=c}}else{if(/[a-z]/.test(c)){result+=' <say-as interpret-as="character">'+c+"</say-as>"}else if(/[A-Z]/.test(c)){result+="capital "+c.toLowerCase()+""}else{result+=c}}return result}function emph(s){return"<emphasis>"+s+"</emphasis>"}if(!atom)return"";let result="";if(atom.id&&options.speechMode==="math"){result+='<mark name="'+atom.id.toString()+'"/>'}if(Array.isArray(atom)){let isInDigitRun=false;for(let i=0;i<atom.length;i++){if(i<atom.length-2&&atom[i].type==="mopen"&&atom[i+2].type==="mclose"&&atom[i+1].type==="mord"){result+=" of ";result+=emph(MathAtom$1.toSpeakableFragment(atom[i+1],options));i+=2}else if(atom[i].mode==="text"){result+=atom[i].body?atom[i].body:" "}else if(atom[i].type==="mord"&&/[0123456789,.]/.test(atom[i].body)){if(isInDigitRun){result+=atom[i].body}else{isInDigitRun=true;result+=MathAtom$1.toSpeakableFragment(atom[i],options)}}else{isInDigitRun=false;result+=MathAtom$1.toSpeakableFragment(atom[i],options)}}}else{let numer="";let denom="";let body="";let supsubHandled=false;switch(atom.type){case"group":case"root":result+=MathAtom$1.toSpeakableFragment(atom.body,options);break;case"genfrac":numer=MathAtom$1.toSpeakableFragment(atom.numer,options);denom=MathAtom$1.toSpeakableFragment(atom.denom,options);if(isAtomic(atom.numer)&&isAtomic(atom.denom)){const COMMON_FRACTIONS={"1/2":" half ","1/3":" one third ","2/3":" two third","1/4":" one quarter ","3/4":" three quarter ","1/5":" one fifth ","2/5":" two fifths ","3/5":" three fifths ","4/5":" four fifths ","1/6":" one sixth ","5/6":" five sixths ","1/8":" one eight ","3/8":" three eights ","5/8":" five eights ","7/8":" seven eights ","1/9":" one ninth ","2/9":" two ninths ","4/9":" four ninths ","5/9":" five ninths ","7/9":" seven ninths ","8/9":" eight ninths "};const commonFraction=COMMON_FRACTIONS[atomicValue(atom.numer)+"/"+atomicValue(atom.denom)];if(commonFraction){result=commonFraction}else{result+=numer+" over "+denom}}else{result+=' the fraction <break time="150ms"/>'+numer+', over <break time="150ms"/>'+denom+'.<break time="150ms"/> End fraction.<break time="150ms"/>'}break;case"surd":body=MathAtom$1.toSpeakableFragment(atom.body,options);if(!atom.index){if(isAtomic(atom.body)){result+=" the square root of "+body+" , "}else{result+=' the square root of <break time="200ms"/>'+body+'. <break time="200ms"/> End square root'}}else{let index=MathAtom$1.toSpeakableFragment(atom.index,options);index=index.trim();const index2=index.replace(/<mark([^/]*)\/>/g,"");if(index2==="3"){result+=' the cube root of <break time="200ms"/>'+body+'. <break time="200ms"/> End cube root'}else if(index2==="n"){result+=' the nth root of <break time="200ms"/>'+body+'. <break time="200ms"/> End root'}else{result+=' the root with index: <break time="200ms"/>'+index+', of <break time="200ms"/>'+body+'. <break time="200ms"/> End root'}}break;case"accent":break;case"leftright":result+=PRONUNCIATION[atom.leftDelim]||atom.leftDelim;result+=MathAtom$1.toSpeakableFragment(atom.body,options);result+=PRONUNCIATION[atom.rightDelim]||atom.rightDelim;break;case"line":break;case"rule":break;case"overunder":break;case"overlap":break;case"placeholder":result+="placeholder "+atom.body;break;case"delim":case"sizeddelim":case"mord":case"minner":case"mbin":case"mrel":case"mpunct":case"mopen":case"mclose":case"textord":{const command=atom.latex?atom.latex.trim():"";if(command==="\\mathbin"||command==="\\mathrel"||command==="\\mathopen"||command==="\\mathclose"||command==="\\mathpunct"||command==="\\mathord"||command==="\\mathinner"){result=MathAtom$1.toSpeakableFragment(atom.body,options);break}let atomValue=atom.body;let latexValue=atom.latex;if(atom.type==="delim"||atom.type==="sizeddelim"){atomValue=latexValue=atom.delim}if(options.speechMode==="text"){result+=atomValue}else{if(atom.type==="mbin"){result+='<break time="150ms"/>'}if(atomValue){const value=PRONUNCIATION[atomValue]||(latexValue?PRONUNCIATION[latexValue.trim()]:"");if(value){result+=" "+value}else{const spokenName=latexValue?getSpokenName(latexValue.trim()):"";result+=spokenName?spokenName:letter(atomValue)}}else{result+=MathAtom$1.toSpeakableFragment(atom.body,options)}if(atom.type==="mbin"){result+='<break time="150ms"/>'}}break}case"mop":if(atom.body!=="​"){const trimLatex=atom.latex?atom.latex.trim():"";if(trimLatex==="\\sum"){if(atom.superscript&&atom.subscript){let sup=MathAtom$1.toSpeakableFragment(atom.superscript,options);sup=sup.trim();let sub=MathAtom$1.toSpeakableFragment(atom.subscript,options);sub=sub.trim();result+=' the summation from <break time="200ms"/>'+sub+'<break time="200ms"/> to  <break time="200ms"/>'+sup+'<break time="200ms"/> of <break time="150ms"/>';supsubHandled=true}else if(atom.subscript){let sub=MathAtom$1.toSpeakableFragment(atom.subscript,options);sub=sub.trim();result+=' the summation from <break time="200ms"/>'+sub+'<break time="200ms"/> of <break time="150ms"/>';supsubHandled=true}else{result+=" the summation of"}}else if(trimLatex==="\\prod"){if(atom.superscript&&atom.subscript){let sup=MathAtom$1.toSpeakableFragment(atom.superscript,options);sup=sup.trim();let sub=MathAtom$1.toSpeakableFragment(atom.subscript,options);sub=sub.trim();result+=' the product from <break time="200ms"/>'+sub+'<break time="200ms"/> to <break time="200ms"/>'+sup+'<break time="200ms"/> of <break time="150ms"/>';supsubHandled=true}else if(atom.subscript){let sub=MathAtom$1.toSpeakableFragment(atom.subscript,options);sub=sub.trim();result+=' the product from <break time="200ms"/>'+sub+'<break time="200ms"/> of <break time="150ms"/>';supsubHandled=true}else{result+=" the product  of "}}else if(trimLatex==="\\int"){if(atom.superscript&&atom.subscript){let sup=MathAtom$1.toSpeakableFragment(atom.superscript,options);sup=sup.trim();let sub=MathAtom$1.toSpeakableFragment(atom.subscript,options);sub=sub.trim();result+=' the integral from <break time="200ms"/>'+emph(sub)+'<break time="200ms"/> to <break time="200ms"/>'+emph(sup)+' <break time="200ms"/> of ';supsubHandled=true}else{result+=' the integral of <break time="200ms"/> '}}else if(typeof atom.body==="string"){const value=PRONUNCIATION[atom.body]||PRONUNCIATION[atom.latex.trim()];if(value){result+=value}else{result+=" "+atom.body}}else if(atom.latex&&atom.latex.length>0){if(atom.latex[0]==="\\"){result+=" "+atom.latex.substr(1)}else{result+=" "+atom.latex}}}break;case"enclose":body=MathAtom$1.toSpeakableFragment(atom.body,options);if(isAtomic(atom.body)){result+=" crossed out "+body+" , "}else{result+=" crossed out "+body+". End cross out"}break;case"space":case"spacing":case"mathstyle":case"box":break;case"variable":{body=atom.toLatex();body=body.substring(10,body.length-1);let name=body;let sub="";const subIndex=body.indexOf("_");if(subIndex>-1){name=body.substring(0,subIndex);sub=body.substring(subIndex+1).replace(/[{}]/gm,"");sub=sub.length>1?" subscript "+sub+"; End subscript; End variable":" sub "+sub;sub=sub.replace(/,/gm,PRONUNCIATION[","])}if(name==="a"){name=name.toUpperCase()}result+="the variable, "+name+sub+". ";break}}if(!supsubHandled&&atom.superscript){let sup=MathAtom$1.toSpeakableFragment(atom.superscript,options);sup=sup.trim();const sup2=sup.replace(/<[^>]*>/g,"");if(isAtomic(atom.superscript)){if(options.speechMode==="math"){const id=atomicID(atom.superscript);if(id){result+='<mark name="'+id+'"/>'}}if(sup2==="′"){result+=" prime "}else if(sup2==="2"){result+=" squared "}else if(sup2==="3"){result+=" cubed "}else if(isNaN(parseInt(sup2))){result+=" to the "+sup+"; "}else{result+=' to the <say-as interpret-as="ordinal">'+sup2+"</say-as> power; "}}else{if(isNaN(parseInt(sup2))){result+=" raised to the "+sup+"; "}else{result+=' raised to the <say-as interpret-as="ordinal">'+sup2+"</say-as> power; "}}}if(!supsubHandled&&atom.subscript){let sub=MathAtom$1.toSpeakableFragment(atom.subscript,options);sub=sub.trim();if(isAtomic(atom.subscript)){result+=" sub "+sub}else{result+=" subscript "+sub+". End subscript. "}}}return result};MathAtom$1.toSpeakableText=function(atoms,speechOptions){const options=speechOptions?JSON.parse(JSON.stringify(speechOptions)):{textToSpeechMarkup:"",textToSpeechRules:"mathlive"};options.speechMode="math";if(window.sre&&options.textToSpeechRules==="sre"){options.generateID=true;const mathML=MathAtom$1.toMathML(atoms,options);if(mathML){if(options.textToSpeechMarkup){options.textToSpeechRulesOptions=options.textToSpeechRulesOptions||{};options.textToSpeechRulesOptions.markup=options.textToSpeechMarkup;if(options.textToSpeechRulesOptions.markup==="ssml"){options.textToSpeechRulesOptions.markup="ssml_step"}options.textToSpeechRulesOptions.rate=options.speechEngineRate}if(options.textToSpeechRulesOptions){window.sre.System.getInstance().setupEngine(options.textToSpeechRulesOptions)}return window.sre.System.getInstance().toSpeech(mathML)}return""}let result=MathAtom$1.toSpeakableFragment(atoms,options);if(options.textToSpeechMarkup==="ssml"){let prosody="";if(options.speechEngineRate){prosody='<prosody rate="'+options.speechEngineRate+'">'}result=`<?xml version="1.0"?><speak version="1.1" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">`+"<amazon:auto-breaths>"+prosody+"<p><s>"+result+"</s></p>"+(prosody?"</prosody>":"")+"</amazon:auto-breaths>"+"</speak>"}else if(options.textToSpeechMarkup==="mac"&&platform$1("mac")==="mac"){result=result.replace(/<mark([^/]*)\/>/g,"").replace(/<emphasis>/g,"[[emph+]]").replace(/<\/emphasis>/g,"").replace(/<break time="([0-9]*)ms"\/>/g,"[[slc $1]]").replace(/<say-as[^>]*>/g,"").replace(/<\/say-as>/g,"")}else{result=result.replace(/<[^>]*>/g,"").replace(/\s{2,}/g," ")}return result};const HAPTIC_FEEDBACK_DURATION=3;const AUDIO_FEEDBACK_VOLUME=.5;function on(el,selectors,listener,options){selectors=selectors.split(" ");for(const sel of selectors){const m=sel.match(/(.*):(.*)/);if(m){const options2=options||{};if(m[2]==="active"){options2.passive=false}else{options2[m[2]]=true}el.addEventListener(m[1],listener,options2)}else{el.addEventListener(sel,listener,options)}}}function off(el,selectors,listener,options){selectors=selectors.split(" ");for(const sel of selectors){const m=sel.match(/(.*):(.*)/);if(m){const options2=options||{};if(m[2]==="active"){options2.passive=false}else{options2[m[2]]=true}el.removeEventListener(m[1],listener,options2)}else{el.removeEventListener(sel,listener,options)}}}function getSharedElement(id,cls){let result=document.getElementById(id);if(result){result.setAttribute("data-refcount",parseInt(result.getAttribute("data-refcount"))+1)}else{result=document.createElement("div");result.setAttribute("aria-hidden","true");result.setAttribute("data-refcount","1");result.className=cls;result.id=id;document.body.appendChild(result)}return result}function releaseSharedElement(el){if(!el)return null;const refcount=parseInt(el.getAttribute("data-refcount"));if(!refcount||refcount===1){el.remove()}else{el.setAttribute("data-refcount",refcount-1)}return el}function isMobileDevice(){return/android|ipad|ipod|iphone/i.test(navigator.userAgent)||/macintosh/i.test(navigator.userAgent)&&navigator.maxTouchPoints}function MathField(element,config){this.$setConfig(config||{});this.element=element;element.mathfield=this;this.originalContent=element.innerHTML;let elementText=this.element.textContent;if(elementText)elementText=elementText.trim();element.classList.add("ML__mathfield");let markup="";if(!this.config.substituteTextArea){if(isMobileDevice()&&!this.config.isNativeMobileKeyboardEnabled){markup+=`<span class='ML__textarea'>\n                <span class='ML__textarea__textarea'\n                    tabindex="0" role="textbox"\n                    style='display:inline-block;height:1px;width:1px' >\n                </span>\n            </span>`}else{markup+='<span class="ML__textarea">'+'<textarea class="ML__textarea__textarea" autocapitalize="off" autocomplete="off" '+'autocorrect="off" spellcheck="false" aria-hidden="true" tabindex="0">'+"</textarea>"+"</span>"}}else{if(typeof this.config.substituteTextArea==="string"){markup+=this.config.substituteTextArea}else{markup+="<span></span>"}}markup+='<span class="ML__fieldcontainer">'+'<span class="ML__fieldcontainer__field"></span>';if(!this.config.virtualKeyboardMode){this.config.virtualKeyboardMode=isMobileDevice()?"onfocus":"off"}if(this.config.virtualKeyboardMode==="manual"||this.config.showVirtualKeyboardButton){const title=l10n("tooltip.toggle virtual keyboard");markup+=`<button class="ML__virtual-keyboard-toggle" data-tooltip="${title}">`;if(this.config.virtualKeyboardToggleGlyph){markup+=this.config.virtualKeyboardToggleGlyph}else{markup+=`<span style="width: 21px; margin-top: 4px;">\n                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" role="img" aria-label="${title}">\n                    <path d="M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z"/>\n                    <title>${title}</title>\n                </svg>\n            </span>`}markup+="</button>"}else{markup+="<span ></span>"}markup+="</span>";markup+=`\n        <div class="sr-only">\n            <span aria-live="assertive" aria-atomic="true"></span>\n            <span></span>\n        </div>\n    `;this.element.innerHTML=markup;let iChild=0;if(typeof this.config.substituteTextArea==="function"){this.textarea=this.config.substituteTextArea()}else{this.textarea=this.element.children[iChild++].firstElementChild}if(this.config.textareaId){this.textarea.id=this.config.textareaId}this.field=this.element.children[iChild].children[0];this.field.addEventListener("wheel",ev=>{ev.preventDefault();ev.stopPropagation();let wheelDelta=typeof ev.deltaX==="undefined"?ev.detail:-ev.deltaX;if(!isFinite(wheelDelta))wheelDelta=ev.wheelDelta/10;this.field.scroll({top:0,left:this.field.scrollLeft-wheelDelta*5})},{passive:false});this.virtualKeyboardToggleDOMNode=this.element.children[iChild++].children[1];this._attachButtonHandlers(this.virtualKeyboardToggleDOMNode,{default:"toggleVirtualKeyboard",alt:"toggleVirtualKeyboardAlt",shift:"toggleVirtualKeyboardShift"});this.ariaLiveText=this.element.children[iChild].children[0];this.accessibleNode=this.element.children[iChild++].children[1];this.popover=getSharedElement("mathlive-popover-panel","ML__popover");this.keystrokeCaption=getSharedElement("mathlive-keystroke-caption-panel","ML__keystroke-caption");this.keystrokeCaptionVisible=false;this.virtualKeyboardVisible=false;this.keystrokeBuffer="";this.keystrokeBufferStates=[];this.keystrokeBufferResetTimer=null;this.suggestionIndex=0;this.mode=config.defaultMode||"math";this.smartModeSuppressed=false;this.style={};this.blurred=true;on(this.element,"focus",this);on(this.element,"blur",this);on(this.textarea,"cut",this);on(this.textarea,"copy",this);on(this.textarea,"paste",this);this.removeDelegatedKeyboardEvents=Keyboard.delegateKeyboardEvents(this.textarea,{container:this.element,allowDeadKey:()=>this.mode==="text",typedText:this._onTypedText.bind(this),paste:this._onPaste.bind(this),keystroke:this._onKeystroke.bind(this),focus:this._onFocus.bind(this),blur:this._onBlur.bind(this)});if(window.PointerEvent){on(this.field,"pointerdown",this)}else{on(this.field,"touchstart:active mousedown",this)}on(window,"resize",this);const localConfig={...config};localConfig.onSelectionDidChange=MathField.prototype._onSelectionDidChange.bind(this);localConfig.onContentDidChange=MathField.prototype._onContentDidChange.bind(this);localConfig.onAnnounce=this.config.onAnnounce;localConfig.macros=this.config.macros;localConfig.removeExtraneousParentheses=this.config.removeExtraneousParentheses;this.mathlist=new EditableMathlist$1.EditableMathlist(localConfig,this);this.undoManager=new Undo.UndoManager(this.mathlist);if(elementText.length>0){this.$latex(elementText)}this.undoManager.startRecording();this.undoManager.snapshot(this.config);console.log("MathField init",this)}MathField.prototype.handleEvent=function(evt){switch(evt.type){case"focus":this._onFocus(evt);break;case"blur":this._onBlur(evt);break;case"touchstart":this._onPointerDown(evt);break;case"mousedown":this._onPointerDown(evt);break;case"pointerdown":this._onPointerDown(evt);break;case"resize":{if(this._resizeTimer)window.cancelAnimationFrame(this._resizeTimer);this._resizeTimer=window.requestAnimationFrame(()=>this._onResize());break}case"cut":this._onCut(evt);break;case"copy":this._onCopy(evt);break;case"paste":this._onPaste(evt);break;default:console.warn("Unexpected event type",evt.type)}};MathField.prototype.$revertToOriginalContent=function(){this.element.innerHTML=this.originalContent;this.element.mathfield=null;delete this.accessibleNode;delete this.ariaLiveText;delete this.field;off(this.textarea,"cut",this);off(this.textarea,"copy",this);off(this.textarea,"paste",this);this.textarea.remove();delete this.textarea;this.virtualKeyboardToggleDOMNode.remove();delete this.virtualKeyboardToggleDOMNode;delete releaseSharedElement(this.popover);delete releaseSharedElement(this.keystrokeCaption);delete releaseSharedElement(this.virtualKeyboard);delete releaseSharedElement(document.getElementById("mathlive-alternate-keys-panel"));off(this.element,"pointerdown",this);off(this.element,"touchstart:active mousedown",this);off(this.element,"focus",this);off(this.element,"blur",this);off(window,"resize",this)};MathField.prototype.$removeEventListeners=function(){console.log("$removeEventListeners",this);off(this.element,"focus",this);off(this.element,"blur",this);off(this.textarea,"cut",this);off(this.textarea,"copy",this);off(this.textarea,"paste",this);if(this.removeDelegatedKeyboardEvents){this.removeDelegatedKeyboardEvents()}if(window.PointerEvent){off(this.field,"pointerdown",this)}else{off(this.field,"touchstart:active mousedown",this)}off(window,"resize",this)};MathField.prototype._resetKeystrokeBuffer=function(){this.keystrokeBuffer="";this.keystrokeBufferStates=[];clearTimeout(this.keystrokeBufferResetTimer)};function _findElementWithCaret(el){if(el.classList.contains("ML__caret")||el.classList.contains("ML__text-caret")||el.classList.contains("ML__command-caret")){return el}let result;Array.from(el.children).forEach(function(child){result=result||_findElementWithCaret(child)});return result}MathField.prototype._getCaretPosition=function(){const caret=_findElementWithCaret(this.field);if(caret){const bounds=caret.getBoundingClientRect();return{x:bounds.right+window.scrollX,y:bounds.bottom+window.scrollY}}return null};MathField.prototype._getSelectionBounds=function(){const selectedNodes=this.field.querySelectorAll(".ML__selected");if(selectedNodes&&selectedNodes.length>0){const selectionRect={top:Infinity,bottom:-Infinity,left:Infinity,right:-Infinity};selectedNodes.forEach(node=>{const bounds=node.getBoundingClientRect();if(bounds.left<selectionRect.left)selectionRect.left=bounds.left;if(bounds.right>selectionRect.right)selectionRect.right=bounds.right;if(bounds.bottom>selectionRect.bottom)selectionRect.bottom=bounds.bottom;if(bounds.top<selectionRect.top)selectionRect.top=bounds.top});const fieldRect=this.field.getBoundingClientRect();const w=selectionRect.right-selectionRect.left;const h=selectionRect.bottom-selectionRect.top;selectionRect.left=Math.ceil(selectionRect.left-fieldRect.left+this.field.scrollLeft);selectionRect.right=selectionRect.left+w;selectionRect.top=Math.ceil(selectionRect.top-fieldRect.top);selectionRect.bottom=selectionRect.top+h;return selectionRect}return null};function nearestElementFromPoint(el,x,y){let result={element:null};let considerChildren=true;if(!el.getAttribute("data-atom-id")){result.distance=Number.POSITIVE_INFINITY}else{result.element=el;const r=el.getBoundingClientRect();const dx=Math.max(r.left-x,x-r.right);const dy=Math.max(r.top-y,y-r.bottom);result.distance=dx*dx+dy*dy;considerChildren=x>=r.left&&x<=r.right}if(considerChildren&&el.children){Array.from(el.children).forEach(function(child){const nearest=nearestElementFromPoint(child,x,y);if(nearest.element&&nearest.distance<=result.distance){result=nearest}})}return result}MathField.prototype._pathFromPoint=function(x,y,options){options=options||{};options.bias=options.bias||0;let result;const nearest=nearestElementFromPoint(this.field,x,y);const el=nearest.element;const id=el?el.getAttribute("data-atom-id"):null;if(id){const paths=this.mathlist.filter(function(_path,atom){if(!atom.captureSelection){return atom.id===id}return atom.filter(childAtom=>childAtom.id===id).length>0});if(paths&&paths.length>0){result=MathPath.pathFromString(paths[0]).path;if(options.bias===0){const bounds=el.getBoundingClientRect();if(x<bounds.left+bounds.width/2&&!el.classList.contains("ML__placeholder")){result[result.length-1].offset=Math.max(0,result[result.length-1].offset-1)}}else if(options.bias<0){result[result.length-1].offset=Math.min(this.mathlist.siblings().length-1,Math.max(0,result[result.length-1].offset+options.bias))}}}return result};let lastTap;let tapCount=0;MathField.prototype._onPointerDown=function(evt){const that=this;let anchor;let trackingPointer=false;let trackingWords=false;let dirty=false;if(evt.pointerType==="mouse"&&evt.buttons!==1)return;let scrollLeft=false;let scrollRight=false;const scrollInterval=setInterval(()=>{if(scrollLeft){that.field.scroll({top:0,left:that.field.scrollLeft-16})}else if(scrollRight){that.field.scroll({top:0,left:that.field.scrollLeft+16})}},32);function endPointerTracking(evt){if(window.PointerEvent){off(that.field,"pointermove",onPointerMove);off(that.field,"pointerend pointercancel pointerup",endPointerTracking);that.field.releasePointerCapture(evt.pointerId)}else{off(that.field,"touchmove",onPointerMove);off(that.field,"touchend",endPointerTracking);off(window,"mousemove",onPointerMove);off(window,"mouseup blur",endPointerTracking)}trackingPointer=false;clearInterval(scrollInterval);that.element.querySelectorAll(".ML__scroller").forEach(x=>x.parentNode.removeChild(x));evt.preventDefault();evt.stopPropagation()}function onPointerMove(evt){const x=evt.touches?evt.touches[0].clientX:evt.clientX;const y=evt.touches?evt.touches[0].clientY:evt.clientY;const hysteresis=evt.pointerType==="touch"?20:5;if(Date.now()<anchorTime+500&&Math.abs(anchorX-x)<hysteresis&&Math.abs(anchorY-y)<hysteresis){evt.preventDefault();evt.stopPropagation();return}const fieldBounds=that.field.getBoundingClientRect();scrollRight=x>fieldBounds.right;scrollLeft=x<fieldBounds.left;let actualAnchor=anchor;if(window.PointerEvent){if(!evt.isPrimary){actualAnchor=that._pathFromPoint(evt.clientX,evt.clientY,{bias:0})}}else{if(evt.touches&&evt.touches.length===2){actualAnchor=that._pathFromPoint(evt.touches[1].clientX,evt.touches[1].clientY,{bias:0})}}const focus=that._pathFromPoint(x,y,{bias:x<=anchorX?x===anchorX?0:-1:+1});if(focus&&that.mathlist.setRange(actualAnchor,focus,{extendToWordBoundary:trackingWords})){that._requestUpdate()}evt.preventDefault();evt.stopPropagation()}const anchorX=evt.touches?evt.touches[0].clientX:evt.clientX;const anchorY=evt.touches?evt.touches[0].clientY:evt.clientY;const anchorTime=Date.now();if(lastTap&&Math.abs(lastTap.x-anchorX)<5&&Math.abs(lastTap.y-anchorY)<5&&Date.now()<lastTap.time+500){tapCount+=1;lastTap.time=anchorTime}else{lastTap={x:anchorX,y:anchorY,time:anchorTime};tapCount=1}const bounds=this.field.getBoundingClientRect();if(anchorX>=bounds.left&&anchorX<=bounds.right&&anchorY>=bounds.top&&anchorY<=bounds.bottom){if(!this.$hasFocus()){dirty=true;if(this.textarea.focus)this.textarea.focus()}this._resetKeystrokeBuffer();this.smartModeSuppressed=false;anchor=this._pathFromPoint(anchorX,anchorY,{bias:0});if(anchor){let div=document.createElement("div");div.className="ML__scroller";this.element.appendChild(div);div.style.left="-200px";div.style.top=-bounds.top+"px";div=document.createElement("div");div.className="ML__scroller";this.element.appendChild(div);div.style.left=bounds.width+"px";div.style.top=-bounds.top+"px";if(evt.shiftKey){this.mathlist.setRange(this.mathlist.path,anchor);anchor=MathPath.clone(this.mathlist.path);anchor[anchor.length-1].offset-=1}else{this.mathlist.setPath(anchor,0)}dirty=true;this.style={};if(evt.detail===3||tapCount>2){endPointerTracking(evt);if(evt.detail===3||tapCount===3){this.mathlist.selectAll_()}}else if(!trackingPointer){trackingPointer=true;if(window.PointerEvent){on(that.field,"pointermove",onPointerMove);on(that.field,"pointerend pointercancel pointerup",endPointerTracking);if(document.body.contains(that.field)){that.field.setPointerCapture(evt.pointerId)}else{console.log("could not setPointerCapture, field not in DOM (caught)")}}else{on(window,"blur",endPointerTracking);if(evt.touches){on(evt.target,"touchmove",onPointerMove);on(evt.target,"touchend",endPointerTracking)}else{on(window,"mousemove",onPointerMove);on(window,"mouseup",endPointerTracking)}}if(evt.detail===2||tapCount===2){trackingWords=true;this.mathlist.selectGroup_()}}}}else{lastTap=null}if(dirty)this._requestUpdate();evt.preventDefault()};MathField.prototype._onSelectionDidChange=function(){this.mathlist.commitCommandStringBeforeInsertionPoint();let result="";this.mathlist.forEachSelected(atom=>{result+=atom.toLatex()});if(result){this.textarea.value=result;if(this.$hasFocus()&&this.textarea.select){this.textarea.select()}}else{this.textarea.value="";this.textarea.setAttribute("aria-label","")}{const previousMode=this.mode;this.mode=this.mathlist.anchorMode()||this.config.defaultMode;if(this.mode!==previousMode&&typeof this.config.onModeChange==="function"){this.config.onModeChange(this,this.mode)}if(previousMode==="command"&&this.mode!=="command"){Popover.hidePopover(this);this.mathlist.removeCommandString()}}Popover.updatePopoverPosition(this,{deferred:true});if(typeof this.config.onSelectionDidChange==="function"){this.config.onSelectionDidChange(this)}};MathField.prototype._onContentDidChange=function(){if(this.undoManager.canRedo()){this.element.classList.add("can-redo")}else{this.element.classList.remove("can-redo")}if(this.undoManager.canUndo()){this.element.classList.add("can-undo")}else{this.element.classList.remove("can-undo")}if(typeof this.config.onContentDidChange==="function"){this.config.onContentDidChange(this)}};MathField.prototype._nextAtomSpeechText=function(oldMathlist){function relation(parent,leaf){const EXPR_NAME={numer:"numerator",denom:"denominator",index:"index",body:"parent",subscript:"subscript",superscript:"superscript"};const PARENT_NAME={enclose:"cross out",leftright:"fence",surd:"square root",root:"math field"};return leaf.relation==="body"?PARENT_NAME[parent.type]:EXPR_NAME[leaf.relation]}const oldPath=oldMathlist?oldMathlist.path:[];const path=this.mathlist.path;const leaf=path[path.length-1];let result="";while(oldPath.length>path.length){result+="out of "+relation(oldMathlist.parent(),oldPath[oldPath.length-1])+"; ";oldPath.pop()}if(!this.mathlist.isCollapsed()){return speakableText(this,"",this.mathlist.getSelectedAtoms())}const relationName=relation(this.mathlist.parent(),leaf);if(leaf.offset===0){result+=(relationName?"start of "+relationName:"unknown")+": "}const atom=this.mathlist.sibling(Math.max(1,this.mathlist.extent));if(atom){result+=speakableText(this,"",atom)}else if(leaf.offset!==0){result+=relationName?"end of "+relationName:"unknown"}return result};function speakableText(mathfield,prefix,atoms){const config=Object.assign({},mathfield.config);config.textToSpeechMarkup="";config.textToSpeechRulesOptions=config.textToSpeechRulesOptions||{};config.textToSpeechRulesOptions.markup="none";return prefix+MathAtom$1.toSpeakableText(atoms,config)}function _onAnnounce(target,command,oldMathlist,atomsToSpeak){let liveText="";if(command==="plonk"){if(target.plonkSound){target.plonkSound.load();target.plonkSound.play().catch(err=>console.warn(err))}target._resetKeystrokeBuffer()}else if(command==="delete"){liveText=speakableText(target,"deleted: ",atomsToSpeak)}else if(command==="focus"||/move/.test(command)){liveText=(target.mathlist.isCollapsed()?"":"selected: ")+target._nextAtomSpeechText(oldMathlist)}else if(command==="replacement"){liveText=speakableText(target,"",target.mathlist.sibling(0))}else if(command==="line"){liveText=speakableText(target,"",target.mathlist.root);target.accessibleNode.innerHTML='<math xmlns="http://www.w3.org/1998/Math/MathML">'+MathAtom$1.toMathML(target.mathlist.root,target.config)+"</math>";target.textarea.setAttribute("aria-label","after: "+liveText)}else{liveText=atomsToSpeak?speakableText(target,command+" ",atomsToSpeak):command}const ariaLiveChangeHack=/\u00a0/.test(target.ariaLiveText.textContent)?"   ":"   ";target.ariaLiveText.textContent=liveText+ariaLiveChangeHack}MathField.prototype._announce=function(command,mathlist,atoms){if(typeof this.config.onAnnounce==="function"){this.config.onAnnounce(this,command,mathlist,atoms)}};MathField.prototype._onFocus=function(){if(this.blurred){this.blurred=false;if(this.textarea.focus)this.textarea.focus();if(this.config.virtualKeyboardMode==="onfocus"){this.showVirtualKeyboard_()}Popover.updatePopoverPosition(this);if(this.config.onFocus)this.config.onFocus(this);this._requestUpdate()}};MathField.prototype._onBlur=function(){if(!this.blurred){this.blurred=true;this.ariaLiveText.textContent="";if(this.config.virtualKeyboardMode==="onfocus"){this.hideVirtualKeyboard_()}this.complete_({discard:true});this._requestUpdate();if(this.config.onBlur)this.config.onBlur(this)}};MathField.prototype._onResize=function(){this.element.classList.remove("ML__isNarrowWidth","ML__isWideWidth","ML__isExtendedWidth");if(window.innerWidth>=1024){this.element.classList.add("ML__isExtendedWidth")}else if(window.innerWidth>=768){this.element.classList.add("ML__isWideWidth")}else{this.element.classList.add("ML__isNarrowWidth")}Popover.updatePopoverPosition(this)};MathField.prototype.toggleKeystrokeCaption_=function(){this.keystrokeCaptionVisible=!this.keystrokeCaptionVisible;this.keystrokeCaption.innerHTML="";if(!this.keystrokeCaptionVisible){this.keystrokeCaption.style.visibility="hidden"}};MathField.prototype._showKeystroke=function(keystroke){const vb=this.keystrokeCaption;if(vb&&this.keystrokeCaptionVisible){const bounds=this.element.getBoundingClientRect();vb.style.left=bounds.left+"px";vb.style.top=bounds.top-64+"px";vb.innerHTML="<span>"+(Shortcuts.stringify(keystroke)||keystroke)+"</span>"+vb.innerHTML;vb.style.visibility="visible";setTimeout(function(){if(vb.childNodes.length>0){vb.removeChild(vb.childNodes[vb.childNodes.length-1])}if(vb.childNodes.length===0){vb.style.visibility="hidden"}},3e3)}};MathField.prototype.$perform=function(command){if(!command)return false;let handled=false;let selector;let args=[];let dirty=false;if(Array.isArray(command)){selector=command[0];args=command.slice(1)}else{selector=command}selector=selector.replace(/-\w/g,m=>m[1].toUpperCase());if(selector==="applyStyle"){selector="$"+selector}else{selector+="_"}if(typeof this.mathlist[selector]==="function"){if(/^(delete|transpose|add)/.test(selector)){this._resetKeystrokeBuffer()}if(/^(delete|transpose|add)/.test(selector)&&this.mode!=="command"){this.undoManager.pop();this.undoManager.snapshot(this.config)}this.mathlist[selector](...args);if(/^(delete|transpose|add)/.test(selector)&&this.mode!=="command"){this.undoManager.snapshot(this.config)}if(/^(delete)/.test(selector)&&this.mode==="command"){const command=this.mathlist.extractCommandStringAroundInsertionPoint();const suggestions=this._getSuggestions(command);if(suggestions.length===0){Popover.hidePopover(this)}else{Popover.showPopoverWithLatex(this,suggestions[0].match,suggestions.length>1)}}dirty=true;handled=true}else if(typeof this[selector]==="function"){dirty=this[selector](...args);handled=true}if(!this.mathlist.isCollapsed()||/^(transpose|paste|complete|((moveToNextChar|moveToPreviousChar|extend).*))_$/.test(selector)){this._resetKeystrokeBuffer();this.style={}}if(dirty)this._requestUpdate();return handled};MathField.prototype.performWithFeedback_=function(command){this.$focus();if(this.config.keypressVibration&&navigator.vibrate){navigator.vibrate(HAPTIC_FEEDBACK_DURATION)}command=command.replace(/-\w/g,m=>m[1].toUpperCase());if(command==="moveToNextPlaceholder"||command==="moveToPreviousPlaceholder"||command==="complete"){if(this.returnKeypressSound){this.returnKeypressSound.load();this.returnKeypressSound.play().catch(err=>console.warn(err))}else if(this.keypressSound){this.keypressSound.load();this.keypressSound.play().catch(err=>console.warn(err))}}else if(command==="deletePreviousChar"||command==="deleteNextChar"||command==="deletePreviousWord"||command==="deleteNextWord"||command==="deleteToGroupStart"||command==="deleteToGroupEnd"||command==="deleteToMathFieldStart"||command==="deleteToMathFieldEnd"){if(this.deleteKeypressSound){this.deleteKeypressSound.load();this.deleteKeypressSound.play().catch(err=>console.warn(err))}else if(this.keypressSound){this.keypressSound.load();this.keypressSound.play().catch(err=>console.warn(err))}}else if(this.keypressSound){this.keypressSound.load();this.keypressSound.play().catch(err=>console.warn(err))}return this.$perform(command)};MathField.prototype.convertLastAtomsToText_=function(count,until){if(typeof count==="function"){until=count;count=Infinity}if(count===undefined)count=Infinity;let i=0;let done=false;this.mathlist.contentWillChange();while(!done){const atom=this.mathlist.sibling(i);done=count===0||!atom||atom.mode!=="math"||!(/mord|textord|mpunct/.test(atom.type)||atom.type==="mop"&&/[a-zA-Z]+/.test(atom.body))||atom.superscript||atom.subscript||until&&!until(atom);if(!done){atom.applyStyle({mode:"text"});atom.latex=atom.body}i-=1;count-=1}this.mathlist.contentDidChange()};MathField.prototype.convertLastAtomsToMath_=function(count,until){if(typeof count==="function"){until=count;count=Infinity}if(count===undefined)count=Infinity;this.mathlist.contentWillChange();let i=0;let done=false;while(!done){const atom=this.mathlist.sibling(i);done=count===0||!atom||atom.mode!=="text"||atom.body===" "||until&&!until(atom);if(!done){atom.applyStyle({mode:"math",type:"mord"})}i-=1;count-=1}this.removeIsolatedSpace_();this.mathlist.contentDidChange()};MathField.prototype.removeIsolatedSpace_=function(){let i=0;while(this.mathlist.sibling(i)&&this.mathlist.sibling(i).mode==="math"){i-=1}if(this.mathlist.sibling(i)&&this.mathlist.sibling(i).mode==="text"&&this.mathlist.sibling(i).body===" "&&(!this.mathlist.sibling(i-1)||this.mathlist.sibling(i-1).mode==="math")){this.mathlist.contentWillChange();this.mathlist.siblings().splice(i-1,1);this.mathlist.contentDidChange();const save=this.mathlist.suppressChangeNotifications;this.mathlist.suppressChangeNotifications=true;this.mathlist.setSelection(this.mathlist.anchorOffset()-1);this.mathlist.suppressChangeNotifications=save}};MathField.prototype.getTextBeforeAnchor_=function(){let result="";let i=0;let done=false;while(!done){const atom=this.mathlist.sibling(i);done=!(atom&&(atom.mode==="text"&&!atom.type||atom.mode==="math"&&/mord|textord|mpunct/.test(atom.type)));if(!done){result=atom.body+result}i-=1}return result};MathField.prototype.smartMode_=function(keystroke,evt){if(this.smartModeSuppressed)return false;if(this.mathlist.endOffset()<this.mathlist.siblings().length-1)return false;if(!evt||evt.ctrlKey||evt.metaKey)return false;const c=Keyboard.eventToChar(evt);if(c.length>1)return false;if(!this.mathlist.isCollapsed()){if(this.mode==="text"){if(/[/_^]/.test(c))return true}return false}const context=this.getTextBeforeAnchor_()+c;if(this.mode==="text"){if(keystroke==="Esc"||/[/\\]/.test(c)){return true}if(/[\^_]/.test(c)){if(/(^|\s)[a-zA-Z][^_]$/.test(context)){this.convertLastAtomsToMath_(1)}return true}const lFence={")":"(","}":"{","]":"["}[c];if(lFence&&this.mathlist.parent()&&this.mathlist.parent().type==="leftright"&&this.mathlist.parent().leftDelim===lFence){return true}if(/(^|[^a-zA-Z])(a|I)[ ]$/.test(context)){return false}if(/[$€£₤₺¥¤฿¢₡₧₨₹₩₱]/u.test(c)){return true}if(/(^|[^a-zA-Z'’])[a-zA-Z][ ]$/.test(context)){this.convertLastAtomsToMath_(1);return false}if(/[^0-9]\.[^0-9\s]$/.test(context)){this.convertLastAtomsToMath_(1);const atom=this.mathlist.sibling(0);atom.body="⋅";atom.autoFontFamily="cmr";atom.latex="\\cdot";return true}if(/(^|\s)[a-zA-Z][^a-zA-Z]$/.test(context)){this.convertLastAtomsToMath_(1);return true}if(/\.[0-9]$/.test(context)){this.convertLastAtomsToMath_(1);return true}if(/[(][0-9+\-.]$/.test(context)){this.convertLastAtomsToMath_(1);return true}if(/[(][a-z][,;]$/.test(context)){this.convertLastAtomsToMath_(2);return true}if(/[0-9+\-=><*|]$/.test(c)){this.removeIsolatedSpace_();return true}}else{if(keystroke==="Spacebar"){this.convertLastAtomsToText_(a=>/[a-z][:,;.]$/.test(a.body));return true}if(/[a-zA-Z]{3,}$/.test(context)&&!/(dxd|abc|xyz|uvw)$/.test(context)){this.convertLastAtomsToText_(a=>/[a-zA-Z:,;.]/.test(a.body));return true}if(/(^|\W)(if|If)$/i.test(context)){this.convertLastAtomsToText_(1);return true}if(/(\u0393|\u0394|\u0398|\u039b|\u039E|\u03A0|\u03A3|\u03a5|\u03a6|\u03a8|\u03a9|[\u03b1-\u03c9]|\u03d1|\u03d5|\u03d6|\u03f1|\u03f5){3,}$/u.test(context)&&!/(αβγ)$/.test(context)){this.convertLastAtomsToText_(a=>/(:|,|;|.|\u0393|\u0394|\u0398|\u039b|\u039E|\u03A0|\u03A3|\u03a5|\u03a6|\u03a8|\u03a9|[\u03b1-\u03c9]|\u03d1|\u03d5|\u03d6|\u03f1|\u03f5)/u.test(a.body));return true}if(/\?|\./.test(c)){return true}}return false};MathField.prototype._onKeystroke=function(keystroke,evt){this._showKeystroke(keystroke);clearTimeout(this.keystrokeBufferResetTimer);if(this.config.onKeystroke&&!this.config.onKeystroke(this,keystroke,evt)){if(evt&&evt.preventDefault){evt.preventDefault();evt.stopPropagation()}return false}let shortcut;let stateIndex;let selector;let resetKeystrokeBuffer=false;if(this.mode!=="command"&&(!evt||!evt.ctrlKey&&!evt.metaKey)){const c=Keyboard.eventToChar(evt);if(c!=="Backspace"){if(!c||c.length>1){this._resetKeystrokeBuffer()}else{const candidate=this.keystrokeBuffer+c;let i=0;while(!shortcut&&i<candidate.length){let siblings;if(this.keystrokeBufferStates[i]){const mathlist=new EditableMathlist$1.EditableMathlist;mathlist.root=MathAtom$1.makeRoot("math",ParserModule.parseTokens(Lexer$1.tokenize(this.keystrokeBufferStates[i].latex),this.config.default,null,this.config.macros));mathlist.setPath(this.keystrokeBufferStates[i].selection);siblings=mathlist.siblings()}else{siblings=this.mathlist.siblings()}shortcut=Shortcuts.forString(this.mode,siblings,candidate.slice(i),this.config);i+=1}stateIndex=i-1;this.keystrokeBuffer+=c;this.keystrokeBufferStates.push(this.undoManager.save());if(Shortcuts.startsWithString(candidate,this.config).length<=1){resetKeystrokeBuffer=true}else{if(this.config.inlineShortcutTimeout){this.keystrokeBufferResetTimer=setTimeout(()=>{this._resetKeystrokeBuffer()},this.config.inlineShortcutTimeout)}}}}}if(this.config.smartMode){const previousMode=this.mode;if(shortcut){this.mode="math"}else if(this.smartMode_(keystroke,evt)){this.mode={math:"text",text:"math"}[this.mode];selector=""}if(this.mode!==previousMode&&typeof this.config.onModeChange==="function"){this.config.onModeChange(this,this.mode)}}if(!shortcut&&!selector){selector=Shortcuts.selectorForKeystroke(this.mode,keystroke)}if(!shortcut&&!selector)return true;this.mathlist.decorateCommandStringAroundInsertionPoint(false);const parent=this.mathlist.parent();if(selector==="moveAfterParent"&&parent&&parent.type==="leftright"&&this.mathlist.endOffset()===this.mathlist.siblings().length-1&&this.config.smartFence&&this.mathlist._insertSmartFence(".")){selector="";this._requestUpdate()}if(this.mode==="math"&&keystroke==="Spacebar"&&!shortcut){const nextSibling=this.mathlist.sibling(1);const previousSibling=this.mathlist.sibling(-1);if(nextSibling&&nextSibling.mode==="text"||previousSibling&&previousSibling.mode==="text"){this.mathlist.insert(" ",{mode:"text"})}}if(selector&&!this.$perform(selector)||shortcut){if(shortcut){if(!/^(\\{|\\}|\\[|\\]|\\@|\\#|\\$|\\%|\\^|\\_|\\backslash)$/.test(shortcut)){const style={...this.mathlist.anchorStyle(),...this.style};this.mathlist.insert(Keyboard.eventToChar(evt),{suppressChangeNotifications:true,mode:this.mode,style:style});const saveMode=this.mode;this.undoManager.snapshotAndCoalesce(this.config);this.undoManager.restore(this.keystrokeBufferStates[stateIndex],{...this.config,suppressChangeNotifications:true});this.mode=saveMode}this.mathlist.contentWillChange();const save=this.mathlist.suppressChangeNotifications;this.mathlist.suppressChangeNotifications=true;const style={...this.mathlist.anchorStyle(),...this.style};this.mathlist.insert(shortcut,{format:"latex",mode:this.mode,style:style,smartFence:true});this.removeIsolatedSpace_();if(shortcut.endsWith(" ")){this.mode="text";this.mathlist.insert(" ",{mode:"text",style:style})}this.mathlist.suppressChangeNotifications=save;this.mathlist.contentDidChange();this.undoManager.snapshot(this.config);this._requestUpdate();this._announce("replacement");if(resetKeystrokeBuffer){this._resetKeystrokeBuffer()}}}this.scrollIntoView();if(evt&&evt.preventDefault){evt.preventDefault();evt.stopPropagation()}return false};MathField.prototype._onTypedText=function(text,options){options=options||{};if(options.focus)this.$focus();if(options.feedback){if(this.config.keypressVibration&&navigator.vibrate){navigator.vibrate(HAPTIC_FEEDBACK_DURATION)}if(this.keypressSound){this.keypressSound.load();this.keypressSound.play().catch(err=>console.warn(err))}}if(options.commandMode&&this.mode!=="command"){this.switchMode_("command")}this.mathlist.decorateCommandStringAroundInsertionPoint(false);if(options.simulateKeystroke){const c=text.charAt(0);const ev=Keyboard.charToEvent(c);if(!this.$keystroke(Keyboard.keyboardEventToString(ev),ev))return}let popoverText="";let displayArrows=false;if(this.pasteInProgress){this.pasteInProgress=false;this.mathlist.insert(text,{smartFence:this.config.smartFence,mode:"math"})}else{const style={...this.mathlist.anchorStyle(),...this.style};const graphemes=GraphemeSplitter.splitGraphemes(text);for(const c of graphemes){if(this.mode==="command"){this.mathlist.removeSuggestion();this.suggestionIndex=0;const command=this.mathlist.extractCommandStringAroundInsertionPoint();const suggestions=this._getSuggestions(command+c);displayArrows=suggestions.length>1;if(suggestions.length===0){this.mathlist.insert(c,{mode:"command"});if(/^\\[a-zA-Z\\*]+$/.test(command+c)){this.mathlist.decorateCommandStringAroundInsertionPoint(true)}Popover.hidePopover(this)}else{this.mathlist.insert(c,{mode:"command"});if(suggestions[0].match!==command+c){this.mathlist.insertSuggestion(suggestions[0].match,-suggestions[0].match.length+command.length+1)}popoverText=suggestions[0].match}}else if(this.mode==="math"){const selector={"^":"moveToSuperscript",_:"moveToSubscript"," ":"moveAfterParent"}[c];if(selector){if(selector==="moveToSuperscript"){if(this._superscriptDepth()>=this.config.scriptDepth[1]){this._announce("plonk");return}}else if(selector==="moveToSubscript"){if(this._subscriptDepth()>=this.config.scriptDepth[0]){this._announce("plonk");return}}this.$perform(selector)}else{if(this.config.smartSuperscript&&this.mathlist.relation()==="superscript"&&/[0-9]/.test(c)&&this.mathlist.siblings().filter(x=>x.type!=="first").length===0){this.mathlist.insert(c,{mode:"math",style:style});this.mathlist.moveAfterParent_()}else{this.mathlist.insert(c,{mode:"math",style:style,smartFence:this.config.smartFence})}}}else if(this.mode==="text"){this.mathlist.insert(c,{mode:"text",style:style})}}}if(this.mode!=="command"){this.undoManager.snapshotAndCoalesce(this.config)}this._requestUpdate();this.scrollIntoView();Popover.showPopoverWithLatex(this,popoverText,displayArrows)};MathField.prototype._hash=function(){let result=0;const str=this.mathlist.root.toLatex(false);for(let i=0;i<str.length;i++){result=result*31+str.charCodeAt(i);result=result|0}return Math.abs(result)};MathField.prototype._requestUpdate=function(){if(!this.dirty){this.dirty=true;requestAnimationFrame(_=>this._render())}};MathField.prototype._render=function(renderOptions){renderOptions=renderOptions||{};this.dirty=false;if(!window.mathlive)window.mathlive={};if(!this.mathlist.anchor()){console.warn("Invalid selection, resetting it. "+MathPath.pathToString(this.mathlist.path));this.mathlist.path=[{relation:"body",offset:0}]}this.mathlist.forEach(a=>{a.caret="";a.isSelected=false});const hasFocus=this.$hasFocus();if(this.mathlist.isCollapsed()){this.mathlist.anchor().caret=hasFocus?this.mode:""}else{this.mathlist.forEachSelected(a=>{a.isSelected=true})}const spans=MathAtom$1.decompose({mathstyle:"displaystyle",generateID:{seed:this._hash(),groupNumbers:renderOptions.forHighlighting},macros:this.config.macros},this.mathlist.root);const base=Span$1.makeSpan(spans,"ML__base");base.attributes={translate:"no","aria-hidden":"true"};const topStrut=Span$1.makeSpan("","ML__strut");topStrut.setStyle("height",base.height,"em");const struts=[topStrut];if(base.depth!==0){const bottomStrut=Span$1.makeSpan("","ML__strut--bottom");bottomStrut.setStyle("height",base.height+base.depth,"em");bottomStrut.setStyle("vertical-align",-base.depth,"em");struts.push(bottomStrut)}struts.push(base);const wrapper=Span$1.makeSpan(struts,"ML__mathlive");this.field.innerHTML=wrapper.toMarkup(0,this.config.horizontalSpacingScale);this.field.classList.toggle("ML__focused",hasFocus);this.accessibleNode.innerHTML="<math xmlns='http://www.w3.org/1998/Math/MathML'>"+MathAtom$1.toMathML(this.mathlist.root,this.config)+"</math>";const selectionRect=this._getSelectionBounds();if(selectionRect){const selectionElement=document.createElement("div");selectionElement.classList.add("ML__selection");selectionElement.style.position="absolute";selectionElement.style.left=selectionRect.left+"px";selectionElement.style.top=selectionRect.top+"px";selectionElement.style.width=Math.ceil(selectionRect.right-selectionRect.left)+"px";selectionElement.style.height=Math.ceil(selectionRect.bottom-selectionRect.top-1)+"px";this.field.insertBefore(selectionElement,this.field.childNodes[0])}};MathField.prototype._onPaste=function(){this.pasteInProgress=true;return true};MathField.prototype._onCut=function(){setTimeout(function(){this.$clearSelection();this._requestUpdate()}.bind(this),0);return true};MathField.prototype._onCopy=function(e){if(this.mathlist.isCollapsed()){e.clipboardData.setData("text/plain",this.$text("latex-expanded"));e.clipboardData.setData("application/json",this.$text("json"));e.clipboardData.setData("application/xml",this.$text("mathML"))}else{e.clipboardData.setData("text/plain",this.$selectedText("latex-expanded"));e.clipboardData.setData("application/json",this.$selectedText("json"));e.clipboardData.setData("application/xml",this.$selectedText("mathML"))}e.preventDefault()};MathField.prototype.formatMathlist=function(root,format){format=format||"latex";let result="";if(format==="latex"||format==="latex-expanded"){result=root.toLatex(format==="latex-expanded")}else if(format==="mathML"){result=root.toMathML(this.config)}else if(format==="spoken"){result=MathAtom$1.toSpeakableText(root,this.config)}else if(format==="spoken-text"){const saveTextToSpeechMarkup=this.config.textToSpeechMarkup;this.config.textToSpeechMarkup="";result=MathAtom$1.toSpeakableText(root,this.config);this.config.textToSpeechMarkup=saveTextToSpeechMarkup}else if(format==="spoken-ssml"||format==="spoken-ssml-withHighlighting"){const saveTextToSpeechMarkup=this.config.textToSpeechMarkup;const saveGenerateID=this.config.generateID;this.config.textToSpeechMarkup="ssml";if(format==="spoken-ssml-withHighlighting"){this.config.generateID=true}result=MathAtom$1.toSpeakableText(root,this.config);this.config.textToSpeechMarkup=saveTextToSpeechMarkup;this.config.generateID=saveGenerateID}else if(format==="json"){const json=MathAtom$1.toAST(root,this.config);result=JSON.stringify(json)}else if(format==="ASCIIMath"){result=toASCIIMath(root,this.config)}else{console.warn("Unknown format :",format)}return result};MathField.prototype.$text=function(format){return this.formatMathlist(this.mathlist.root,format)};MathField.prototype.$selectedText=function(format){const atoms=this.mathlist.getSelectedAtoms();if(!atoms)return"";const root=MathAtom$1.makeRoot("math",atoms);return this.formatMathlist(root,format)};MathField.prototype.$selectionIsCollapsed=function(){return this.mathlist.isCollapsed()};MathField.prototype.$selectionDepth=function(){return this.mathlist.path.length};MathField.prototype._superscriptDepth=function(){let result=0;let i=0;let atom=this.mathlist.ancestor(i);let wasSuperscript=false;while(atom){if(atom.superscript||atom.subscript){result+=1}if(atom.superscript){wasSuperscript=true}else if(atom.subscript){wasSuperscript=false}i+=1;atom=this.mathlist.ancestor(i)}return wasSuperscript?result:0};MathField.prototype._subscriptDepth=function(){let result=0;let i=0;let atom=this.mathlist.ancestor(i);let wasSubscript=false;while(atom){if(atom.superscript||atom.subscript){result+=1}if(atom.superscript){wasSubscript=false}else if(atom.subscript){wasSubscript=true}i+=1;atom=this.mathlist.ancestor(i)}return wasSubscript?result:0};MathField.prototype.$selectionAtStart=function(){return this.mathlist.startOffset()===0};MathField.prototype.$selectionAtEnd=function(){return this.mathlist.endOffset()>=this.mathlist.siblings().length-1};MathField.prototype.groupIsSelected=function(){return this.mathlist.startOffset()===0&&this.mathlist.endOffset()>=this.mathlist.siblings().length-1};MathField.prototype.$latex=function(text,options){options=options||{};options.suppressChangeNotifications=!!options.suppressChangeNotifications;options.outputStyles=!!options.outputStyles;if(typeof text!=="undefined"){const oldValue=this.mathlist.root.toLatex(options);console.log("$latex",{oldValue:oldValue,text:text,options:options});if(text!==oldValue){this.mathlist.insert(text,Object.assign({},this.config,{insertionMode:"replaceAll",selectionMode:"after",format:"latex",mode:"math",suppressChangeNotifications:options.suppressChangeNotifications}));this.undoManager.snapshot(this.config);this._requestUpdate()}return text}return this.mathlist.root.toLatex(options)};MathField.prototype.$el=function(){return this.element};MathField.prototype.undo_=MathField.prototype.undo=function(){this.complete_();this.undoManager.undo(this.config);return true};MathField.prototype.redo_=MathField.prototype.redo=function(){this.complete_();this.undoManager.redo(this.config);return true};MathField.prototype.scrollIntoView_=MathField.prototype.scrollIntoView=function(){if(this.dirty){this._render()}let pos=this._getCaretPosition();const fieldBounds=this.field.getBoundingClientRect();if(!pos){const selectionBounds=this._getSelectionBounds();if(selectionBounds){pos={x:selectionBounds.right+fieldBounds.left-this.field.scrollLeft,y:selectionBounds.top+fieldBounds.top-this.field.scrollTop}}}if(pos){const x=pos.x-window.scrollX;if(x<fieldBounds.left){this.field.scroll({top:0,left:x-fieldBounds.left+this.field.scrollLeft-20,behavior:"smooth"})}else if(x>fieldBounds.right){this.field.scroll({top:0,left:x-fieldBounds.right+this.field.scrollLeft+20,behavior:"smooth"})}}};MathField.prototype.scrollToStart_=MathField.prototype.scrollToStart=function(){this.field.scroll(0,0)};MathField.prototype.scrollToEnd_=MathField.prototype.scrollToEnd=function(){const fieldBounds=this.field.getBoundingClientRect();this.field.scroll(fieldBounds.left-window.scrollX,0)};MathField.prototype.enterCommandMode_=function(){this.switchMode_("command")};MathField.prototype.copyToClipboard_=function(){this.$focus();if(this.mathlist.isCollapsed()){this.$select()}document.execCommand("copy");return false};MathField.prototype.cutToClipboard_=function(){this.$focus();document.execCommand("cut");return true};MathField.prototype.pasteFromClipboard_=function(){this.$focus();document.execCommand("paste");return true};MathField.prototype.insert_=MathField.prototype.$insert=function(s,options){if(typeof s==="string"&&s.length>0){options=options||{};if(options.focus)this.$focus();if(options.feedback){if(this.config.keypressVibration&&navigator.vibrate){navigator.vibrate(HAPTIC_FEEDBACK_DURATION)}if(this.keypressSound){this.keypressSound.load();this.keypressSound.play()}}if(s==="\\\\"){this.mathlist.addRowAfter_()}else if(s==="&"){this.mathlist.addColumnAfter_()}else{const savedStyle=this.style;this.mathlist.insert(s,{mode:this.mode,style:this.mathlist.anchorStyle(),...options});if(options.resetStyle){this.style=savedStyle}}this.undoManager.snapshot(this.config);this._requestUpdate();return true}return false};MathField.prototype.switchMode_=function(mode,prefix,suffix){this._resetKeystrokeBuffer();this.smartModeSuppressed=/text|math/.test(this.mode)&&/text|math/.test(mode);if(prefix){this.$insert(prefix,{format:"latex",mode:{math:"text",text:"math"}[mode]})}this.mathlist.decorateCommandStringAroundInsertionPoint(false);if(mode==="command"){this.mathlist.removeSuggestion();Popover.hidePopover(this);this.suggestionIndex=0;if(this.virtualKeyboardVisible){this.switchKeyboardLayer_("lower-command")}this.mathlist.insert("",{mode:"math"})}else{this.mode=mode}if(suffix){this.$insert(suffix,{format:"latex",mode:mode})}if(typeof this.config.onModeChange==="function"){this.config.onModeChange(this,this.mode)}this._requestUpdate()};MathField.prototype.complete_=function(options){options=options||{};Popover.hidePopover(this);if(options.discard){this.mathlist.spliceCommandStringAroundInsertionPoint(null);this.switchMode_("math");return true}const command=this.mathlist.extractCommandStringAroundInsertionPoint(!options.acceptSuggestion);if(command){if(command==="\\("||command==="\\)"){this.mathlist.spliceCommandStringAroundInsertionPoint([]);this.mathlist.insert(command.slice(1),{mode:this.mode})}else{const mode="math";if(Definitions.commandAllowed(mode,command)){const mathlist=ParserModule.parseTokens(Lexer$1.tokenize(command),mode,null,this.config.macros);this.mathlist.spliceCommandStringAroundInsertionPoint(mathlist)}else{const mathlist=ParserModule.parseTokens(Lexer$1.tokenize(command),mode,null,this.config.macros);if(mathlist){this.mathlist.spliceCommandStringAroundInsertionPoint(mathlist)}else{this.mathlist.decorateCommandStringAroundInsertionPoint(true)}}}this.undoManager.snapshot(this.config);this._announce("replacement");this.switchMode_("math");return true}return false};MathField.prototype._getSuggestions=function(command){let suggestions=Definitions.suggest(command);if(this.config.suggestionWhitelist){suggestions=suggestions.filter(s=>this.config.suggestionWhitelist.includes(s.match))}if(this.config.suggestionBlacklist){suggestions=suggestions.filter(s=>!this.config.suggestionBlacklist.includes(s.match))}return suggestions};MathField.prototype._updateSuggestion=function(){this.mathlist.positionInsertionPointAfterCommitedCommand();this.mathlist.removeSuggestion();const command=this.mathlist.extractCommandStringAroundInsertionPoint();const suggestions=this._getSuggestions(command);if(suggestions.length===0){Popover.hidePopover(this);this.mathlist.decorateCommandStringAroundInsertionPoint(true)}else{const index=this.suggestionIndex%suggestions.length;const l=command.length-suggestions[index].match.length;if(l!==0){this.mathlist.insertSuggestion(suggestions[index].match,l)}Popover.showPopoverWithLatex(this,suggestions[index].match,suggestions.length>1)}this._requestUpdate()};MathField.prototype.nextSuggestion_=function(){this.suggestionIndex+=1;this._updateSuggestion();return false};MathField.prototype.previousSuggestion_=function(){this.suggestionIndex-=1;if(this.suggestionIndex<0){this.mathlist.removeSuggestion();const command=this.mathlist.extractCommandStringAroundInsertionPoint();const suggestions=this._getSuggestions(command);this.suggestionIndex=suggestions.length-1}this._updateSuggestion();return false};MathField.prototype._attachButtonHandlers=function(el,command){const that=this;if(typeof command==="object"&&(command.default||command.pressed)){if(command.default){el.setAttribute("data-"+this.config.namespace+"command",JSON.stringify(command.default))}if(command.alt){el.setAttribute("data-"+this.config.namespace+"command-alt",JSON.stringify(command.alt))}if(command.altshift){el.setAttribute("data-"+this.config.namespace+"command-altshift",JSON.stringify(command.altshift))}if(command.shift){el.setAttribute("data-"+this.config.namespace+"command-shift",JSON.stringify(command.shift))}if(command.pressed){el.setAttribute("data-"+this.config.namespace+"command-pressed",JSON.stringify(command.pressed))}if(command.pressAndHoldStart){el.setAttribute("data-"+this.config.namespace+"command-pressAndHoldStart",JSON.stringify(command.pressAndHoldStart))}if(command.pressAndHoldEnd){el.setAttribute("data-"+this.config.namespace+"command-pressAndHoldEnd",JSON.stringify(command.pressAndHoldEnd))}}else{el.setAttribute("data-"+this.config.namespace+"command",JSON.stringify(command))}let pressHoldStart;let pressHoldElement;let touchID;let syntheticTarget;let pressAndHoldTimer;on(el,"mousedown touchstart:passive",function(ev){if(ev.type!=="mousedown"||ev.buttons===1){ev.stopPropagation();ev.preventDefault();el.classList.add("pressed");pressHoldStart=Date.now();if(ev.type==="touchstart")touchID=ev.changedTouches[0].identifier;const command=el.getAttribute("data-"+that.config.namespace+"command-pressed");if(command){that.$perform(JSON.parse(command))}const pressAndHoldStartCommand=el.getAttribute("data-"+that.config.namespace+"command-pressAndHoldStart");if(pressAndHoldStartCommand){pressHoldElement=el;if(pressAndHoldTimer)clearTimeout(pressAndHoldTimer);pressAndHoldTimer=window.setTimeout(function(){if(el.classList.contains("pressed")){that.$perform(JSON.parse(pressAndHoldStartCommand))}},300)}}});on(el,"mouseleave touchcancel",function(){el.classList.remove("pressed")});on(el,"touchmove:passive",function(ev){ev.preventDefault();for(let i=0;i<ev.changedTouches.length;i++){if(ev.changedTouches[i].identifier===touchID){const target=document.elementFromPoint(ev.changedTouches[i].clientX,ev.changedTouches[i].clientY);if(target!==syntheticTarget&&syntheticTarget){syntheticTarget.dispatchEvent(new MouseEvent("mouseleave"),{bubbles:true});syntheticTarget=null}if(target){syntheticTarget=target;target.dispatchEvent(new MouseEvent("mouseenter",{bubbles:true,buttons:1}))}}}});on(el,"mouseenter",function(ev){if(ev.buttons===1){el.classList.add("pressed")}});on(el,"mouseup touchend click",function(ev){if(syntheticTarget){ev.stopPropagation();ev.preventDefault();const target=syntheticTarget;syntheticTarget=null;target.dispatchEvent(new MouseEvent("mouseup",{bubbles:true}));return}el.classList.remove("pressed");el.classList.add("active");if(ev.type==="click"&&ev.detail!==0){ev.stopPropagation();ev.preventDefault();return}window.setTimeout(function(){el.classList.remove("active")},150);let command=el.getAttribute("data-"+that.config.namespace+"command-pressAndHoldEnd");const now=Date.now();if(el!==pressHoldElement||now<pressHoldStart+300){command=undefined}if(!command&&ev.altKey&&ev.shiftKey){command=el.getAttribute("data-"+that.config.namespace+"command-altshift")}if(!command&&ev.altKey){command=el.getAttribute("data-"+that.config.namespace+"command-alt")}if(!command&&ev.shiftKey){command=el.getAttribute("data-"+that.config.namespace+"command-shift")}if(!command){command=el.getAttribute("data-"+that.config.namespace+"command")}if(command){that.$perform(JSON.parse(command))}ev.stopPropagation();ev.preventDefault()})};MathField.prototype._makeButton=function(label,cls,ariaLabel,command){const button=document.createElement("span");button.innerHTML=label;if(cls)button.classList.add([].slice.call(cls.split(" ")));if(ariaLabel)button.setAttribute("aria-label",ariaLabel);this._attachButtonHandlers(button,command);return button};MathField.prototype.showAlternateKeys_=function(keycap,altKeys){const altContainer=getSharedElement("mathlive-alternate-keys-panel","ML__keyboard alternate-keys");if(this.virtualKeyboard.classList.contains("material")){altContainer.classList.add("material")}if(altKeys.length>=7){altContainer.style.width="286px"}else if(altKeys.length===4||altKeys.length===2){altContainer.style.width="146px"}else if(altKeys.length===1){altContainer.style.width="86px"}else{altContainer.style.width="146px"}altContainer.style.height="auto";let markup="";for(const altKey of altKeys){markup+="<li";if(typeof altKey==="string"){markup+=' data-latex="'+altKey.replace(/"/g,"&quot;")+'"'}else{if(altKey.latex){markup+=' data-latex="'+altKey.latex.replace(/"/g,"&quot;")+'"'}if(altKey.content){markup+=' data-content="'+altKey.content.replace(/"/g,"&quot;")+'"'}if(altKey.insert){markup+=' data-insert="'+altKey.insert.replace(/"/g,"&quot;")+'"'}if(altKey.command){markup+=" data-command='"+altKey.command.replace(/"/g,"&quot;")+"'"}if(altKey.aside){markup+=' data-aside="'+altKey.aside.replace(/"/g,"&quot;")+'"'}if(altKey.classes){markup+=' data-classes="'+altKey.classes+'"'}}markup+=">";markup+=altKey.label||"";markup+="</li>"}markup="<ul>"+markup+"</ul>";altContainer.innerHTML=markup;VirtualKeyboard.makeKeycap(this,altContainer.getElementsByTagName("li"),"performAlternateKeys");const keycapEl=this.virtualKeyboard.querySelector('div.keyboard-layer.is-visible div.rows ul li[data-alt-keys="'+keycap+'"]');const position=keycapEl.getBoundingClientRect();if(position){if(position.top-altContainer.clientHeight<0){altContainer.style.width="auto";if(altKeys.length<=6){altContainer.style.height="56px"}else if(altKeys.length<=12){altContainer.style.height="108px"}else{altContainer.style.height="205px"}}const top=(position.top-altContainer.clientHeight+5).toString()+"px";const left=Math.max(0,Math.min(window.innerWidth-altContainer.offsetWidth,(position.left+position.right-altContainer.offsetWidth)/2))+"px";altContainer.style.transform="translate("+left+","+top+")";altContainer.classList.add("is-visible")}return false};MathField.prototype.hideAlternateKeys_=function(){const altContainer=document.getElementById("mathlive-alternate-keys-panel");if(altContainer){altContainer.classList.remove("is-visible");altContainer.innerHTML="";delete releaseSharedElement(altContainer)}return false};MathField.prototype.performAlternateKeys_=function(command){this.hideAlternateKeys_();return this.$perform(command)};MathField.prototype.switchKeyboardLayer_=function(layer){if(this.config.virtualKeyboardMode!=="off"){if(layer!=="lower-command"&&layer!=="upper-command"&&layer!=="symbols-command"){this.complete_()}this.showVirtualKeyboard_();this.hideAlternateKeys_();this.unshiftKeyboardLayer_();const layers=this.virtualKeyboard.getElementsByClassName("keyboard-layer");let found=false;for(let i=0;i<layers.length;i++){if(layers[i].id===layer){found=true;break}}if(found){for(let i=0;i<layers.length;i++){if(layers[i].id===layer){layers[i].classList.add("is-visible")}else{layers[i].classList.remove("is-visible")}}}this.$focus()}return true};MathField.prototype.shiftKeyboardLayer_=function(){const keycaps=this.virtualKeyboard.querySelectorAll("div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action");if(keycaps){for(let i=0;i<keycaps.length;i++){const keycap=keycaps[i];let shiftedContent=keycap.getAttribute("data-shifted");if(shiftedContent||/^[a-z]$/.test(keycap.innerHTML)){keycap.setAttribute("data-unshifted-content",keycap.innerHTML);if(!shiftedContent){shiftedContent=keycap.innerHTML.toUpperCase()}keycap.innerHTML=shiftedContent;const command=keycap.getAttribute("data-"+this.config.namespace+"command");if(command){keycap.setAttribute("data-unshifted-command",command);const shiftedCommand=keycap.getAttribute("data-shifted-command");if(shiftedCommand){keycap.setAttribute("data-"+this.config.namespace+"command",shiftedCommand)}else{const commandObj=JSON.parse(command);if(Array.isArray(commandObj)){commandObj[1]=commandObj[1].toUpperCase()}keycap.setAttribute("data-"+this.config.namespace+"command",JSON.stringify(commandObj))}}}}}return false};MathField.prototype.unshiftKeyboardLayer_=function(){const keycaps=this.virtualKeyboard.querySelectorAll("div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action");if(keycaps){for(let i=0;i<keycaps.length;i++){const keycap=keycaps[i];const content=keycap.getAttribute("data-unshifted-content");if(content){keycap.innerHTML=content}const command=keycap.getAttribute("data-unshifted-command");if(command){keycap.setAttribute("data-"+this.config.namespace+"command",command)}}}return false};MathField.prototype.insertAndUnshiftKeyboardLayer_=function(c){this.insert_(c);this.unshiftKeyboardLayer_();return true};MathField.prototype.toggleVirtualKeyboardAlt_=function(){let hadAltTheme=false;if(this.virtualKeyboard){hadAltTheme=this.virtualKeyboard.classList.contains("material");this.virtualKeyboard.remove();delete this.virtualKeyboard;this.virtualKeyboard=null}this.showVirtualKeyboard_(hadAltTheme?"":"material");return false};MathField.prototype.toggleVirtualKeyboardShift_=function(){this.config.virtualKeyboardLayout={qwerty:"azerty",azerty:"qwertz",qwertz:"dvorak",dvorak:"colemak",colemak:"qwerty"}[this.config.virtualKeyboardLayout];let layer=this.virtualKeyboard?this.virtualKeyboard.querySelector("div.keyboard-layer.is-visible"):null;layer=layer?layer.id:"";if(this.virtualKeyboard){this.virtualKeyboard.remove();delete this.virtualKeyboard;this.virtualKeyboard=null}this.showVirtualKeyboard_();if(layer)this.switchKeyboardLayer_(layer);return false};MathField.prototype.showVirtualKeyboard_=function(theme){this.virtualKeyboardVisible=false;this.toggleVirtualKeyboard_(theme);return false};MathField.prototype.hideVirtualKeyboard_=function(){this.virtualKeyboardVisible=true;this.toggleVirtualKeyboard_();return false};MathField.prototype.toggleVirtualKeyboard_=function(theme){this.virtualKeyboardVisible=!this.virtualKeyboardVisible;if(this.virtualKeyboardVisible){if(this.virtualKeyboard){this.virtualKeyboard.classList.add("is-visible")}else{this.virtualKeyboard=VirtualKeyboard.make(this,theme);on(this.virtualKeyboard,"touchstart:passive mousedown",function(){that.$focus()});document.body.appendChild(this.virtualKeyboard)}const that=this;window.setTimeout(function(){that.virtualKeyboard.classList.add("is-visible")},1)}else if(this.virtualKeyboard){this.virtualKeyboard.classList.remove("is-visible")}if(typeof this.config.onVirtualKeyboardToggle==="function"){this.config.onVirtualKeyboardToggle(this,this.virtualKeyboardVisible,this.virtualKeyboard)}return false};function validateStyle(style){const result={};if(typeof style.mode==="string"){result.mode=style.mode.toLowerCase();console.assert(result.mode==="math"||result.mode==="text"||result.mode==="command")}if(typeof style.color==="string"){result.color=style.color}if(typeof style.backgroundColor==="string"){result.backgroundColor=style.backgroundColor}if(typeof style.fontFamily==="string"){result.fontFamily=style.fontFamily}if(typeof style.series==="string"){result.fontSeries=style.series}if(typeof style.fontSeries==="string"){result.fontSeries=style.fontSeries.toLowerCase()}if(result.fontSeries){result.fontSeries={bold:"b",medium:"m",normal:"mn"}[result.fontSeries]||result.fontSeries}if(typeof style.shape==="string"){result.fontShape=style.shape}if(typeof style.fontShape==="string"){result.fontShape=style.fontShape.toLowerCase()}if(result.fontShape){result.fontShape={italic:"it",up:"n",upright:"n",normal:"n"}[result.fontShape]||result.fontShape}if(typeof style.size==="string"){result.fontSize=style.size}else if(typeof style.size==="number"){result.fontSize="size"+Math.min(0,Math.max(10,style.size))}if(typeof style.fontSize==="string"){result.fontSize=style.fontSize.toLowerCase()}if(result.fontSize){result.fontSize={tiny:"size1",scriptsize:"size2",footnotesize:"size3",small:"size4",normal:"size5",normalsize:"size5",large:"size6",Large:"size7",LARGE:"size8",huge:"size9",Huge:"size10"}[result.fontSize]||result.fontSize}return result}MathField.prototype.$applyStyle=function(style){this._resetKeystrokeBuffer();style=validateStyle(style);if(style.mode){if(this.mathlist.isCollapsed()){this.switchMode_(style.mode)}else{const previousMode=this.mode;const targetMode=(this.mathlist.anchorMode()||this.config.default)==="math"?"text":"math";let convertedSelection=this.$selectedText("ASCIIMath");if(targetMode==="math"&&/^"[^"]+"$/.test(convertedSelection)){convertedSelection=convertedSelection.slice(1,-1)}this.$insert(convertedSelection,{mode:targetMode,selectionMode:"item",format:targetMode==="text"?"text":"ASCIIMath"});this.mode=targetMode;if(this.groupIsSelected()){const parent=this.mathlist.parent();if(parent&&(parent.type==="group"||parent.type==="root")){parent.mode=targetMode}}if(this.mode!==previousMode&&typeof this.config.onModeChange==="function"){this.config.onModeChange(this,this.mode)}}delete style.mode}if(this.mathlist.isCollapsed()){if(this.style.fontSeries&&style.fontSeries===this.style.fontSeries){style.fontSeries="auto"}if(style.fontShape&&style.fontShape===this.style.fontShape){style.fontShape="auto"}if(style.color&&style.color===this.style.color){style.color="none"}if(style.backgroundColor&&style.backgroundColor===this.style.backgroundColor){style.backgroundColor="none"}if(style.fontSize&&style.fontSize===this.style.fontSize){style.fontSize="auto"}this.style={...this.style,...style}}else{this.mathlist.applyStyle_(style);this.undoManager.snapshot(this.config)}return true};MathField.prototype.$hasFocus=function(){return document.hasFocus()&&document.activeElement===this.textarea};MathField.prototype.$focus=function(){if(!this.$hasFocus()){if(this.textarea.focus)this.textarea.focus();this._announce("line")}};MathField.prototype.$blur=function(){if(this.$hasFocus()){if(this.textarea.blur){this.textarea.blur()}}};MathField.prototype.$select=function(){this.mathlist.selectAll_()};MathField.prototype.$clearSelection=function(){this.mathlist.delete_()};MathField.prototype.$keystroke=function(keys,evt){return this._onKeystroke(keys,evt)};MathField.prototype.$typedText=function(text){this._onTypedText(text)};MathField.prototype.typedText_=function(text,options){return this._onTypedText(text,options)};MathField.prototype.$setConfig=function(conf){if(!this.config){this.config={smartFence:true,smartSuperscript:true,scriptDepth:[Infinity,Infinity],removeExtraneousParentheses:true,overrideDefaultInlineShortcuts:false,virtualKeyboard:"",virtualKeyboardLayout:"qwerty",namespace:""}}this.config={...this.config,...conf};if(this.config.scriptDepth!==undefined&&!Array.isArray(this.config.scriptDepth)){const depth=parseInt(this.config.scriptDepth);this.config.scriptDepth=[depth,depth]}if(typeof this.config.removeExtraneousParentheses==="undefined"){this.config.removeExtraneousParentheses=true}this.config.onAnnounce=conf.onAnnounce||_onAnnounce;this.config.macros=Object.assign({},Definitions.MACROS,this.config.macros);if(this.config.namespace&&!/^[a-z]*[-]?$/.test(this.config.namespace)){throw Error("options.namespace must be a string of lowercase characters only")}if(this.config.namespace&&!/-$/.test(this.config.namespace)){this.config.namespace+="-"}l10n.locale=this.config.locale||l10n.locale;l10n.merge(this.config.strings);this.config.virtualKeyboardLayout=conf.virtualKeyboardLayout||{fr:"azerty",be:"azerty",al:"qwertz",ba:"qwertz",cz:"qwertz",de:"qwertz",hu:"qwertz",sk:"qwertz",ch:"qwertz"}[l10n.locale.substring(0,2)]||"qwerty";this.keypressSound=undefined;this.spacebarKeypressSound=undefined;this.returnKeypressSound=undefined;this.deleteKeypressSound=undefined;if(this.config.keypressSound){if(typeof this.config.keypressSound==="string"){this.keypressSound=new Audio;this.keypressSound.preload="none";this.keypressSound.src=this.config.keypressSound;this.keypressSound.volume=AUDIO_FEEDBACK_VOLUME;this.spacebarKeypressSound=this.keypressSound;this.returnKeypressSound=this.keypressSound;this.deleteKeypressSound=this.keypressSound}else{console.assert(this.config.keypressSound.default);this.keypressSound=new Audio;this.keypressSound.preload="none";this.keypressSound.src=this.config.keypressSound.default;this.keypressSound.volume=AUDIO_FEEDBACK_VOLUME;this.spacebarKeypressSound=this.keypressSound;this.returnKeypressSound=this.keypressSound;this.deleteKeypressSound=this.keypressSound;if(this.config.keypressSound.spacebar){this.spacebarKeypressSound=new Audio;this.spacebarKeypressSound.preload="none";this.spacebarKeypressSound.src=this.config.keypressSound.spacebar;this.spacebarKeypressSound.volume=AUDIO_FEEDBACK_VOLUME}if(this.config.keypressSound.return){this.returnKeypressSound=new Audio;this.returnKeypressSound.preload="none";this.returnKeypressSound.src=this.config.keypressSound.return;this.returnKeypressSound.volume=AUDIO_FEEDBACK_VOLUME}if(this.config.keypressSound.delete){this.deleteKeypressSound=new Audio;this.deleteKeypressSound.preload="none";this.deleteKeypressSound.src=this.config.keypressSound.delete;this.deleteKeypressSound.volume=AUDIO_FEEDBACK_VOLUME}}}if(this.config.plonkSound){this.plonkSound=new Audio;this.plonkSound.preload="none";this.plonkSound.src=this.config.plonkSound;this.plonkSound.volume=AUDIO_FEEDBACK_VOLUME}};MathField.prototype.speak_=function(amount,speakOptions){speakOptions=speakOptions||{withHighlighting:false};function getAtoms(mathField,amount){let result=null;switch(amount){case"all":result=mathField.mathlist.root;break;case"selection":if(!mathField.mathlist.isCollapsed()){result=mathField.mathlist.getSelectedAtoms()}break;case"left":{const siblings=mathField.mathlist.siblings();const last=mathField.mathlist.startOffset();if(last>=1){result=[];for(let i=1;i<=last;i++){result.push(siblings[i])}}break}case"right":{const siblings=mathField.mathlist.siblings();const first=mathField.mathlist.endOffset()+1;if(first<=siblings.length-1){result=[];for(let i=first;i<=siblings.length-1;i++){result.push(siblings[i])}}break}case"start":case"end":break;case"group":result=mathField.mathlist.siblings();break;case"parent":{const parent=mathField.mathlist.parent();if(parent&&parent.type!=="root"){result=mathField.mathlist.parent()}break}default:console.log('unknown atom type "'+mathField.type+'"');break}return result}function getFailedSpeech(amount){let result="";switch(amount){case"all":console.log("Internal failure: speak all failed");break;case"selection":result="no selection";break;case"left":result="at start";break;case"right":result="at end";break;case"group":console.log("Internal failure: speak group failed");break;case"parent":result="no parent";break;default:console.log('unknown speak_ param value: "'+amount+'"');break}return result}const atoms=getAtoms(this,amount);if(atoms===null){this.config.handleSpeak(getFailedSpeech(amount));return false}const options={...this.config};if(speakOptions.withHighlighting||options.speechEngine==="amazon"){options.textToSpeechMarkup=window.sre&&options.textToSpeechRules==="sre"?"ssml_step":"ssml";if(speakOptions.withHighlighting){options.generateID=true}}const text=MathAtom$1.toSpeakableText(atoms,options);if(speakOptions.withHighlighting){window.mathlive.readAloudMathField=this;this._render({forHighlighting:true});if(this.config.handleReadAloud){this.config.handleReadAloud(this.field,text,this.config)}}else{if(this.config.handleSpeak){this.config.handleSpeak(text,options)}}return false};var MathField$1={MathField:MathField};function findEndOfMath(delimiter,text,startIndex){let index=startIndex;let braceLevel=0;const delimLength=delimiter.length;while(index<text.length){const character=text[index];if(braceLevel<=0&&text.slice(index,index+delimLength)===delimiter){return index}else if(character==="\\"){index++}else if(character==="{"){braceLevel++}else if(character==="}"){braceLevel--}index++}return-1}function splitAtDelimiters(startData,leftDelim,rightDelim,mathstyle){const finalData=[];for(let i=0;i<startData.length;i++){if(startData[i].type==="text"){const text=startData[i].data;let lookingForLeft=true;let currIndex=0;let nextIndex;nextIndex=text.indexOf(leftDelim);if(nextIndex!==-1){currIndex=nextIndex;if(currIndex>0){finalData.push({type:"text",data:text.slice(0,currIndex)})}lookingForLeft=false}let done=false;while(!done){if(lookingForLeft){nextIndex=text.indexOf(leftDelim,currIndex);if(nextIndex===-1){done=true;break}if(currIndex!==nextIndex){finalData.push({type:"text",data:text.slice(currIndex,nextIndex)})}currIndex=nextIndex}else{nextIndex=findEndOfMath(rightDelim,text,currIndex+leftDelim.length);if(nextIndex===-1){done=true;break}finalData.push({type:"math",data:text.slice(currIndex+leftDelim.length,nextIndex),rawData:text.slice(currIndex,nextIndex+rightDelim.length),mathstyle:mathstyle});currIndex=nextIndex+rightDelim.length}lookingForLeft=!lookingForLeft}if(currIndex<text.length){finalData.push({type:"text",data:text.slice(currIndex)})}}else{finalData.push(startData[i])}}return finalData}function splitWithDelimiters(text,delimiters){let data=[{type:"text",data:text}];for(let i=0;i<delimiters.inline.length;i++){const delimiter=delimiters.inline[i];data=splitAtDelimiters(data,delimiter[0],delimiter[1],"textstyle")}for(let i=0;i<delimiters.display.length;i++){const delimiter=delimiters.display[i];data=splitAtDelimiters(data,delimiter[0],delimiter[1],"displaystyle")}return data}function createMathMLNode(latex,options){const span=document.createElement("span");try{span.innerHTML="<math xmlns='http://www.w3.org/1998/Math/MathML'>"+options.renderToMathML(latex,options)+"</math>"}catch(e){console.error("Could not convert'"+latex+"' to MathML with ",e);span.textContent=latex}span.className="sr-only";return span}function createMarkupNode(text,options,mathstyle,createNodeOnFailure){let span=document.createElement("span");span.setAttribute("aria-hidden","true");if(options.preserveOriginalContent){span.setAttribute("data-"+options.namespace+"original-content",text);if(mathstyle){span.setAttribute("data-"+options.namespace+"original-mathstyle",mathstyle)}}try{span.innerHTML=options.renderToMarkup(text,mathstyle||"displaystyle","html",options.macros,options.onCreateMathlist)}catch(e){console.error("Could not parse'"+text+"' with ",e);if(createNodeOnFailure){span=document.createTextNode(text)}else{return null}}return span}function createAccessibleMarkupPair(text,mathstyle,options,createNodeOnFailure){const markupNode=createMarkupNode(text,options,mathstyle,createNodeOnFailure);if(markupNode&&/\b(mathml|speakable-text)\b/i.test(options.renderAccessibleContent)){const fragment=document.createDocumentFragment();if(/\bmathml\b/i.test(options.renderAccessibleContent)&&options.renderToMathML){fragment.appendChild(createMathMLNode(text,options))}if(/\bspeakable-text\b/i.test(options.renderAccessibleContent)&&options.renderToSpeakableText){const span=document.createElement("span");span.innerHTML=options.renderToSpeakableText(text,options);span.className="sr-only";fragment.appendChild(span)}fragment.appendChild(markupNode);return fragment}return markupNode}function scanText$1(text,options){let fragment=null;if(options.TeX.processEnvironments&&/^\s*\\begin/.test(text)){fragment=document.createDocumentFragment();fragment.appendChild(createAccessibleMarkupPair(text,undefined,options,true))}else{const data=splitWithDelimiters(text,options.TeX.delimiters);if(data.length===1&&data[0].type==="text"){return null}fragment=document.createDocumentFragment();for(let i=0;i<data.length;i++){if(data[i].type==="text"){fragment.appendChild(document.createTextNode(data[i].data))}else{fragment.appendChild(createAccessibleMarkupPair(data[i].data,data[i].mathstyle,options,true))}}}return fragment}function scanElement(elem,options){const originalContent=elem.getAttribute("data-"+options.namespace+"original-content");if(originalContent){const mathstyle=elem.getAttribute("data-"+options.namespace+"mathstyle");const span=createAccessibleMarkupPair(originalContent,mathstyle,options,false);if(span!=null){elem.textContent="";elem.appendChild(span)}return}if(elem.childNodes.length===1&&elem.childNodes[0].nodeType===3){const text=elem.childNodes[0].textContent;if(options.TeX.processEnvironments&&/^\s*\\begin/.test(text)){elem.textContent="";elem.appendChild(createAccessibleMarkupPair(text,undefined,options,true));return}const data=splitWithDelimiters(text,options.TeX.delimiters);if(data.length===1&&data[0].type==="math"){elem.textContent="";elem.appendChild(createAccessibleMarkupPair(data[0].data,data[0].mathstyle,options,true));return}else if(data.length===1&&data[0].type==="text"){return}}for(let i=0;i<elem.childNodes.length;i++){const childNode=elem.childNodes[i];if(childNode.nodeType===3){const frag=scanText$1(childNode.textContent,options);if(frag){i+=frag.childNodes.length-1;elem.replaceChild(frag,childNode)}}else if(childNode.nodeType===1){const tag=childNode.nodeName.toLowerCase();if(tag==="script"&&options.processScriptTypePattern.test(childNode.type)){let style="displaystyle";for(const l of childNode.type.split(";")){const v=l.split("=");if(v[0].toLowerCase()==="mode"){if(v[1].toLoweCase()==="display"){style="displaystyle"}else{style="textstyle"}}}const span=createAccessibleMarkupPair(childNode.textContent,style,options,true);i+=span.childNodes.length-1;childNode.parentNode.replaceChild(span,childNode)}else{const shouldRender=options.processClassPattern.test(childNode.className)||!(options.skipTags.includes(tag)||options.ignoreClassPattern.test(childNode.className));if(shouldRender){scanElement(childNode,options)}}}}}const defaultOptions={namespace:"",skipTags:["noscript","style","textarea","pre","code","annotation","annotation-xml"],processScriptType:"math/tex",ignoreClass:"tex2jax_ignore",processClass:"tex2jax_process",preserveOriginalContent:true,renderAccessibleContent:"mathml",TeX:{disabled:false,processEnvironments:true,delimiters:{inline:[["\\(","\\)"]],display:[["$$","$$"],["\\[","\\]"]]}}};function renderMathInElement(elem,options){try{options=Object.assign({},defaultOptions,options);options.ignoreClassPattern=new RegExp(options.ignoreClass);options.processClassPattern=new RegExp(options.processClass);options.processScriptTypePattern=new RegExp(options.processScriptType);options.macros=Definitions.MACROS;if(options.namespace){if(!/^[a-z]+[-]?$/.test(options.namespace)){throw Error("options.namespace must be a string of lowercase characters only")}if(!/-$/.test(options.namespace)){options.namespace+="-"}}scanElement(elem,options)}catch(e){if(e instanceof Error){console.error("renderMathInElement(): "+e.message)}else{console.error("renderMathInElement(): Could not render math for element "+elem)}}}var AutoRender={renderMathInElement:renderMathInElement};function toMathlist(latex,macros){const mathlist=ParserModule.parseTokens(Lexer$1.tokenize(latex),"math",null,macros);return mathlist}function toMarkup(text,mathstyle,format,macros,onCreateMathlist){mathstyle=mathstyle||"displaystyle";console.assert(/displaystyle|textstyle|scriptstyle|scriptscriptstyle/.test(mathstyle),"Invalid style:",mathstyle);const mathlist=toMathlist(text,macros);if(onCreateMathlist){onCreateMathlist(mathlist)}if(format==="mathlist")return mathlist;let spans=MathAtom$1.decompose({mathstyle:mathstyle},mathlist);spans=Span$1.coalesce(spans);if(format==="span")return spans;const base=Span$1.makeSpan(spans,"ML__base");const topStrut=Span$1.makeSpan("","ML__strut");topStrut.setStyle("height",base.height,"em");const struts=[topStrut];if(base.depth!==0){const bottomStrut=Span$1.makeSpan("","ML__strut--bottom");bottomStrut.setStyle("height",base.height+base.depth,"em");bottomStrut.setStyle("vertical-align",-base.depth,"em");struts.push(bottomStrut)}struts.push(base);const wrapper=Span$1.makeSpan(struts,"ML__mathlive");return wrapper.toMarkup()}function makeMathField(element,config){if(!MathField$1){throw Error("The MathField module is not loaded.")}config=config||{};config.handleSpeak=config.handleSpeak||speak;config.handleReadAloud=config.handleReadAloud||readAloud;return new MathField$1.MathField(getElement(element),config)}function toMathML$1(latex,options){if(!MathAtom$1.toMathML){console.warn("The MathML module is not loaded.");return""}options=options||{};options.macros=options.macros||{};Object.assign(options.macros,Definitions.MACROS);const mathlist=toMathlist(latex,options.macros);return MathAtom$1.toMathML(mathlist,options)}function latexToAST(latex,options){if(!MathAtom$1.toAST){console.warn("The AST module is not loaded.");return{}}options=options||{};options.macros=options.macros||{};Object.assign(options.macros,Definitions.MACROS);const mathlist=toMathlist(latex,options.macros);return MathAtom$1.toAST(mathlist,options)}function astToLatex(ast,options){options=options||{};return Maston.asLatex(ast,options)}function latexToSpeakableText(latex,options){if(!MathAtom$1.toSpeakableText){console.warn("The outputSpokenText module is not loaded.");return""}options=options||{};options.macros=options.macros||{};Object.assign(options.macros,Definitions.MACROS);const mathlist=ParserModule.parseTokens(Lexer$1.tokenize(latex),"math",null,options.macros);return MathAtom$1.toSpeakableText(mathlist,options)}function removeHighlight(node){node.classList.remove("highlight");if(node.children){Array.from(node.children).forEach(x=>{removeHighlight(x)})}}function highlightAtomID(node,atomID){if(!atomID||node.dataset.atomId===atomID){node.classList.add("highlight");if(node.children&&node.children.length>0){Array.from(node.children).forEach(x=>{highlightAtomID(x)})}}else{node.classList.remove("highlight");if(node.children&&node.children.length>0){Array.from(node.children).forEach(x=>{highlightAtomID(x,atomID)})}}}function speak(text,config){if(!config&&window&&window.mathlive){config=window.mathlive.config}config=config||{};if(!config.speechEngine||config.speechEngine==="local"){const utterance=new SpeechSynthesisUtterance(text);if(window){window.speechSynthesis.speak(utterance)}else{console.log("Speak: ",text)}}else if(config.speechEngine==="amazon"){if(!window||!window.AWS){console.warn("AWS SDK not loaded. See https://www.npmjs.com/package/aws-sdk")}else{const polly=new window.AWS.Polly({apiVersion:"2016-06-10"});const params={OutputFormat:"mp3",VoiceId:config.speechEngineVoice||"Joanna",Text:text,TextType:"ssml"};polly.synthesizeSpeech(params,function(err,data){if(err){console.warn("polly.synthesizeSpeech() error:",err,err.stack)}else{if(data&&data.AudioStream){const uInt8Array=new Uint8Array(data.AudioStream);const blob=new Blob([uInt8Array.buffer],{type:"audio/mpeg"});const url=URL.createObjectURL(blob);const audioElement=new Audio(url);audioElement.play().catch(err=>console.log(err))}else{console.log("polly.synthesizeSpeech():"+data)}}})}}else if(config.speechEngine==="google"){console.warn("The Google speech engine is not supported yet. Please come again.")}}function readAloud(element,text,config){if(!window){return}if(!config&&window.mathlive){config=window.mathlive.config}config=config||{};if(config.speechEngine!=="amazon"){console.warn("Use Amazon TTS Engine for synchronized highlighting");if(config.handleSpeak)config.handleSpeak(text);return}if(!window.AWS){console.warn("AWS SDK not loaded. See https://www.npmjs.com/package/aws-sdk");return}const polly=new window.AWS.Polly({apiVersion:"2016-06-10"});const params={OutputFormat:"json",VoiceId:config.speechEngineVoice||"Joanna",Text:text,TextType:"ssml",SpeechMarkTypes:["ssml"]};window.mathlive=window.mathlive||{};window.mathlive.readAloudElement=element;const status=config.onReadAloudStatus||window.mathlive.onReadAloudStatus;polly.synthesizeSpeech(params,function(err,data){if(err){console.warn("polly.synthesizeSpeech() error:",err,err.stack)}else{if(data&&data.AudioStream){const response=new TextDecoder("utf-8").decode(new Uint8Array(data.AudioStream));window.mathlive.readAloudMarks=response.split("\n").map(x=>x?JSON.parse(x):{});window.mathlive.readAloudTokens=[];for(const mark of window.mathlive.readAloudMarks){if(mark.value){window.mathlive.readAloudTokens.push(mark.value)}}window.mathlive.readAloudCurrentMark="";params.OutputFormat="mp3";params.SpeechMarkTypes=[];polly.synthesizeSpeech(params,function(err,data){if(err){console.warn("polly.synthesizeSpeech(",text,") error:",err,err.stack)}else{if(data&&data.AudioStream){const uInt8Array=new Uint8Array(data.AudioStream);const blob=new Blob([uInt8Array.buffer],{type:"audio/mpeg"});const url=URL.createObjectURL(blob);if(!window.mathlive.readAloudAudio){window.mathlive.readAloudAudio=new Audio;window.mathlive.readAloudAudio.addEventListener("ended",()=>{if(status)status(window.mathlive.readAloudMathField,"ended");if(window.mathlive.readAloudMathField){window.mathlive.readAloudMathField._render();window.mathlive.readAloudElement=null;window.mathlive.readAloudMathField=null;window.mathlive.readAloudTokens=[];window.mathlive.readAloudMarks=[];window.mathlive.readAloudCurrentMark=""}else{removeHighlight(window.mathlive.readAloudElement)}});window.mathlive.readAloudAudio.addEventListener("timeupdate",()=>{let value="";const target=window.mathlive.readAloudAudio.currentTime*1e3+100;for(const mark of window.mathlive.readAloudMarks){if(mark.time<target){value=mark.value}}if(window.mathlive.readAloudCurrentMark!==value){window.mathlive.readAloudCurrentToken=value;if(value&&value===window.mathlive.readAloudFinalToken){window.mathlive.readAloudAudio.pause()}else{window.mathlive.readAloudCurrentMark=value;highlightAtomID(window.mathlive.readAloudElement,window.mathlive.readAloudCurrentMark)}}})}else{window.mathlive.readAloudAudio.pause()}window.mathlive.readAloudAudio.src=url;if(status){status(window.mathlive.readAloudMathField,"playing")}window.mathlive.readAloudAudio.play()}}})}else{console.log("polly.synthesizeSpeech():"+data)}}})}function readAloudStatus(){if(!window)return"unavailable";window.mathlive=window.mathlive||{};if(!window.mathlive.readAloudAudio)return"ready";if(window.mathlive.readAloudAudio.paused)return"paused";if(!window.mathlive.readAloudAudio.ended)return"playing";return"ready"}function pauseReadAloud(){if(!window)return;window.mathlive=window.mathlive||{};if(window.mathlive.readAloudAudio){if(window.mathlive.onReadAloudStatus){window.mathlive.onReadAloudStatus(window.mathlive.readAloudMathField,"paused")}window.mathlive.readAloudAudio.pause()}}function resumeReadAloud(){if(!window)return;window.mathlive=window.mathlive||{};if(window.mathlive.readAloudAudio){if(window.mathlive.onReadAloudStatus){window.mathlive.onReadAloudStatus(window.mathlive.readAloudMathField,"playing")}window.mathlive.readAloudAudio.play()}}function playReadAloud(token,count){if(!window)return;window.mathlive=window.mathlive||{};if(window.mathlive.readAloudAudio){let timeIndex=0;window.mathlive.readAloudFinalToken=null;if(token){window.mathlive.readAloudMarks=window.mathlive.readAloudMarks||[];for(const mark of window.mathlive.readAloudMarks){if(mark.value===token){timeIndex=mark.time/1e3}}let tokenIndex=window.mathlive.readAloudTokens.indexOf(token);if(tokenIndex>=0){tokenIndex+=count;if(tokenIndex<window.mathlive.readAloudTokens.length){window.mathlive.readAloudFinalToken=tokenIndex}}}window.mathlive.readAloudAudio.currentTime=timeIndex;if(window.mathlive.onReadAloudStatus){window.mathlive.onReadAloudStatus(window.mathlive.readAloudMathField,"playing")}window.mathlive.readAloudAudio.play()}}function renderMathInDocument(options){renderMathInElement$1(document.body,options)}function getElement(element){let result=element;if(typeof element==="string"){result=document.getElementById(element);if(!result){throw Error(`The element with ID "${element}" could not be found.`)}}return result}function renderMathInElement$1(element,options){if(!AutoRender){console.warn("The AutoRender module is not loaded.");return}options=options||{};options.renderToMarkup=options.renderToMarkup||toMarkup;options.renderToMathML=options.renderToMathML||toMathML$1;options.renderToSpeakableText=options.renderToSpeakableText||latexToSpeakableText;options.macros=options.macros||Definitions.MACROS;AutoRender.renderMathInElement(getElement(element),options)}function validateNamespace(options){if(options.namespace){if(!/^[a-z]+[-]?$/.test(options.namespace)){throw Error("options.namespace must be a string of lowercase characters only")}if(!/-$/.test(options.namespace)){options.namespace+="-"}}}function revertToOriginalContent(element,options){element=getElement(element);element=element.children[1];if(element instanceof MathField$1.MathField){element.revertToOriginalContent()}else{options=options||{};validateNamespace(options);element.innerHTML=element.getAttribute("data-"+(options.namespace||"")+"original-content")}}function getOriginalContent(element,options){element=getElement(element);element=element.children[1];if(element instanceof MathField$1.MathField){return element.originalContent}options=options||{};validateNamespace(options);return element.getAttribute("data-"+(options.namespace||"")+"original-content")}const MathLive={latexToMathlist:toMathlist,latexToMarkup:toMarkup,latexToMathML:toMathML$1,latexToSpeakableText:latexToSpeakableText,latexToAST:latexToAST,astToLatex:astToLatex,makeMathField:makeMathField,renderMathInDocument:renderMathInDocument,renderMathInElement:renderMathInElement$1,revertToOriginalContent:revertToOriginalContent,getOriginalContent:getOriginalContent,readAloud:readAloud,readAloudStatus:readAloudStatus,pauseReadAloud:pauseReadAloud,resumeReadAloud:resumeReadAloud,playReadAloud:playReadAloud,MathAtom:MathAtom$1};return MathLive});
